<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7a797db4-9d5d-436f-9e27-919d62fcad7f" activeEnvironment="Default" name="Infinite Auth" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite id="beed602b-191a-4d5d-9443-0c1af9470544" name="Infinite Auth"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4c69d69e-616a-4b39-892a-9af793c3467d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Infinite Auth" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Init Data" id="70edc71c-71e4-43c6-b2a4-7ecc4f5c4b1f"><con:settings/><con:config><script>//context.username = "Daniyal@wirecard.com"
//context.password = "Test@678"
//context.username = "mobileapp6@wirecard.com"
//context.password = "Wdp@12345"
//context.fiid = 1150
//context.fiid = 1150
context.fiid=1340
context.username="daniyalmobile@wirecard.com"
context.password="Wdp@01234"
context.DOB = "1991-01-01T00:00:00"</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous" id="ceca378a-b04b-44d9-b090-c9a2b90461d6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="740682bb-f197-42b3-a012-3b1ad1a60a1b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
context.anonymous_token = l_slurped_json[0].token
assert l_slurped_json[0].token !=""</script></con:config></con:testStep><con:testStep type="httprequest" name="Read" id="4b750057-4ded-402f-83ed-8cb3b06bf5c4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Read" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.anonymous_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="a5881d30-881f-4e8d-9c65-871f5d1213d2"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
if (l_slurped_json[0].authorization_name=="Refresh") {
	context.refresh_token = l_slurped_json[0].token
	context.read_token = l_slurped_json[1].token
} else {
	context.refresh_token = l_slurped_json[1].token
	context.read_token = l_slurped_json[0].token
}
context.proxy_number = l_slurped_json[0].scope.data_scope.proxy_number</script></con:config></con:testStep><con:testStep type="httprequest" name="Read Refresh" id="a2ffcf0a-119f-4962-b58a-2c280c211acb"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Read Refresh" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of Refresh Data",
      "authentications": [
        {
          "authentication_name": "Refresh_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "old_access_token": "${=context.read_token}"
          },
          "private_data": {
            "refresh_token": "${=context.refresh_token}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.anonymous_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Refresh Response" id="fa90b706-cfee-49c8-a52a-4f055a0ab7d5"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
if (l_slurped_json[0].authorization_name=="Refresh") {
	context.refresh_token = l_slurped_json[0].token
	context.read_token = l_slurped_json[1].token
} else {
	context.refresh_token = l_slurped_json[1].token
	context.read_token = l_slurped_json[0].token
}
assert context.refresh_token != ""
assert context.read_token != ""</script></con:config></con:testStep><con:testStep type="groovy" name="Prepare Provisioned User Data Usage" id="91ccae96-0552-4f32-af01-55aece405cc2"><con:settings/><con:config><script>package authentication_modules

import sun.misc.BASE64Decoder
import sun.misc.BASE64Encoder

import java.security.Signature;
import java.security.GeneralSecurityException
import java.security.KeyFactory
import java.security.KeyPair
import java.security.KeyPairGenerator
import java.security.PrivateKey
import java.security.PublicKey
import java.security.spec.PKCS8EncodedKeySpec
import java.security.spec.X509EncodedKeySpec
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;

import javax.crypto.Cipher;


public static PrivateKey loadPrivateKey(String key64) throws GeneralSecurityException {
    byte[] clear = new BASE64Decoder().decodeBuffer(key64);
    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(clear);
    KeyFactory fact = KeyFactory.getInstance("RSA");
    PrivateKey priv = fact.generatePrivate(keySpec);
    Arrays.fill(clear, (byte) 0);
    return priv;
}


public static PublicKey loadPublicKey(String stored) throws GeneralSecurityException {
    byte[] data = new BASE64Decoder().decodeBuffer(stored);
    X509EncodedKeySpec spec = new X509EncodedKeySpec(data);
    KeyFactory fact = KeyFactory.getInstance("RSA");
    return fact.generatePublic(spec);
}

public static String savePrivateKey(PrivateKey priv) throws GeneralSecurityException {
    KeyFactory fact = KeyFactory.getInstance("RSA");
    PKCS8EncodedKeySpec spec = fact.getKeySpec(priv,
            PKCS8EncodedKeySpec.class);
    byte[] packed = spec.getEncoded();
    String key64 = new BASE64Encoder().encode(packed);

    Arrays.fill(packed, (byte) 0);
    return key64;
}


public static String savePublicKey(PublicKey publ) throws GeneralSecurityException {
    KeyFactory fact = KeyFactory.getInstance("RSA");
    X509EncodedKeySpec spec = fact.getKeySpec(publ,
            X509EncodedKeySpec.class);
    return new BASE64Encoder().encode(spec.getEncoded());
}


public static void main(String[] args) throws Exception {
    KeyPairGenerator gen = KeyPairGenerator.getInstance("RSA");
    KeyPair pair = gen.generateKeyPair();

    String pubKey = savePublicKey(pair.getPublic());
    PublicKey pubSaved = loadPublicKey(pubKey);
    System.out.println(pair.getPublic()+"\n"+pubSaved);

    String privKey = savePrivateKey(pair.getPrivate());
    PrivateKey privSaved = loadPrivateKey(privKey);
    System.out.println(pair.getPrivate()+"\n"+privSaved);
}

public static KeyPair buildKeyPair() throws NoSuchAlgorithmException {
    final int keySize = 2048;
    KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
    keyPairGenerator.initialize(keySize);
    return keyPairGenerator.genKeyPair();
}

public static byte[] encrypt(PrivateKey privateKey, String message) throws Exception {
    Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
    cipher.init(Cipher.ENCRYPT_MODE, privateKey);

    return cipher.doFinal(message.getBytes());
}

public static byte[] sign(PrivateKey privateKey, String message) throws Exception {
    Signature signature = Signature.getInstance("SHA512withRSA");
    signature.initSign(privateKey);
    signature.update(message.getBytes("US-ASCII"))
    return signature.sign()
}

public static byte[] decrypt(PublicKey publicKey, byte [] encrypted) throws Exception {
    Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
    cipher.init(Cipher.DECRYPT_MODE, publicKey);

    return cipher.doFinal(encrypted);
}
public static Boolean verify(PublicKey publicKey, byte[] bytes, String data) throws Exception {
    Signature signature = Signature.getInstance("SHA512withRSA");
    signature.initVerify(publicKey);
    signature.update(data.getBytes("US-ASCII"))
    return signature.verify(bytes)
}
def l_key_pair = buildKeyPair()
def l_private_key = l_key_pair.getPrivate()
def l_public_key = l_key_pair.getPublic()
context.private_key = savePrivateKey(l_private_key).replaceAll("(?:\\r\\n|\\n\\r|\\n|\\r)", "")
context.public_key = savePublicKey(l_key_pair.getPublic()).replaceAll("(?:\\r\\n|\\n\\r|\\n|\\r)", "")
context.provisioning_unique_id = "MDWL"+new Date().format("yyMMddHHmmssSSS")
def bytes = sign(l_private_key, (context.proxy_number + context.provisioning_unique_id))
log.info(new String(bytes))
String l_signature = new BASE64Encoder().encode(bytes).replaceAll("(?:\\r\\n|\\n\\r|\\n|\\r)", "")
context.provisioned_data_signature = l_signature
log.info(context.provisioned_data_signature)
log.info(verify(l_public_key, new BASE64Decoder().decodeBuffer(l_signature), (context.proxy_number + context.provisioning_unique_id)))</script></con:config></con:testStep><con:testStep type="httprequest" name="Provisioned User Data Usage" id="6b5b6d62-d8f2-4e51-8fdb-e61140ab6a20"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Provisioned User Data Usage" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Provisioned User Data Usage",
    "identity": {
      "identity_name": "Owner of User Data and Provisioning Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "Provisioning_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "provisioning_public_key": "${=context.public_key}"
          },
          "private_data": null}
        }
      ]
    },
    "scope": {
      "scope_name": "Prerequisite Usage Only"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Provisioned User Data Usage Response" id="06372060-c748-4d9b-8b65-9ba4c082ea64"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != ""
context.provisioned_user_data_usage_authorization = l_slurped_json[0].token</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="9b981b6f-f694-4e09-862a-08fd20671523"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#ResourceURL}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=context.proxy_number}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="c0512b4d-f039-42ae-9d6f-a1e31370b5d2"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
context.otp_id = l_slurped_json.SendOTPSMSResponse.SendOTPSMSResult.OTPUniqueId
assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="60c0dde6-eee1-4e91-aa2c-e4085292fcb0"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
context.otp = alert.prompt("Enter OTP","Enter OTP")</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates" id="05729bb2-e443-4c32-a18e-754d31c84ac2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Secured Demographic Updates" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "otp_id": "${=context.otp_id}",
            "phone_number": "+971559307088"
          },
          "private_data": {
          	"otp": "${=context.otp}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates Response" id="e2667957-b3a6-48a4-8246-e02d9ca70123"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != "" </script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Provisioned User Data" id="d7abeac2-b666-4fd5-a499-aa88fccb6278"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Secured Demographic Updates - Provisioned User Data" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and Provisioned User Data",
      "authentications": [
        {
          "authentication_name": "Provisioned_user_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "provisioned_data_unique_id": "${=context.provisioning_unique_id}",
            "provisioned_user_data_usage_authorization": "${=context.provisioned_user_data_usage_authorization}"
          },
          "private_data": {
            "provisioned_data_signature": "${=context.provisioned_data_signature}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "otp_id": "${=context.otp_id}",
            "phone_number": "+971559307088"
          },
          "private_data": {
          	"otp": "${=context.otp}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Provisioned User Data Response" id="1a477bd6-567f-4755-9013-40a1c46d0f5c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != "" </script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates" id="c49ba5cb-b1ab-4e9c-a577-dac1820c65b9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Security Updates" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}"
          },
          "private_data": {
          	"DOB": "${=context.DOB}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="967f8ba9-2256-4778-aa23-801fa6dd19f7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Init Data" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Init Data" id="1fd443e3-cb3e-4ba5-8fde-7ffc48f29061"><con:settings/><con:config><script>//context.username = "Daniyal@wirecard.com"
//context.password = "Test@678"
//context.username = "mobileapp6@wirecard.com"
//context.password = "Wdp@12345"
//context.fiid = 1150
//context.fiid = 1150
context.fiid=1340
class GlobalContext {
   def static global_context = [:]
}
class WorkingConfiguration {
	String fiid
	String granting_url
	String resource_url
	String expired_token
	String revoked_token
}
Object.mixin GlobalContext
WorkingConfiguration wdi_configuration = new WorkingConfiguration(fiid: 1340, granting_url: "https://wp1.wirecard.com/emea/middleware_security", resource_url: "https://wp1.wirecard.com/emea/middleware_validation"
, expired_token: "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"
, revoked_token: "")
WorkingConfiguration wdp_configuration = new WorkingConfiguration(fiid: 1340, granting_url: "http://localhost:8089", resource_url: "http://localhost:8089"
, expired_token: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlZXVS9iUUJEK0s5WSt0U3BFUGppQzN5d3VSVzFJd0xRdkZiSVdleEsyMkx2dUhpRXU0cjkzTm5aTTRsb3F0QkJGeXU0YzM4ek9UT1o3Sk5Ub095SFpMNnFaNEFtbkJaQ1FSRnp3cWhCR2taMk9BY3RJNkEzZHdIZTlJRGowQTgvemR3akxnR3VtS3hJK3R1YzExT1NCZzNURXpJblNGSlFTMGptaG1qYTQxalJkQVNzU2ZuL3N5TnBzR3M4azYvT3NwUmk1TkxjNVM5c3JYWHMxS0YvR0Y4N1k1Sm81eDBaSzRHbmxYQ0RBQWo1Y1JoOHRhc21TZ3Y1QWh3VkloY0RvNHcrV2d5WHFWQWtwbTIyQWo4YW5JOVFmSGJuNEdSNzRlNGZlY0g4UExRdkt6WXltMmtpUU52V3l6TUdLUlFhNXZYdjd3d1B5WktPVkczSGNnWWRmdE1zcG54czZ0L2tDbjZPZ3pLbWVDVm1nZ0UxaUZKeU5SaWQ0OFlJOTErS1VraTJvaGlZeGJ2SWNoVXBUamIwTFNXeFdSWmlabkR6ZFdFVXFTckQ1cnc1L2ROdUpRUzRZZXRnbjE4ZWtjY0htRklDRGdPMG41NmZYR3dZTnlEbm9HRklKK2pOVXFEWFNWbFBkb3dadk5ydGtlNUR1b2JJWlhrVDRpcjlobndrNUYvb3JTa2ZaTjVxemJBVXhwUkxWR290NHl1OG9UeUY3bjdoVHF0U0RrSDJSM3lEd2RCTDNSSTZCWjVQcmFUeU9Yd0g5Z2hmWkdsN0JuQ2t0VjY3dlZNMytSeDFUbVVXcHRnT0x2dkZybnZheUFKdHo4dGF6MEZRSy9yTXIvWWwzMi9KT2xWbFA4bHZYWnJ1eFBUTVZ4Lzg0VkRlTlFidTQycTF1aWFoaGh0Q0plT1dzTlgxYmRNTnJPNWJGMkx6WFVFZ1ZIU2NwakdZSUZaS3IrbFFiUnRQbzJMbU1XbTdyZURWWms5aitQa00vNFNiT1ROM3BSRUVxZUtaV3JPcmFmUTRTZmhxbUdDNzFUcXAydSs4UTNMRXQ3MWx3Wk9MaHJodnMrdTYxZXhRR2g2RWZERHd2K0dTWkNmT0JaY2xrMVdQc3VhSGJOZDd1ZzY3S1ovcTFqVk5ZMHlSbkJkUHJaR2FHcDlhVzVpMDFkZ2lxajR1UUQ3T0hQQUVwTFQyYjR0WnlaUTI0b2RDd2JPTm9jUTk4OVdmNkRTWWhseU95Q0FBQSJ9.qWQARZyVgO-UJhLOgvxciSc2C3Dk7-rVIQd-OU-v9UBWVdrnA887LROzVFAbunsGn58NBSabiS4nEpTdn_9xcQ"
, revoked_token: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlYyMDdiUUJEOUZXdWZXaFVpSnpFUS9HWnhVOVNHQkV6N1VpRnJzU2RoaTczcjdpWEVJUDY5czdGakhOZFNvU0pScE96TzVjenN6R1RPTTZGRzN3dkpucWhtZ2tlY1prQjhFbkRCaTB3WVJmWmFCaXdoZm4va0RnZHVmemc4OHJ5RHdXaVBzQVM0WnJvZy9uTjkza0JOSHpsSVI4eWRJSTVCS1NHZFU2cHBoV3RONHpXd0l2N1A1NWFzenFieWpKSXV6MUtLa1hOemw3SzR2dEtOVjRYeWJYTHBURXlxbVhOaXBBUWVGODRsQWl6aDAxWHcyYUxtTE1yb0wzUllnbFFJakQ2RDNxcTNRcDNLSVdiekJ2aDRjalpHL2ZHeGk1L1I0Y0E3Nm84T1BMVE1LRGR6R21zalFkclU4endGS3hZSnBQYmVQeGdka2hjYkxXL0VjWHQ5L0tKZFN2bkMwSVhORi9nQ0JYbEs5VnpJREFWc0dxTGdmRHcreFV0LzZMa1dKNWRzU1RWVWlYR1RwaWhVbW1yc25VOUNzeTdDM0tUazVkWXFZcEdEelg5OStLdmJUZ2h5eWRERFByazhScFVMTmljREhBUnNQN2s0dTJrWVZDQVhvRU9JSmVpdlVLRFdTRnROOVlBYXZObnNvdTFCZW9EQ1puZ1o0Q3YraFgwdTVFTG83eWdkSno5b3lwSTF4SXhLVkdzczRobS9wenlHWkRkeFoxU3BSeUc3SW45QTROazA3SWdjQWsrbU43TndFcjREK2kzQUoxUW1RYXp0MEtCbitCNzRONVhNTnVrYUZreHB1WGJlVWJ1Nkg5ZWNrNDkrV1BVUTJFbFgybFhiVVdVMmsvelJ0ZGtlcW82V2grRi85dnkyTXFnWFY3M1ZMUkZWek9BN0FTK2NqYVpyaXphOHRtTlpqT2E5aEVLcWFEbEpZVFJES0o5Y2w2ZlNNSmdGSjg1VlVITmJ5NnZLbW9UMjl4WDZCVGR4WXNwT1J3cGl3Uk8xWmxYWDduT1E4TnN3eFhDcHQxSzEyMzJQNEk2dGVjK0NJeE9QOXQzaC9zQzljWS85NFpIdmVUMWs1UytXbVRBZldPVk1GaDNHZmRkMzI4YmJmZEJGL2txL3RuRUtheHFsTEdONms4emM4TmphMHJTbXhoWkJkWEVSOG1IeW1FWWdwYVZuazkxWnJpd0JHd29OcXpxT0ZnL0ExMyttUC83N0dRMnlDQUFBIn0.KK5UUNMQ-6B0a_EC-LClfeuLfe2lSy01RKKtMOim92Vg1lpfrmiv9Nq2EWJ1CWVTNlHk4-LBlmOADdMIJ_ynpw")
//def current_config = wdi_configuration
def current_config = wdp_configuration
testRunner.testCase.testSuite.project.setPropertyValue("fiid", current_config.fiid)
testRunner.testCase.testSuite.project.setPropertyValue("granting_url", current_config.granting_url)
testRunner.testCase.testSuite.project.setPropertyValue("resource_url", current_config.resource_url)
testRunner.testCase.testSuite.project.setPropertyValue("expired_token", current_config.expired_token)
testRunner.testCase.testSuite.project.setPropertyValue("revoked_token", current_config.revoked_token)
testRunner.testCase.testSuite.project.setPropertyValue("username", "daniyalmobile@wirecard.com")
testRunner.testCase.testSuite.project.setPropertyValue("password", "Wdp@01234")
testRunner.testCase.testSuite.project.setPropertyValue("DOB", "1991-01-01T00:00:00")
context.username="daniyalmobile@wirecard.com"
context.password="Wdp@01234"
context.DOB = "1991-01-01T00:00:00"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d935b7a9-3ec6-4edb-a3b2-4ef57d9d9908" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Misc" searchProperties="true" disabled="true"><con:settings/><con:testStep type="httprequest" name="Validations" id="f094d8fc-255c-4ec4-90ed-e67c88934ac7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Validations" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNMVcyMjdhUUJEOUZXdWZXcFVnRzV5VStNM0tUYWdsa0RqdFN4UlpHM3NnMjlpNzdsNElUcFIvN3l3MmpxSDBncXFtUlVqc3pNNmNQVE96K1BpSlVLUHZoR1NQVkRQQlkwNXpJQUVKdWVCbExvd2luWTBBbHBMQUc3aDl6L2Y4WHQvdmU1N2JJU3dGcnBrdVNmRFVyRmRRNHdjTzBoRlRKMHdTVUVwSTU1aHFXdVBhMEdRSnJFaHcvYlRoYTlqVW1YRzZMYlB5NHNtRnVjMVkwcGgwbFZXamZCeWRPeU9UYWVZY0dTbUJKNlZ6amdCemVITVJ2cldvQll0eitnVVQ1aUFWQW1OT3I3dm9MbkJQRlpDd2FRdDhPRG9aNHY3aG9ZdWZ3VUhQZis4TjluMk16Q2szVTVwb0kwRmE2a1dSZ1hXTEZESnJlL3VEQS9Kc1R5dGE1N2hkRDc4WWwxRStNM1JtK1FLZm9hUElxSjRLbWFPRGpTTjBuQTZIeDJoWWpFS3lPZFZRaytJbXk5Q3BOTlU0dDRCRVp0bUFxY25JODQzZFNFUUJsdnR5OGQya25RamtuR0dHTGJkYXhuVUtEaVlIdkFRNGVuSjJjdFVLcUVHT3FFekRSRnMyV005bm1yRjB1WnBRaVFFYVpCU2Q4RHZLRTBneDJVamJhSFZ2cStnUVN6NWV2MlAzVU5vQ3JpM3N1Y2x2UVhhY2lSU0xzakp1c1BaZk1mcUU5aVhNbU5MeVI1elUzNk0wR1VkYk9KMEtPUlBhTWh1K1ZodmFSLzRQTFlpQXArT3JTVFNLZGpqeGQ0QTM1LzJxL1oxUXBSNkUzTmJoZjNQSFZvUmVxUXQxM2ZDSGs5MktmUVk2Z2tTQy9nRGxMdVhzMnJqMVIxaTBTeFUvYWQxTm5kYzhleHRSc2pwYUMxdmdoTHgwVmp2YlJLQ1Z0VTdCWXJUdENncVZiaU5KQ3FNWlFnWGtzbHBWZ2VFa1BISXV3a2FhTjdKcTFpU3l2eS9RenlnbXFhbitaN0dDUlBCVUxWOEtYQ3RKSU9HcllZcWhMbTFRdFFMVklUakxScll0ZU0vMUJudHVmOC96cnp3MzZQVUR2OS8xdk1FN0s2eklCeFlGaytYMjRQM040UFh4NkxKNGVYdXc4MVRZMHpoak9kTXJNbFBERXh0THMwYlpXL3E2VFVwUnl0T0hMQVlwN1p2RmNzNHJzTmFHaGtWemhoYjN3SmVJM3dEKzF4NThiUWtBQUE9PSJ9.nZpETjGFVHth9e6clWanYwyIVIqpOVPV-JdNOvMH1N0AqxnO8hpeP6Ur3smUV9RpBEYd89nCRfyDIt9sX-s35Q" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/UserRegistration</con:endpoint><con:request>{

  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Authenticate" id="60e53d7e-347b-48c0-a2ed-b378fda1cc88" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="90cdf065-0f65-4788-9608-28d00d0709cb" name="Authenticate" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://10.10.99.190:8443/middleware_2_x_x/Rest/Authenticate</con:endpoint><con:request>{"Authenticate": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yyMMddHHmmssSSS")}",
  "CardUserId": "Daniyal@wirecard.com",
  "CurrentPassword": "Test@567",
  "InstitutionID": "1150",
  "UniqueIDFlag": "0"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Provisioned User Data Usage" id="2780a0c1-3ddb-48c4-9681-e35e9f7b0f9b" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Provisioned User Data Usage" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>  {
    "authorization_name": "Provisioned User Data Usage",
    "identity": {
      "identity_name": "Owner of User Data and Provisioning Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "Daniyal@wirecard.com"
          },
          "private_data": {
            "password": "Test@567"
          }}
        },
        {
          "authentication_name": "Provisioning_data", "authentication_data": {
          "public_data": {
            "proxy_number": "3051",
            "provisioning_public_key": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiYANswx+5B5eitynXwHdVRk8Ew9X1qRx
6jAtbaNcNYN615v5zD6OmDH/UubsdgeV+rfEIyQK0kOq009sC1Ujae01IyYt/qu1MB2L6b7ABCQH
y3KEEESM6V3fR+0AVZD9v3Nq5ekXmj8NvQtIBoCol+sRkvI0KsPDd39mDN/uCgAaCoXOgpgRjE20
eUH75wV0pDMBbScPRqCte6zrdwDJsQy77CmyTclSLQS7KHyWnuxzDD8Q0p5Fsgb8uAPObWtWeAPv
i7e6AaL9mjEL/2EL6yODCzSQW1YqROHJvCKGNjbX2IOwacfqq+dd/oEAC5Al3g3atfIE8Unb4Kg2
KF2NAQIDAQAB"
          },
          "private_data": null}
        }
      ]
    },
    "scope": {
      "scope_name": "Prerequisite Usage Only"
    },
    "prerequisite_authorization": {
    	 "token": "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"
    }
  }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="6e28cd6a-4d20-4cb9-9a68-29db170e70c6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://10.10.99.190:8443/whitelabelft2_middleware_2_x_x/Rest/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "111",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="ValidateOTPSMS" id="ee8b21de-152a-4cbc-a48b-4247603d708d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="ValidateOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://10.10.99.190:8443/whitelabelft2_middleware_2_x_x/Rest/ValidateOTPSMS</con:endpoint><con:request>{
  "ValidateOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "111",
      "OTP": "681562",
      "OTPUniqueId": 2101,
      "PhoneNumber": "+971559307088",
      "AccessorId": "4"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="ChangePassword" id="a574e582-ce2d-4162-bad3-11c396f5321b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="ChangePassword" postQueryString="false" mediaType="text/xml; charset=utf-8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="SOAPAction" value="ChangePassword" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://10.10.99.24/UAT/EMEA/CoreCardServices/CoreCardServices.svc/basic</con:endpoint><con:request><![CDATA[<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/">
  <s:Body>
    <ChangePassword xmlns="www.corecard.com">
      <requestData xmlns:header="http://schemas.datacontract.org/2004/07/CoreCardServices" xmlns:d4p1="http://schemas.datacontract.org/2004/07/CoreCardServices.DTO" xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
        <LoginUser xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">api_middleware</LoginUser>
        <UserPassword xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">Wirecard1@</UserPassword>
        <IPAddress xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">10.10.98.101</IPAddress>
        <header:UniqueIDFlag>0</header:UniqueIDFlag>
        <header:UniqueID>MDWL180222222651873</header:UniqueID>
        <Source xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">YND</Source>
        <APIVersion xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">1.2</APIVersion>
        <ApplicationVersion i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <CallerID i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <CalledID i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <SessionID i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <ANI i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <DNS i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <Language i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <RequestDate i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <d4p1:ProxyNumber>1789121880857</d4p1:ProxyNumber>
        <d4p1:CurrentPassword>352593</d4p1:CurrentPassword>
        <d4p1:NewPassword>Pwd@4819</d4p1:NewPassword>
        <d4p1:ConfirmPassword>Pwd@4819</d4p1:ConfirmPassword>
      </requestData>
    </ChangePassword>
  </s:Body>
</s:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f93d6f1b-56a3-4b4e-9938-1cd239e65301" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Anonymous - Anonymous Services - Any LMN" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="56882eff-f9f3-48b1-976f-2dbbb11edc02"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="1dc4d5e2-cc52-4ffb-92ec-5c1c90291e45"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services - Any White Labeled" id="b378286a-1f6c-4e04-be11-1d105267e728"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services - Any White Labeled" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="66fbc4e2-fafd-4380-84f7-0aaf5ec077e0"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token","Bearer " + l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="94d02d1a-4736-4ad2-968b-af5e1d6560d7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="0e183c5b-1b4e-48e9-b438-a619351f4e2d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="58a315f9-d16f-41d2-9d2e-fa5228b711e4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="307c1b0e-08c7-4cbc-baea-190e9af21cf3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="2614bb13-b577-49df-b697-052964380807"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="aefe8912-ef6f-40e6-9a7c-0f3a1c18e381"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="cfa9eed9-36c0-4caa-b31d-28e14b662ea8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="27ef8d2b-5a0b-4a2d-a1e2-b152bcdbcb34"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="a5a303af-d3fe-4d43-aa49-3b2ed63763bf"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SendOTPSMS - Minor Issue exists (PhoneNumber)" id="24c4fbf4-7385-4daa-a534-d3b3b8512f11"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f200eb06-a428-41d4-875a-9bb7a442107b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ValidateOTPSMS - Minor Issue exists (PhoneNumber)" id="748abe84-04a0-406c-a16e-b482cfe8ced7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>20ea13d4-2fb2-4c30-9272-a3f42f354c81</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="45692b54-7a67-447e-a7a7-73da04683839" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Missing JWT" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="3069babc-0fa8-409b-a57a-380ff7150881"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="7d765bc8-7f5a-4b31-9f88-f5125a1bc475"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="groovy" name="Nullify JWT" id="011785cf-b95b-46be-b478-9a221429003b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}

Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", null)</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="2ed78d44-496d-4abb-a2d7-9a1a61e4dbfc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="62031752-67f0-42a9-ad36-6ef2db12fa63"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="15c86049-ee38-4fde-a90e-b6dbd4fd2e43"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="5881c97f-cad1-4fc0-91f8-d8ad616e5eb3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="ab869c0e-20ba-41e5-9991-4adc4b4373de"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="55c236a5-7435-437c-9417-a2e9367b4757"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="5c35d7d5-cf40-4c14-bf31-440b482b50db"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="02c01792-5bac-4136-a265-57f984c872d4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="83be95ae-6e16-43f7-ad7f-96ae0ed349cb"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a23e3d20-13a2-4143-b505-877af5914223" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Invalid JWT" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="2d275bd4-d24f-4ee2-bbcc-0b49c0bfb34c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="78153e75-e8e3-4aa9-b1c4-d0f3057a6d32"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="18e5d423-7cc3-4a75-b5c0-ef9f971021c9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="e7e61ed2-7c31-4f14-b0d2-16ec4f3869db"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", "1"+l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="74f7f6cc-b18e-4c5a-8dd1-e60c948e4a66"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="c9de0402-a8e0-4fdd-9a9d-fa06576c117e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="e2f147f6-9f29-486d-a08e-6c54ccacabef"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="871a9c5e-cc0e-40bf-931f-cf22c8001195"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="98022481-df22-4b29-8155-235e6530392e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="a4992a30-e8e7-4b96-bc4d-45f55f9bb073"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="5133e7b0-c3a3-4a29-98a6-03b0315d5e68"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="8a24e307-0544-4edb-b670-1a7fa9a694db"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="69702862-7ba9-4b33-a16b-ef514c8de751"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0b7a4e7e-3e51-4185-a666-2cc97bae2a47" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Expired JWT" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="c7b37e99-107f-4ea3-9c3d-08b1433f4bb1"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="a6431b00-e94f-4ec0-80de-364075083448"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="groovy" name="Set Expired JWT" id="e31c7641-402d-479e-8788-9761dd801d82"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", "Bearer " + testRunner.testCase.testSuite.project.getPropertyValue("expired_token"))
</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="056ba5d3-5d98-4660-908a-f8312c7d3c83"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="404bbb47-6636-4111-ab57-0112e32869a0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="f75ed1fb-98ac-4bb0-ad9d-a57935fe1b14"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="a8d2266f-4a24-474b-95a0-2243d01c18e0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="e7e0d660-6e75-4b6e-8b1c-4065e26af559"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="a3f06412-6b92-4908-b472-5004257d6880"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="25307afe-7a92-4781-b53d-42f359385632"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="0ac91358-8eaa-4307-afbf-b861467ed117"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="2659d538-f6ca-4c25-b2a0-0b6e3a6cd20c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bcaf65d0-31c4-4757-9b22-06d28d2058d9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Revoked JWT" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="680ea3b4-b9ef-4d5b-be7f-6b4bb881311a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="d487fee3-5382-4190-97bd-25a909b068bc"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="3d5c1cee-f30e-4eda-ba9f-8c827058d7f3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Revoke JWT - manual step" id="e9fd6a36-eab3-4a95-8937-4c63224d8163"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import com.eviware.soapui.support.*

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", "Bearer " + l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null

def alert = com.eviware.soapui.support.UISupport
context.otp = alert.showInfoMessage("Revoke Authorization ID " + l_slurped_json[0].authorization_id + " and press OK")</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="9adc6a47-5d53-4d11-a7aa-28f12eaced70"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="c72420b3-4a89-4c90-a8eb-19431f63e1e5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="3f0bcae6-d894-472e-9288-5ebbf698f87f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="d551a46d-8b05-4ed7-8f6b-108b81189cc7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="c7f8ce73-7f7d-44d5-8c9d-77a0ba1631b5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="2c63f358-646a-4447-b410-8163d8e16c67"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="4246571a-6533-4627-9747-b678ebfbd30c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="4b2798cb-62e3-45bd-b875-ea191faf7213"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="73bd87a0-b954-4581-bada-85a91320716c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="60d59098-683a-4f4b-9e27-cbcf7f33e126" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Permission Exceed" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="bfd0295b-8564-4ca9-80d6-7cff2658a79c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="0afdd1eb-3445-4d71-87ae-1fd4fb829011"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="8442cd48-25a6-4687-bce9-7c2aa5059ed1"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="0ed3780b-817a-4609-8637-eaa4a76ba354"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", "Bearer " + l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="calltestcase" name="GetCardDetailEnhanced" id="29e97def-a7d5-481b-b99a-362b478c9cb5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d67996bc-4ecc-40f9-8b22-a307b148e6a8</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1ee9e361-2e46-4b80-9963-71150d030146" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Anonymous - Anonymous Services - Any LMN" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="02fbc202-a989-4d3c-9382-e2fc45332a64"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="76b59431-b1fe-42fe-913f-9edacebbef25"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="d5916867-6a98-4801-9dfc-0e5d903501a1"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="747b6dd4-5093-4f36-8c53-f8919bf49762"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="bd4bf517-d7f0-439b-91a4-7952e6359558"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

run_service("UserRegistration", "POST", null)
run_service("UserRegistrationValidationParametersEnhanced", "GET", null)
run_service("CardActivationSS", "POST", null)
run_service("CardActivationValidationParameterSSEnhanced", "GET", null)
run_service("ForgotPassword", "POST", null)
run_service("ForgotPasswordValidationParameterEnhanced", "GET", null)
run_service("GetSecretKey", "GET", null)
run_service("ForgotUserId", "POST", null)
run_service("ForgotUserIdValidationParametersEnhanced", "GET", null)
run_service("SendOTPSMS", "POST", null)
run_service("ValidateOTPSMS", "POST", null)</script></con:config></con:testStep><con:testStep type="httprequest" name="Sample POST" id="ae706101-96ec-4243-9bdf-38d9fbb39ce8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Sample POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Sample GET" id="a273e19f-c69f-4395-a8d5-dd811ede8cef"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Sample GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0fb80e33-8ccd-4dee-8f79-6924bc86532c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Read - Main Screen - Any LMN" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="25119dfe-e98d-4cd2-8a32-0ea6fff73801"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="a85b98f6-dae1-470f-a746-b25af48c896b"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="8954f23f-6b65-4c68-8b32-2ac03a5736ce"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="dafbad73-0998-46c0-a856-764072b065dc"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="223d4d97-b8a5-408e-913e-23a16c1419b7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="35db3187-28e3-48b8-8ab0-ae9762fe7814"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token","Bearer " + l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
log.info (testRunner.testCase.testSuite.project.getPropertyValue("current_token"))
log.info("Bearer " + l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="f3f361b9-a947-4b53-b65d-0eb07c691a2d"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service",i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params",i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service"].padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id"]}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id"]}/ENG/1.x.x")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")</script></con:config></con:testStep><con:testStep type="httprequest" name="Sample POST" id="9e11cdc3-1c7f-458c-bf22-a2aab4e79c91"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Sample POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Sample GET" id="ac0b0c3b-1fa1-4d19-b833-7445a5db1134"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Sample GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Copy of Sample GET" id="4171cb6d-107d-451f-9599-34ca1838548c" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Copy of Sample GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://localhost:8089/Document/${=testRunner.testCase.testSuite.project.getPropertyValue("accessor_id"]}/ENG/1.x.x</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Copy of Sample POST" id="6997d78a-325d-4dce-9ac4-967c6ebae7c6" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Copy of Sample POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://localhost:8089/W2WTransferInitiateEnhanced</con:endpoint><con:request>{"W2WTransferInitiateEnhanced": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "1789605043337"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e1332ae8-d150-4305-8a40-fb2bfaf5ef43" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Demographic Updates - Update Profile - Any LMN" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="58b394c4-4344-4f88-8fc3-b831c884f3f4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="98be4b85-9221-4c87-ad08-50bb323dc934"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="55d7a688-e0f7-4855-a6cc-ea2eaf568571"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="16f89fae-d02a-4d5e-9d8b-380c1efaf297"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.getPropertyValue("current_token")=l_slurped_json[0].token
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="bb9f4b44-0c42-4a76-ad06-4fd02575ded2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="c8e32eb4-731a-471f-b1bb-b4fde00f7f58"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.getPropertyValue("current_token")=l_slurped_json[0].token
testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")=l_slurped_json[0].scope.data_scope.proxy_number
testRunner.testCase.testSuite.project.getPropertyValue("product_id")=l_slurped_json[0].scope.data_scope.product_id
testRunner.testCase.testSuite.project.getPropertyValue("accessor_id"]=l_slurped_json[0].scope.data_scope.accessor_id
log.info (testRunner.testCase.testSuite.project.getPropertyValue("current_token"))
log.info("Bearer " + l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Profile Updates - Any LMN" id="0f50db2a-f498-420c-a4e6-4d35e658d895"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Profile Updates - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates Response" id="ac16d3ab-6d48-4672-b990-fc5920f2847b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.getPropertyValue("current_token")=l_slurped_json[0].token
testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")=l_slurped_json[0].scope.data_scope.proxy_number
testRunner.testCase.testSuite.project.getPropertyValue("product_id")=l_slurped_json[0].scope.data_scope.product_id
testRunner.testCase.testSuite.project.getPropertyValue("accessor_id"]=l_slurped_json[0].scope.data_scope.accessor_id
log.info (testRunner.testCase.testSuite.project.getPropertyValue("current_token"))
log.info("Bearer " + l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="98947460-fd88-4b9e-9b8d-b378392c87c6"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.getPropertyValue("current_service"]=i_service_name
testRunner.testCase.testSuite.project.getPropertyValue("params")=i_params
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service"].padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
</script></con:config></con:testStep><con:testStep type="httprequest" name="Sample POST" id="ebc8cf7b-49ba-47aa-961e-adc59e949127"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Sample POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Sample GET" id="dbb69b01-e31a-4a88-a25c-a7f796f6bde3"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Sample GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Copy of Sample GET" id="df86bb3f-5d59-49cb-abb8-3d8cd902cf66" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Copy of Sample GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://localhost:8089/Document/${=testRunner.testCase.testSuite.project.getPropertyValue("accessor_id"]}/ENG/1.x.x</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Copy of Sample POST" id="38d897e9-c8f4-4dd6-aac8-b2e0ebb3dc30" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Copy of Sample POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://localhost:8089/W2WTransferInitiateEnhanced</con:endpoint><con:request>{"W2WTransferInitiateEnhanced": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "1789605043337"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6e1b2499-acd7-48d4-b67b-5d0b1f98f791" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Security Updates - Change Password - Any LMN" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="02201b67-fe6a-4bf0-bd1b-83367a484ffe"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="9f332a36-ad4d-4e21-89c9-1211313f1665"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="02a16eee-4218-4568-8396-6b815c2c0b48"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="42c99893-0cb3-4b52-9cc6-3ee5555ca969"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.getPropertyValue("current_token")=l_slurped_json[0].token
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="0104214c-09b2-4800-86b6-c5cc0220c137"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="77aaa5e2-a082-4376-bb32-ec25450d6230"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.getPropertyValue("current_token")=l_slurped_json[0].token
testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")=l_slurped_json[0].scope.data_scope.proxy_number
testRunner.testCase.testSuite.project.getPropertyValue("product_id")=l_slurped_json[0].scope.data_scope.product_id
testRunner.testCase.testSuite.project.getPropertyValue("accessor_id"]=l_slurped_json[0].scope.data_scope.accessor_id
log.info (testRunner.testCase.testSuite.project.getPropertyValue("current_token"))
log.info(l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="be96f6c5-ba50-4fee-8704-6d80e384b064"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
          	"DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates Response" id="00876526-d506-4e38-a430-77706a971ea0"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.getPropertyValue("current_token")=l_slurped_json[0].token
testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")=l_slurped_json[0].scope.data_scope.proxy_number
testRunner.testCase.testSuite.project.getPropertyValue("product_id")=l_slurped_json[0].scope.data_scope.product_id
testRunner.testCase.testSuite.project.getPropertyValue("accessor_id"]=l_slurped_json[0].scope.data_scope.accessor_id
log.info (testRunner.testCase.testSuite.project.getPropertyValue("current_token"))
log.info("Bearer " + l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="3f001271-528e-4858-a742-7c424aa98fb8"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.getPropertyValue("current_service"]=i_service_name
testRunner.testCase.testSuite.project.getPropertyValue("params")=i_params
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service"].padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
</script></con:config></con:testStep><con:testStep type="httprequest" name="Sample POST" id="a43cc96d-51f0-4d4e-a08d-8d7b1bb378a2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Sample POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Sample GET" id="3e7561a0-f035-4e01-814d-459c5e9fc7db"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Sample GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Copy of Sample GET" id="cc98e1d3-b707-4325-9318-4aeb591c9df3" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Copy of Sample GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://localhost:8089/Document/${=testRunner.testCase.testSuite.project.getPropertyValue("accessor_id"]}/ENG/1.x.x</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Copy of Sample POST" id="5333f7f6-18f8-43a7-9d5d-cda25d0e3763" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Copy of Sample POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://localhost:8089/W2WTransferInitiateEnhanced</con:endpoint><con:request>{"W2WTransferInitiateEnhanced": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "1789605043337"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="899427bd-acab-4398-aea2-e68f9986332f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Security Updates - Change Security Answers - Any LMN" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="5b271f07-1954-4605-88da-768dac0a3a17"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="99451f64-9c5f-426e-a795-c1cc88374082"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="f3ff1b08-5c85-4144-9541-97e904a3af45"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="05331066-5989-4827-8c90-66ced6b180c5"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.getPropertyValue("current_token")=l_slurped_json[0].token
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="c42ee7e2-c047-4f43-ac28-63e7a25c6ada"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="303deb9d-7eea-4adc-9bb3-0ffc26c6fe77"><con:settings/><con:config><script>import groovy.json.JsonSlurper


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
testRunner.testCase.testSuite.project.getPropertyValue("current_token")=l_slurped_json[0].token
testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")=l_slurped_json[0].scope.data_scope.proxy_number
testRunner.testCase.testSuite.project.getPropertyValue("product_id")=l_slurped_json[0].scope.data_scope.product_id
testRunner.testCase.testSuite.project.getPropertyValue("accessor_id"]=l_slurped_json[0].scope.data_scope.accessor_id
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="a0683ff0-b4e8-46b4-b670-6ecba75f3774"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
          	"DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates Response" id="3551a3b4-72c0-41e4-bd2c-86182496647b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
testRunner.testCase.testSuite.project.getPropertyValue("current_token")=l_slurped_json[0].token
testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")=l_slurped_json[0].scope.data_scope.proxy_number
testRunner.testCase.testSuite.project.getPropertyValue("product_id")=l_slurped_json[0].scope.data_scope.product_id
testRunner.testCase.testSuite.project.getPropertyValue("accessor_id"]=l_slurped_json[0].scope.data_scope.accessor_id
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="03e898b0-c7ac-4a96-83c7-2af17cca860c"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.getPropertyValue("current_service"]=i_service_name
testRunner.testCase.testSuite.project.getPropertyValue("params")=i_params
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service"].padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9a500aba-9b33-40bb-9cd6-a672420a0266" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Secured Demographic Updates - Update Phone - Any LMN" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="a466dbb9-28a7-4abf-a8e6-2265d5e73b82"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="046059fc-5dac-4d17-9345-31b12f942790"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="8b4b7474-06ce-4feb-9f2a-b866f6989176"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="797762a4-6634-4705-b9ad-18365ee05aa4"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="8884b6d5-0a49-40d5-8491-34ae460d933c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="db218075-43f3-427c-bf5b-acdd8c98489d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
	testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[1].token)
} else {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
	testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="794d0dd3-d3dc-473e-afe6-81de5915952f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="67883d4e-7153-48cd-b909-736614504943"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="28cc5f0f-5cc7-470b-baf2-e30e4daacccb"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="2d2f305e-4d6d-4a19-aa08-8e2c85f79813"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
          	"otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates Response" id="5bb2a135-d9e1-4c4b-bbbd-0fa8ee8db1bb"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="7b072a9b-4b8c-4d98-a33d-efc2f0490445"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")
</script></con:config></con:testStep><con:testStep type="httprequest" name="Sample POST" id="69d5c361-5108-49f0-beef-1f13764cd645"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Sample POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Sample GET" id="7e157329-95a8-4b8c-946b-949246dff7f2" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Sample GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Copy of Sample GET" id="1da69707-28c1-43cb-9336-11eaf787a7dd" disabled="true"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Copy of Sample GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://localhost:8089/Document/${=testRunner.testCase.testSuite.project.getPropertyValue("accessor_id"]}/ENG/1.x.x</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Copy of Sample POST" id="1984f679-7817-4709-860e-e692f060bb98" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Copy of Sample POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://localhost:8089/W2WTransferInitiateEnhanced</con:endpoint><con:request>{"W2WTransferInitiateEnhanced": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "1789605043337"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Introspection" id="f6d37dbb-aef8-497f-8f7d-5c69c0307529" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Introspection" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8089/introspection</con:endpoint><con:request>{
	"token": "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNVlo2WE9qT2hML1YxS3VlbC9lenN4eTJKazRYM1o5Z1M5a2MwZ2M3MDJsQkNnR0l3VEJFQjlUODcrdnNKM0V5WHFPekpzalZZNHRxZFg5NjBQZG92bll3RlVaWlVXOHcyV2NzUnVHVTlLNGJoamt0aUNycVBIbXhYSWNOcTdGSzBHV1dtSzdLVW50eXl2NVRTTU9DU3ZqY3R1NC92ajQrNEhSYk0xSWNaSGRYc0FWLys3akVoOTUxbVRCbnVtcWNmM1h4eGR6RDl2clhUZmh1VjJIV1M0eHIzd2FCNC9EaXU4NGJnNHhpN2VZcHBrZlUvTGZkVnlRQUJmaHV5QkxHNS9lTlBJaXZzY2xPVzVrRmFWOGNsWGlzdUtBR21ZVkJHUzF1cTFvNDlPSGVpSEljbEx6My85NGdLZmhtRjJZUVVFSTR3QzU1UHM0SURkSFdxNVVTcmp4dU1rYTZzQTZJVGp1VmtrNUw3S3dDc281THZoVVNZclZnRVdZQlNUazFGVVIzNlI0bFhCS1BxcGgzangzUmtLMk5kUy9qa3hHL1E5Y3I2OEpWYkppa1pYekVVQ1l4dUdlMFpQMDEwanRjVnVDS3ZWSjhlYUNJOWhzRDRNWEdPWXo4d3dJRkJkbGhXbk5vbGNRN29VZkwvaXM4djBzcUZJZVF6ZWNEQi9ENmtUdXV6Ly84L2ZmLy80RDcxMmZGVHphLytEancreTdQNytJQ25TK1FieEpTcE1IR0traDlIK0sxdWZOWGUvdEJHVWQ3NXlsYWI1QzdqZnBwVGdHMThZa3VBaWlIODM3MFdBamRwc1Y2WjZCVnRFeTdsVkZRVml3L1FGR2ZIUFJDWUtzWXVVcmJGcG5Kb01zNGxWWjdHWDhBNzNQQ3pnZVZMeGFyYlBpTmZuZ204ejZjQkorN1FIZ0djOHFNRnZob040NjVNYkxpcC92d0Mva3dkcUxvL0JjS3Z5T1JQeHRaK1daVzg5SS9sbUN1ZTE3cVBlTEV1MGhGOWlZVWxJZVhmTjczUHlZUGxZbitlUDNRSG1aTVg1UzFIMm00aDZFa1prMU43WFhGSUIvVkhoT0Q5a1BWOGtrTFB4WjZuejJCUEhkZlg1M2lPbjNYTlIrWVBtcFdVMnpJSUdNOHY4R3Vhdkk2a2Njc2RkZTMyQWUvc0tMakMzWisvcHhTNHBleG03akl2MU41ajg1VHI4dStFNUs1eUVHZjA4ZTQwaE13cDk1eWdsNVRlMyt0a045aUtkRDRaZ1hNZWRTL3E0YjN1T1QwcStLYnBYd1orV2ZGVlJmUFZBakZwY3hsLzdMRXR2WjRLbzVIUzRQdngvSDB5UFRtVkp0bXQ5WnF6OGNDUjQ3Q3ZpQTdZYnR3WEVxVVJCazRlU3Y5VjZ1Mng5UGwzSk8wOW1Qcmk4NmJIdnhzRklEcWZzbFgyOS8xTjJQZmMvZ3dFeDhmOVUrekcyMkp6RDQ3S1hRRXBxeUxML255eFN6UllVWE5XdkNGczhSUFZlM3huYzZQc0NjYXVERnBpS3J5cGl6dW00WWgxOEh3czY4MDd2UU94ZWRKNzFPZHgwTjF6RHI3eWZXbno1eHcxYUhxOVhOaWdRWkM3bkpwVlpiNGlhc2xTTUZyNUx4S2k3SlM3UWZ6emJCNnBiUXVmN1hZZjZwNlhVWUgxRWRCditQNHpEL0pSQUhpcUJ1aHh6Ylc0L3N5Q2FQaSsyenFlZXd5dTJUN0dyRmZYUkQ0elF1SDZadUs3YXZHcGllZEx0T21sMkFyTG1OMDNCTmIwaFJjQ3MveE1DQjdtU2hKSnRIcm1XV2tOclZaRHVPZkRXSVovRjRCSGR3bzhYajlqcytLZmhTU2YxNGREbEtGa0lnMEs0T2xZZVBocWpuYUhFN3N1QVlUb1NWYUVqZUxMQVVGWXJLdmRkSGZVMVdJSkxvblRZb1k1Y2xHNWg0c1orVXpGWWpBSFlMQVluQTlsaTJNeFUwTTVIU3RGbG43Zkc5aHVORmZHWHVVVnBwWWxCWXkrN1VTcjNNUmRxOWF5dVJMbzVFa29yTWdybGwyYUZxOWNFTUQ3eUJQK3oyM0FRZ1BXbktFSFZUQ3k1MmdaMUxFNW5PdE4xNE1GTWpUVWVoNkNOTk5KZVI2anBlb2tFREloYklVRUN1WmJlZ251UUdsTW83UHkzTFFCMEkzbkJzMklreUQwU2dHMnErUldLNERTMnZJSll1UTJlODFKaW5FcnR0QTRldXNBTGlpVlNLZ2RYVkFHeHYvYjR5d2ZZWWttUlRoQ0ppSnUxYUlhZlVVUjZITzhNQ3V5Z3lFcVFaREtYYUlHL1pEdUN5MndwUm85WlUxb3ZBMGRlbUJLWlFhT1d6Z1FKQmlselRBaVljUmh0Z2xyM1Foc1YwQjNSTmFnMmdzMmhpR3l4eDBxNHdNandvZDRmYWtrNk5RU25ickt2cVlpNTVLZkpNTlpwcnpoaTdWamZDYWRiQ0xHdGFVSk53NmcxTnRTMkhsR3BlUW9lR1FEZlcwdE44Qk9aNm1rZmNCeVBkb2lPLzE4Nkpta3NCUTAzWGJoV0dIRTBzNmxsV0NyQ1ZiaUtEZ3NoMWtCRkNPakdWM0xYZ1pta25JWnpaU2s5TDhxa0Y5VzI0VktyWk1JcHR4RFZuWVl2YnAyZjJRUTZrZk9xSjBZUWdSZkVTUmVEMmlnUExvSVlVS29qUnJpYTErM3BDSnhPSlc5UHlCcmFpN1FLVVNSQU43a043UFBMWTRoNExUY21UakltV29sNlkwcW0zOUZTUGFqc3NLaUllZXBHK0hGYzhGaXBqMTJXYWdPNE1wN04ycmZEU2dLdDdBRVVLNFdidFNtaHJ5WXBxeXA3aDA5eUc2Z1pqRmJiZ01uU01BVmdCQkdMK0dYczJnaTVzejRFYUpjanBsb2FVeUM3eitwb0FHUGNWRHh5eGdqWVlCVXRYTU9VdW04aDVaQTdXZ2lZYmtnV2pTYkNFOTY3c1NXQ2diMDBwTDl6bDR0NVBoSHRMaUdRRGRYVnQ2Tm00NzIwOUlWcURwUkpCMWRqNEE3UXkrb2FDK3BGZ0tUbDFXWGZvSWpBTG1DdTZpUmRaTzNlSElEOWp3N0VGbmU2ZElkS3hRZk1CMklXT0w0MkhsaFgyOVczSk5SbDNrWXhXaUxvYnBBQU5iTnN5V05LbW40UkwzNEZybk5JTTJTVUxiR05qV3U0MmhCSDFwVUN3VXlQRERsS3hOSklSVTh5cEhFNjROMVEzVGNUWndHMXBsaUo1c0wzeDdGWWFRS09uTFNOamhqbzdIUzd1RVZWS3ZLVFlzOEZrSWxJVk9hRmpLMVQxV1poNDhHcUhiYStuV1YwSHlORTZrS2h0TFkyMUprUkRWMWF3SnVmTFVHaEJqWVU3UXNQMXpCNVBmUVd0Q0FTWktaUlJTRU9ES01EeGQ1M3RSTXdCWW5sZnMwTVpKRjZHVWlPRlN4NXJEbkNRcUxkMEZ1eDRuS21USGVqWHVXekVoSGVic3BlTjVXV2xHNzFlSEdYcHJabUtpdWtQTGtPdDUwMVlLbDdLdDJMWk43cGFjOWRPTG0wRjBXcEtndHVXay9hbTh6c0F5Wld6MldtcVAzeDdHMFpERDAycTlyMWV2Nk40VVEwYWtpQmV2UlhrdDFMTEVsdlhUZWxhYXIrN3ZKTC9WZDhTR2kvcXhKRzQrVlpxbmlVK1YwRk8zdnQ4U3huNTJLRFpJbVkzdHhUWFJieFpRM2hXUHhxMUlHVTA2dGZYQ2JsWmorbzd5RjVhWGNySnd4V0tMemMrOC9ybHV3dlQvcFhPL3dBVmV6QWc0Qm9BQUE9PSJ9.Lpc_0KMqrfpbD32f5Ko28RI8XfXL5eGPdgpgfDjmbspnRcFXlpCxEmfYy2gAo2JZ-Ap4kL6MDx1DxwM6HyQWAw"
}
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="1e11a76b-0ffb-4a86-8d0c-0f8086ea8275" name="Services - Generic"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5c6b11c7-71f8-4f9e-a8aa-88f6a2b4d8c9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="491c462f-ba07-4283-b144-b4cee16cec21"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="75da7149-e115-4e62-8e01-9a7dd65b1b3e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service"]}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>InfiniteAuthURL</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>ResourceURL</con:name><con:value>https://wp1.wirecard.com/emea/middleware_validation</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI</con:name><con:value>https://10.10.99.190:8443/middleware_security</con:value></con:property><con:property><con:name>InfiniteAuthURL_orig</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI2</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI_EMEA</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property><con:property><con:name>fiid</con:name><con:value>1340</con:value></con:property><con:property><con:name>granting_url</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>resource_url</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>expired_token</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlZXVS9iUUJEK0s5WSt0U3BFUGppQzN5d3VSVzFJd0xRdkZiSVdleEsyMkx2dUhpRXU0cjkzTm5aTTRsb3F0QkJGeXU0YzM4ek9UT1o3Sk5Ub095SFpMNnFaNEFtbkJaQ1FSRnp3cWhCR2taMk9BY3RJNkEzZHdIZTlJRGowQTgvemR3akxnR3VtS3hJK3R1YzExT1NCZzNURXpJblNGSlFTMGptaG1qYTQxalJkQVNzU2ZuL3N5TnBzR3M4azYvT3NwUmk1TkxjNVM5c3JYWHMxS0YvR0Y4N1k1Sm81eDBaSzRHbmxYQ0RBQWo1Y1JoOHRhc21TZ3Y1QWh3VkloY0RvNHcrV2d5WHFWQWtwbTIyQWo4YW5JOVFmSGJuNEdSNzRlNGZlY0g4UExRdkt6WXltMmtpUU52V3l6TUdLUlFhNXZYdjd3d1B5WktPVkczSGNnWWRmdE1zcG54czZ0L2tDbjZPZ3pLbWVDVm1nZ0UxaUZKeU5SaWQ0OFlJOTErS1VraTJvaGlZeGJ2SWNoVXBUamIwTFNXeFdSWmlabkR6ZFdFVXFTckQ1cnc1L2ROdUpRUzRZZXRnbjE4ZWtjY0htRklDRGdPMG41NmZYR3dZTnlEbm9HRklKK2pOVXFEWFNWbFBkb3dadk5ydGtlNUR1b2JJWlhrVDRpcjlobndrNUYvb3JTa2ZaTjVxemJBVXhwUkxWR290NHl1OG9UeUY3bjdoVHF0U0RrSDJSM3lEd2RCTDNSSTZCWjVQcmFUeU9Yd0g5Z2hmWkdsN0JuQ2t0VjY3dlZNMytSeDFUbVVXcHRnT0x2dkZybnZheUFKdHo4dGF6MEZRSy9yTXIvWWwzMi9KT2xWbFA4bHZYWnJ1eFBUTVZ4Lzg0VkRlTlFidTQycTF1aWFoaGh0Q0plT1dzTlgxYmRNTnJPNWJGMkx6WFVFZ1ZIU2NwakdZSUZaS3IrbFFiUnRQbzJMbU1XbTdyZURWWms5aitQa00vNFNiT1ROM3BSRUVxZUtaV3JPcmFmUTRTZmhxbUdDNzFUcXAydSs4UTNMRXQ3MWx3Wk9MaHJodnMrdTYxZXhRR2g2RWZERHd2K0dTWkNmT0JaY2xrMVdQc3VhSGJOZDd1ZzY3S1ovcTFqVk5ZMHlSbkJkUHJaR2FHcDlhVzVpMDFkZ2lxajR1UUQ3T0hQQUVwTFQyYjR0WnlaUTI0b2RDd2JPTm9jUTk4OVdmNkRTWWhseU95Q0FBQSJ9.qWQARZyVgO-UJhLOgvxciSc2C3Dk7-rVIQd-OU-v9UBWVdrnA887LROzVFAbunsGn58NBSabiS4nEpTdn_9xcQ</con:value></con:property><con:property><con:name>revoked_token</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlYyMDdiUUJEOUZXdWZXaFVpSnpFUS9HWnhVOVNHQkV6N1VpRnJzU2RoaTczcjdpWEVJUDY5czdGakhOZFNvU0pScE96TzVjenN6R1RPTTZGRzN3dkpucWhtZ2tlY1prQjhFbkRCaTB3WVJmWmFCaXdoZm4va0RnZHVmemc4OHJ5RHdXaVBzQVM0WnJvZy9uTjkza0JOSHpsSVI4eWRJSTVCS1NHZFU2cHBoV3RONHpXd0l2N1A1NWFzenFieWpKSXV6MUtLa1hOemw3SzR2dEtOVjRYeWJYTHBURXlxbVhOaXBBUWVGODRsQWl6aDAxWHcyYUxtTE1yb0wzUllnbFFJakQ2RDNxcTNRcDNLSVdiekJ2aDRjalpHL2ZHeGk1L1I0Y0E3Nm84T1BMVE1LRGR6R21zalFkclU4endGS3hZSnBQYmVQeGdka2hjYkxXL0VjWHQ5L0tKZFN2bkMwSVhORi9nQ0JYbEs5VnpJREFWc0dxTGdmRHcreFV0LzZMa1dKNWRzU1RWVWlYR1RwaWhVbW1yc25VOUNzeTdDM0tUazVkWXFZcEdEelg5OStLdmJUZ2h5eWRERFByazhScFVMTmljREhBUnNQN2s0dTJrWVZDQVhvRU9JSmVpdlVLRFdTRnROOVlBYXZObnNvdTFCZW9EQ1puZ1o0Q3YraFgwdTVFTG83eWdkSno5b3lwSTF4SXhLVkdzczRobS9wenlHWkRkeFoxU3BSeUc3SW45QTROazA3SWdjQWsrbU43TndFcjREK2kzQUoxUW1RYXp0MEtCbitCNzRONVhNTnVrYUZreHB1WGJlVWJ1Nkg5ZWNrNDkrV1BVUTJFbFgybFhiVVdVMmsvelJ0ZGtlcW82V2grRi85dnkyTXFnWFY3M1ZMUkZWek9BN0FTK2NqYVpyaXphOHRtTlpqT2E5aEVLcWFEbEpZVFJES0o5Y2w2ZlNNSmdGSjg1VlVITmJ5NnZLbW9UMjl4WDZCVGR4WXNwT1J3cGl3Uk8xWmxYWDduT1E4TnN3eFhDcHQxSzEyMzJQNEk2dGVjK0NJeE9QOXQzaC9zQzljWS85NFpIdmVUMWs1UytXbVRBZldPVk1GaDNHZmRkMzI4YmJmZEJGL2txL3RuRUtheHFsTEdONms4emM4TmphMHJTbXhoWkJkWEVSOG1IeW1FWWdwYVZuazkxWnJpd0JHd29OcXpxT0ZnL0ExMyttUC83N0dRMnlDQUFBIn0.KK5UUNMQ-6B0a_EC-LClfeuLfe2lSy01RKKtMOim92Vg1lpfrmiv9Nq2EWJ1CWVTNlHk4-LBlmOADdMIJ_ynpw</con:value></con:property><con:property><con:name>username</con:name><con:value>daniyalmobile@wirecard.com</con:value></con:property><con:property><con:name>password</con:name><con:value>Wdp@01234</con:value></con:property><con:property><con:name>DOB</con:name><con:value>1991-01-01T00:00:00</con:value></con:property><con:property><con:name>current_token</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVlhWE9qU05MK0t3NS8zWmtKRHVHMit0TnJTWlFRRWlWVDFBRnNiSFJBRlcwa0NvUVJPcUJqL3Z1YmF2ZTlzN3V4NndpRnFUc3I4OG5NcC9MVGZYYnF5ME8zRzdOK2QyZytORmxkM0wrL2p3cDU2Z3AxdHlqcXcwdVh0ZVZPM3JGV1pYMXh2UC90bHlVN2RmL2VmRFJzeXpHbmpqT1pPS2I1Mi8xT0ZVMi82NGY3OTUrK2ZYL2RmSHRwaXU3dThQRnVTNS92RmxtZjNXV051bU5INkx5MXZoeHdXeU0vbjNDOGYvLzNUNy8wZmR1TFBuOVFmN1hvclJkT2IwKzUzc252emU1d0JVbE9kVjUwc041ODl6aDlNQnhqWXR2Mk85aWtMUTlOOFgzNGI5TjNwdU5NYmVPZDhmZ0l3NGUrL1h6Zisvcy9ZVzYzTzROR3ZtemRuTFNHem1PZjlhZmpUWVVuS1l2ajhlTkp3OXgvSmY3dDB2K2QvQ2RZOFdXeHlwcmRrT242a085MDhYK1hYVmZJckZOL3lFUDkzMG4zajl1QVBMVEZiZi9QSDkvRSsyenl1K2ViVWtCQ09QcThrOFdITDVQQktIVUJTTGpwNDNrYjBSOW0vTFQrdVR0OEJBbkZyaSsvN25UcWRoL3E3RmpkTlBuYi9VM0VEeitEcWlxR201aC9uOE9OOEdkci9IYjNmRFBkdDhadHA3ZkdQK0FLWHpiNWRvMU15c09wNlg4d3RHSFl4Zzkvemp2N3B2UFBXamgwYjBaOSt0eDZmL2ZVREhkZlIyN0Mzb3owbjNWK1UvbEJuV1QvdHRrTldXOTkvdzV2T210ZVR0bkxiZXVpZWZuUEFQeEI0SjgxZGhQL3gvYmJMVFlCL21WUmR6ajFPempwL1QxNSszcWIrUFQ4Tkw4TG4rNmV2bC83eDFWZjlIb2YzZjUvMy9wUFFJNDZkVzhtT3hieTBDaXdtbTNjcmwxMHhldHBkOXdCQkg4UjlOTmZ4cHdiUXY4cXRMejFmNDhuYiswdkFyMDEvbG1FdC81L0o4VGJETmtWMzd6dDIzYkZ0ZDExdzA5ZFA0dlZEOS9QUGgzQmVoLzBydDcxWDdzK25ocDVtNWZwSDV6dkI5L0R4UVhVVzZ1TC9sQjBIU2o0cTdYZjV2MHcwQmZYYjd2Mmg2cTRXYmtZL0RKZnl0MTI1Ni9ZeUs3QnpwLytBWjFHYnZVNjM2MGVWdFdMSVEwOUN4bjYrc05jSDZ6QW5MWFU4SU9ObVZ3anpXeFJNeWZRcloxVzB6bnpLcE5SWllleGNyZ2xoOEE0R0hRUGU3cktsbG92MURDZFNFdWhuTFhEWnBqR1RLaUhyWmMrUjQzL0xLcDJ5Um1uYTl0ZjhVVjFaVlpvcXowYnBGRmR1VjFHdk1FampmRW1yZm9oY3BYT0xGS1JSaThpeW5mNW5sblNhSlBJOHdra2dVUlV2R1BWb3lFMVBpb1AwWTNSOTd3cEY2eDJGcW5IQnVxdDdKVFBxaTNyUno1cWg4ZFBGMDZSazNwcWt1eTFLUFJzem5UYlVTNXR3WlhKclZKdnJHUU1QRjJCdkRveGtwRTBoNUVJa3NuYThhUWxUZWx5STNDZGNydmdFMUZWWnJGMGVtV1hEMEpNN2R6aUlNUGtrcnVwbjN2dFVpNlF4eHF5dzFTWEVxVkMycmlrckp6blRkdm5idFVwcmphQ29xaEF5TUY3L3pWai9ZU1A2SUUzcEU0Yi9zQk4zVVpXLzhxOXlsSERjZHk2MkVsR0RuZmpJcXdVQmVubXlWZytTTlk2Vktzb1h4b1R5U3FuV0lRak1aSEJvaWxPR1o4WGxMdUpvVTBaNjQxaTFaaXdkbFBzMVpJWjE0U05aU1BjcWI5bGJhb2ExMkkyc29zNDVkbW8xcXlSWUF0M0FqYW5WQmhEYXFVRE52aytRKzVaNkptRmQ4ZU8weFIrS05pSzlrZ1lubE54SEZNN3NjaGUyZ2xWTEdnNERaaC9BdjEyYTh0aG9jSGpndnFIcmNzWmNWc2Q3SHBiR2ZwSU5CNExzQ3ZiejhxdFd6bGI5N3FMeHNBTTlpOURicTZ1ckQ2ZUdVVmdFekpmbTA5WHhoNGR1WkRuOWNpTTdmenhyUGF6SUxCOWMyMmpNUE9lemhpcGtDelVjOTRrSTBibE1oVlZ4OWpsU3BjbWx1Yk1JMWJmU0JZNitjS2RyQzFZWjVRR2E1Q05xYndXNG1oaDBETWVpUlUwTTc1ZEVpdnplSUpkZkVuaU5CQWVmc2F1dWQzT2V6T0x0U1VZSHFJR09kSk5IT0dtKzF3Y2JOYmdGTlp0bzJwaVNOWS81d0k4eFZBZFg1cVJzalVMQkJwQk54WjJWMmMxN3hOcGxKUGM1Z0hmcDlkRVRKUE1OVU94TkJrZlY2WnFsSlV0K1l3MXJmUDUyK2dqTmVJaE5Yd1lReXU4NjJkNExGbllsS09xaU1tV0RsR01oMkUxM1lnRnpuaFZndThnYjd0NGNaamRlb0dWUnB2UkhVUGJweEZTejJIZDB0UTYyaXJtV2JiSFliR2Y5V3BQT3I1N2RFaHR2a3ByNm1Qek1HS2RYbFVOL0dJM2RSZ0t4cENYWWNDMEYrMTZIbFdyU2NyTVUwcHhBUGR3VWpZWkZWS1RvbFlQR2NWT0h2TlZocDdNU0V6cmhLbGpUaEhLdEI1enEyUjVmVGtYQyt4SWhFdlpoSGEyMUVOQmNTMlkzMi9NbDNPKzk1K2p4V3kvTVdmemNLOVAyMWdaNlh3YTRHWmxaNk1jNFpzbDhWT1htY2trMTJrdDR0SVhPckdWaVpQdDBrbFQ1ampFSnM2V2duNm8xb1NXSzFaZFYwSzNRaGs5a0kxMkk1dktwdnMwQ1N3OGhOV3FvMTdxWkF1SVMwaG51RkVIWW9kbnRTamRZSytlU1lQVzRkN2ZaSXZ3SEMxeHZUR09Eb2xiZ2QzcmVXTXFOOW1YbXBtQmdSdjltaHF1bmNSK0hVYjlNNmVrRHlIV1N2UHBMQkVKRTV1RWE1c3ZJRzdCbUR1eWhUcmpCY1NkMnUrMk1maDREYjd2WHVEKzBzbXNsRzBzOGhvWVpJWU5QS0hSOUpUWE9Fek1GbkNGNWhKc1MrS1NadTUxcnhxUWVlUTRNVU5MN2N1ZE1uMldWaGRUMEJsbFh1aW9XdW1pbHAweWZJaURaSllqSWxLRVJyeEVQc1NrRVZzdkZuaG5xbXIrRUdqaUpEWHAxcU9FZFM5bXdVb1NtT1ZlZWhBTnFGNmxUWHFLM1BDYVcvaUtSLzlDNm1rYm1UT3hzVW1mTDRrcnJYYkphQmt4Q3cyWjIzcTU1c0YyZmh3Mkk3K3VyWDdGWEdlM2RSOG5Hd3RYY2wrRzRHUFBtUzI3YUZHU2JENDlnYXdzUXlnaUZPSU5jMTZUaGg5b1ZXNXpudEpFcnlEdXpkS2tTZzFWTXdzM3BRakcyWnhYenBpYnBPTEx5eWptUGNNQzd0S2dKaEJwbkk0elc3amE1VXRBUkJPZUdUdENma3RHeWdIUHUzNGUwbW9JRGI5TFJyL2lWVnBtOWl3azhXRVFEUW9DVnpmTW1ENFFvOXlIY0JLdnpUWG94OHBGajBpTWNPYmhrN0w4ZFZaTkQxem9SbWwwNHNKLzJDSjFsdFhVVUVqRDJYd3RCWElGY3k3WVFCVkh4S2REZjFSQU1ya285eGo1RGJIYk03RU1FMktkbHd4OUpLM3JMVi9ZY21seVZaV1hqQ21Ec2VsYUx2a3hnbndxR3orbEx2SkZreDRUdXp6SUpTRko3U1NRV1N0cUtGSWdqQk9PanVHb0lzQVhEYWhLQzFvR29UV3R1ZGVlaW9YR3JGS3JLTVluUXJGUHJZdTVzY3dKNE9FVXh1VlJDblVReXl2RUt0V0ZuRlRSNkx1a1VtSGhZU00zRXZoZEhkRFZhMWdqSzdWYlYzQjVUVTJ5aEp3SUdXUW1Bby9aVWQxRFBFSmpPS2JMaU9vV21JS2xiT1FYRlc0WjZEclRzeXFxQ1NVY3J4S3VjREEvbmpPQm1PQmdmTW9NVmhPUXpUOGx4blNkMSsyY0w3Z2Z4V1JJS2lReXJtWlJqSHFwMjMxMFE4TG8rd0xKSVRLY3JVTHlxa1FQZkdlNkNGbkxBZS9leHVvOWJ1STU5dlFZMktraGVMdFhIbGtyOEtNdFhRM2N3TUIxMGxleW1FMUNvUTNKMVVwNm1HVXhnYmpyV29FaEo1TGpqVnhLOEljV2NwcHFjc0IyYXFrK3JLZjd0WUVvNVA0bU5IVW1nRHRrRFdFQ3RTbGd6aUpjZTBvL1dVRnRtZ0dibUpnK1RTQ0hIaW5sVnVRbVo1QW56aEdhWjlXMWlyaGVZanB6cVVtZVNXVmNGSzBtQXZKOFpsejl6UE1UV1lOY25NOGlzejBLY1dXMENxNjVlelNWaHdOUlQ0YUNwMzVnNkVWdU9CZTJ4QnZxQlIydC9JaTRDRHdUemJEWHhxSlJKOEZjQTJ2MW1zU3ptQ0x1YzZyM2VPRnZFK3Q0b1NMb2xBdlJoQkVXZ1E3RXZzU0pKclpnWkVqUjAwQzV2a0ErV3lkV3VRMDRGem1mUFlSR2I4ZzZ2T0FxUFJCcjJuRFRmMDZzZnBZYUtHUGpESkdscjdObFQyUk55Qlk0U3k1VUNISDZ0ZUJvUWh2U2dpNDh1THNYektmSGhKVm1VR0hBSnBsRmlKdUZxeUs1VDRiY2c3UDM0TUZHbjlLbFRxTWFBUytjdVV4Z1A2bk1udGtFOFhGV0ZTejFVZ29vTUE0ZDVDazNiMTdPd0traUpueUtLN3pqOU9aRGxWRXdVdEthVjREL0JjVGRIUk9ITWEzNVRDMzhMbkw3aXNiQXltZ0o2RUZVZWVHWlZINERNazJDK2dwNWpBKzhkalMxSVplYVpiZGQ5amVNQmtyd0p1SGdUKzcxQkxuRVZocFlhWXlCQ1V3bktlZGpzSGpwbERtN3BFdHBwelk4QmpsT3MwWmFiRGlhMHRJVHRjZkxqT0dZV0RvU3JEZTIxTC9RWldrVWFEYW1iSHBrNWd6MFdSTGdCQWZJWXdSeVpwTGF3TWRyMWVmVUQ2Zzlxd2ozSnpsZ0pLL01rWTVseXpSK0FHd1puRUxNR0NGdTJrOEQ4TW9UNUNFS2VqNUU3Qkh5UE44QW5zODVRMVpTNDNYbWxrNFJUVW5nK3RIYUtzZFV0RW5DL0lQVXlBRTk5cmtKY1grQmRtUlJadHRsTWlIdXhHS0d6ekZOQTdVMGt5Qm1YVkg3ZmpxV0Z1TUhKNnlBRHdGUENFZHBFTTR1SUQrR2JETEhOZllqN2RQUU9qaVJCM0ZmOUt0TXVLQUwxUExHMytVeDhPVjlPbE04emFKcXVvVmNIa2FMOEFyM25kM3dpcGNLa2FxYUFKY01TTlFuWVV4ZU0xZXQ0VTBCUG94TnFRTWo1NGhKNzZrRC9rdGxwZXg4UWRxZzlnLzUwc25DMFg5TnpKV1ZVOUtDdmxEQm5FMkIvQWVJRFpQMUFMbWhRWXphN1lXNnh5RzN5Q2FzVTV2c2VSQXhSQ0lMWXUxZVRTQVdwV21sL05TYU9JbGxsbkxQeDlEME5SWm1tTEwrZ1FFbktBQVhXYjBhY2s3Y3FFcU1DREFmV1lBUjlqTHd1S3dLVGdnM1hzeVFtWnNjd1F0SkJEYXg5V3RtdFBaNk9IYlJtSmdZOGhhOEFjN3dOakFTeXZmd0pvcnp1alFnTDNOYzlTUjFyK3VBOWExd1ZTcVcva1NoWkFqaU5PR0NkTVF0cjRDYkFmSjd0d1ZlcGR3cGpvQjNZcThjaVliOGJoRXRZMll5bXgrVGNXVklpdzlpR1RvSmNCUkJzYzYxRnFvNWRNd3cyWHJVSmNUaUptWHRtdGJtSWFyVktkdjFmY0dBRzlXNlQyTzBWTmJVeWN4MFJ5M2pTaGZsc0xZUWt1emxHbFZzc25YMUs5NnJMdG9UeWhhOEFpNzZ5cXZFZ3ZpYllhWk02cVlXRmIyRmJkUURwejJsb3lKSjVRUFBJaEZ3Y1paREhvbVdrTnNxNE1aeDJRVVF1OUlsaitGOTRoVmNqamd1MStuU0I0NVdzb0tHNTd5WlZRa056c3JnREh4cUZTM1FKRGZnM1V1TjZhb3gvamlZenRTWnorUHJ4MTBhVDkycDB3ZDFXTTZvdzdwTGxyeUVWK285anZQTjlQVGEvLzZBZDlkREVuKzhPTy9XMTk5L2YvcVlSczh2VG1UUC9HMytzcjFNNmlnMEYxbVZKT0d0eFBaTDllQWVFdnpqNzRiOXUrVlEwM252T084bmt6OGMwL3picmQ1MC8wdGQ0ZGZKRCsvTm55Yi9WY1hoUzRIcS9wZXFnL2tYSllkUDkvcndzbXMrZk5UWnJkWXp1UjMvVTYzaC9uWUlXcTBXdDZLVVBibTFicFdzenlmZEtqNUZVMExnS2o1WHN1Ny9SZVh3Znk5aTNQLzUveS9xdTRKNUZnQUEifQ.xvPpkWk1E_roAVzLGIdr4HQgxkNb6ntDwwh-tIm8uwRejlWmEZyOqh57JoK8Z_9rS7jTZpS8r_vTF88cwLt0-w</con:value></con:property><con:property><con:name>proxy_number</con:name><con:value>1789605043337</con:value></con:property><con:property><con:name>product_id</con:name><con:value>1789</con:value></con:property><con:property><con:name>accessor_id</con:name><con:value>Access: Any accessor</con:value></con:property><con:property><con:name>otp_id</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>otp</con:name><con:value>1</con:value></con:property><con:property><con:name>current_service</con:name><con:value>UpdateProfileWithPhone</con:value></con:property><con:property><con:name>params</con:name><con:value>, "ProxyNumber": "1789605043337", "PhoneNumber": "+971559307088"</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNVlo2M1BhdUJiL1Z6TE03SmU5YmE2ZmFjbVhld0Uvd01GeXNDMFp2TnZKK0tGZ1kvbFJJeE9nMC8vOXlrQVNrc3QybTI2YkpKT0FwUFBTNzBqbkhCOS82UVFOVGNvNjNRWTBMWXViSXNoeDU3Smo0OXNhTDVQT3UyZkxhZHk1NUQ5eW9pRHpYVm1XQlBiN3JwUEd1S0FwM1hRdXZ6eDh2eGRrM1JXNFBpdHZ6K0NTZlNvQkRRNHlXN0pvSjNUWnVmemp5N081ZS9hVzZ5WSt4YldmWlJxckppUnA5REJzR01lQk9RNktkQk9RdkF4VGd2OTdsOVk0Q3VyNFBDcnp6dGQzbmFwT1Z3SEZCOGFpSVlSTkxtbEFHMlpReDJtaUNDK1h0dzNwZlAzVUxrUmxoVnY1dXkvMzVwbEJXcHc1VVkxeHdReGttbGRwaEc4T3RHeFRPV2JnTWNnNnV1b2VFUnk0ZFV5djZ6SnVJbm9kMUd5SzRucXBGa2xRUkRobTFFMmQzdVRCTW1PVWJOU2FlZlBVR1JuZXRLYitjUkF5VWo2eGZmMmRVcTJzNXlXOUhnRVVrRFRlQ1hyVS9oS3RBNFlsYVBJUTErL09tQVhyelg3d3pJWnJ5emxoQkVwcjJnU2tGVEdvTWZQQ3oxZDhjdk5LR1RVNU8wTTNqQ3c0SEtzanZlZS8vK2ZQUC8vOVc3QnpmVm16MC80YkcrOW56My8vcGxXZzl4M3FIVXdkZHNCd2E0THlTM1o5R3U2V3R4ZlI5cnd6a1k3ekFyM2Z0Uzl0YXJQZE9EaW9vK1JueTM0QWJGVGNsblcrRTJBMmhLYURwcTV4RVcxK0FvanZ6bnBSVkRZRmZRR21iV1N5OFR4ZDBucW40eC9zKzdTQ3cwVU5sc3U3c241SlBQZ3VXTzl2d3V0ZUFCYngzRG9vbGtIVXNnNFplR1g5NngzNGpUalllbkVVbndxRlB4Q0l2Kyt1UEhIckNjMi9TakhEZm9BR3J4Um85N0hBQ3dqQjlPQ2F0M0h6ODJ2NmkxejlGMmx1cnd4YjdyVmp2aVRxL2lQbzd3UG04aWhpdmxHUVBMNWtQeDFkQnhmeHF5TGIzaURHcmJEYUlTVS9VcWo5UkdSYlVlTXl5bUJCMkg4YmYyN3c4bWRjc1plV2I3Q0tYNjk4ZTVvKzluNTRJL3lQcnZacm9lNEozbTczdDdnZWxNVnRXdWR2RTFLWkZ4ek1ubm5vRlg1Sjd2NitTNzAvVC92RWNWMm5UQXA5cXdydjRVbnB0UnlzWS9hcy9HWm5hbFNrTkdYYVh5MnduVHhjcmFSOThmRDJkancrTXAyb0doem5COHVHVHdlQ2g0NUNzTGZ0cHRnWng2aDRqaE81b3gvNWc5aTJQeDZMY2tiVDI0MHV6M3JGNXV4K3BUV2s3WmY4ZmZ1ajdYN3NlZ1o3WWZ5SGo5MzkzSHB6WkFhYnZlQmtUaEpGOFFOYkprRXhiNEo1S3hvWDg2Y1dQZDF1YTkveGVHL20yQVRQbU9xeW9Ta1RkZG14OTkvMmhMM3IzdUJzMGp2clBlN3JtT3NBWE1kcFB4OUZmLzNLZ0czMlZkN05Fa2RsRVRQSUJia3JNQWpiemVHYVpjbDBtVkw4M05vdko1dGdiVXZvVlA5clAvL1k5TnFQRDFidEIvOXZ4MzcrVzBic0thSzJIWEpvYnoySXcrc3FyVGRQcHA2YVJUZVB1cHNsODlFTlNmT1Uzay9kTnNVdVl3YmtxTnQxMU93QytJNWhuTWQzNUFiWE5VUDUvZ3pzNlk0V0tGNC9TS1ZsaGx0WDQ0MlJoSHFVV3FreGdsdTRObE9qZTg0bXVWQ2dKRXhIRjZOc3prVWM2VStnZHY5bklqTGJtSXM0Z2RCUUxlaFBZOCtmQnNRZnVBWFFJaVVKWXVSVEV4cW1BNVBSekZ2TDBaUllNYW42OGREUXpTMUlUVlZMSTk1YytjUEVueFZ6TVZESkVvcjlmamkwSzMrWThTR3BxSy9HQzNmUkg3dTVYOXFNZHVacHlZUWY4VGpuQ3hkV3J1dkZ1cXNBSzFCOU5TejZRMWNGYUpKSklrUjlFaStpYmNnbmdxM0VjcUNBQzB0UHpBbUsrUkNadkxOSXJKa0hPQk1DNkJBdGozUnlGZkQybFMvUWxaTnJEaVlHUktLOW1MbmFYU1RFT3VLcUNiczc2MGhsNE9TMjYzc2dqVWgvQzJCVkFjZ2JsbGJKZU5qZmhNVGVvRnl6TERYSkxBWDVBTXAzd0Z1TE0waDkyNVB2UExVN1l0Z0pRQWNEeTZHY3cyUUhMcGlBREVtbUZoc1RncFJ3MjZ2SDRxU09walp5QkRDR25GeEZuQUdCcnMyQVFteC9BVWFCWWxQTG5Xd0RKWk93VGxldTIxY2RRZHE2MDJRVkNoL3ZiRS96M0tsZitTTFpJbzY2MERYU09KZFZhOUM5TW5QcVJ5UnVIQjAwb1FCeU0rZW5hRnFKWmo3Wm1DSVo0SVdtUTFUcFNPdVhUSjRUYzhDSEdhQUF4aXM4aFpJUDQ0V3RxTFdEVUIyNHhpclFxeFhXalkwRCtSSk4rekRJUjNldUJvWk1wK1BsSkFneUt2dUZvVGpJR1BoNktia0xtNHhGeEpzUUdaTWNBS2dqR1EzVmpac0Qzc3lNaTVrSUJwTWluc3pRWkhNbCtxTlFweHBiSzZLdFh3UThVTVpDYklTNnRqSVh2VFVpUUlnZ1A1d1ZsUXNFTkpvaFkrWncwY1lXYk5uZUxMbHcwUFhaK1RGZEljbEJGdDJGNmx3SVNleEgyL2FjOEd1RXpEVm12dmZkUlBJenFwazZtZGd1eUJ4aDdZVWM1ZUdtSzBlOFpzNksvZ1hndEdZaVVNNWR6SGxIUndKYzlMWFk3Vi81T1YyR2Fsek5jdTBpME9ZQ0xPelJKRk5GcEJ2RVUyMHg5dFoyTEtBQXF4Rm5hZjNHRkNIelUyeTdHUkxkalA4TXZCRUh4R3JsZTNEaks0WmtFdnNhYXlpSGdtK01SUnZaWWdWbmhib09DM3NaYnJXMTd6RmRBcjN5czY0WFpiSVE2a1ppNlRaMVNmVVo2cXJNenZENGF1dXJnVnI1U0RQVUNKSytwZmxqdGovZ0ZHUVlLblBlY28wQncxNENoWDhkZWhTYWFWY3lYZit6UHpVNU43Y1JuQ1oyeUFNUlpSL1hJZStubnJwdUVLOUs3aFNJV0VzVW5FL1d6bFliajdlK0JsUjZGUThKdU9KTTJYUTF3WWRkWnFPY3p4YkVzWlJrNG1jVHlmT1FhdVpMUHRqUWFaaFhmWi9FQTVUeHk3aEFBQzlzNjJxcmJ0azlVSUhRM1pwQzFYaFFyb0dYUUNZTEFJU2t1T1hscXliVWt6VDBxcG1sR0VOYjdPY2VZckZHcllwNENxVEFvOXlrU0RoTDV6Tlg1d2NvajVrbi9kTDBBSVFMdTBRRjJGcDZLZGdEK3RseFBncm1BaWh0TEJzVjNQbUZOTmV6WnBXV3c3U2JLMUUvMTB0SEN1ck5yT2Nxa2svR21TZksvZWs4MWFxdVA1NHE0enNaM1l5Y1pxTTZjbVhmV2ttZk5OdUJ1U3F0M25Sc3lkN2dpZys4MjBuN2p1SlpOdWdJSFAveFBTZStGMlNYbHk5bCtWSVN6aVZCK2xkYkpYU2U1WWtEc2ZSZWtFNFNuOG9nUis5OXZpZU5mT21RY3A0V043Y2thSk80MUpyd0pIOTBXa1hhYUtTMDVZUW90YU8yQnRscGExTTV2aStoMkhMbkwxNi8vSEJpMnIzUytSOG5SY3RHNEJvQUFBPT0ifQ.8jcGMcsSZujRbXeZ3vDugQElNOjkq6ZO1mOwtAFkGhZ6QFSl8ICiLV5Q_48fwMZLK2dIy5hskVT2fs0tVuNzLg</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>