<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7a797db4-9d5d-436f-9e27-919d62fcad7f" activeEnvironment="Default" name="Infinite Auth" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite id="beed602b-191a-4d5d-9443-0c1af9470544" name="Infinite Auth"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4c69d69e-616a-4b39-892a-9af793c3467d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Infinite Auth" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Init Data" id="70edc71c-71e4-43c6-b2a4-7ecc4f5c4b1f"><con:settings/><con:config><script>//context.username = "Daniyal@wirecard.com"
//context.password = "Test@678"
//context.username = "mobileapp6@wirecard.com"
//context.password = "Wdp@12345"
//context.fiid = 1150
//context.fiid = 1150
context.fiid=1340
context.username="daniyalmobile@wirecard.com"
context.password="Wdp@01234"
context.DOB = "1991-01-01T00:00:00"</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous" id="ceca378a-b04b-44d9-b090-c9a2b90461d6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="740682bb-f197-42b3-a012-3b1ad1a60a1b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
context.anonymous_token = l_slurped_json[0].token
assert l_slurped_json[0].token !=""</script></con:config></con:testStep><con:testStep type="httprequest" name="Read" id="4b750057-4ded-402f-83ed-8cb3b06bf5c4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Read" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.anonymous_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="a5881d30-881f-4e8d-9c65-871f5d1213d2"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
if (l_slurped_json[0].authorization_name=="Refresh") {
	context.refresh_token = l_slurped_json[0].token
	context.read_token = l_slurped_json[1].token
} else {
	context.refresh_token = l_slurped_json[1].token
	context.read_token = l_slurped_json[0].token
}
context.proxy_number = l_slurped_json[0].scope.data_scope.proxy_number</script></con:config></con:testStep><con:testStep type="httprequest" name="Read Refresh" id="a2ffcf0a-119f-4962-b58a-2c280c211acb"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Read Refresh" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of Refresh Data",
      "authentications": [
        {
          "authentication_name": "Refresh_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "old_access_token": "${=context.read_token}"
          },
          "private_data": {
            "refresh_token": "${=context.refresh_token}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.anonymous_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Refresh Response" id="fa90b706-cfee-49c8-a52a-4f055a0ab7d5"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
if (l_slurped_json[0].authorization_name=="Refresh") {
	context.refresh_token = l_slurped_json[0].token
	context.read_token = l_slurped_json[1].token
} else {
	context.refresh_token = l_slurped_json[1].token
	context.read_token = l_slurped_json[0].token
}
assert context.refresh_token != ""
assert context.read_token != ""</script></con:config></con:testStep><con:testStep type="groovy" name="Prepare Provisioned User Data Usage" id="91ccae96-0552-4f32-af01-55aece405cc2"><con:settings/><con:config><script>package authentication_modules

import sun.misc.BASE64Decoder
import sun.misc.BASE64Encoder

import java.security.Signature;
import java.security.GeneralSecurityException
import java.security.KeyFactory
import java.security.KeyPair
import java.security.KeyPairGenerator
import java.security.PrivateKey
import java.security.PublicKey
import java.security.spec.PKCS8EncodedKeySpec
import java.security.spec.X509EncodedKeySpec
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;

import javax.crypto.Cipher;


public static PrivateKey loadPrivateKey(String key64) throws GeneralSecurityException {
    byte[] clear = new BASE64Decoder().decodeBuffer(key64);
    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(clear);
    KeyFactory fact = KeyFactory.getInstance("RSA");
    PrivateKey priv = fact.generatePrivate(keySpec);
    Arrays.fill(clear, (byte) 0);
    return priv;
}


public static PublicKey loadPublicKey(String stored) throws GeneralSecurityException {
    byte[] data = new BASE64Decoder().decodeBuffer(stored);
    X509EncodedKeySpec spec = new X509EncodedKeySpec(data);
    KeyFactory fact = KeyFactory.getInstance("RSA");
    return fact.generatePublic(spec);
}

public static String savePrivateKey(PrivateKey priv) throws GeneralSecurityException {
    KeyFactory fact = KeyFactory.getInstance("RSA");
    PKCS8EncodedKeySpec spec = fact.getKeySpec(priv,
            PKCS8EncodedKeySpec.class);
    byte[] packed = spec.getEncoded();
    String key64 = new BASE64Encoder().encode(packed);

    Arrays.fill(packed, (byte) 0);
    return key64;
}


public static String savePublicKey(PublicKey publ) throws GeneralSecurityException {
    KeyFactory fact = KeyFactory.getInstance("RSA");
    X509EncodedKeySpec spec = fact.getKeySpec(publ,
            X509EncodedKeySpec.class);
    return new BASE64Encoder().encode(spec.getEncoded());
}


public static void main(String[] args) throws Exception {
    KeyPairGenerator gen = KeyPairGenerator.getInstance("RSA");
    KeyPair pair = gen.generateKeyPair();

    String pubKey = savePublicKey(pair.getPublic());
    PublicKey pubSaved = loadPublicKey(pubKey);
    System.out.println(pair.getPublic()+"\n"+pubSaved);

    String privKey = savePrivateKey(pair.getPrivate());
    PrivateKey privSaved = loadPrivateKey(privKey);
    System.out.println(pair.getPrivate()+"\n"+privSaved);
}

public static KeyPair buildKeyPair() throws NoSuchAlgorithmException {
    final int keySize = 2048;
    KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
    keyPairGenerator.initialize(keySize);
    return keyPairGenerator.genKeyPair();
}

public static byte[] encrypt(PrivateKey privateKey, String message) throws Exception {
    Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
    cipher.init(Cipher.ENCRYPT_MODE, privateKey);

    return cipher.doFinal(message.getBytes());
}

public static byte[] sign(PrivateKey privateKey, String message) throws Exception {
    Signature signature = Signature.getInstance("SHA512withRSA");
    signature.initSign(privateKey);
    signature.update(message.getBytes("US-ASCII"))
    return signature.sign()
}

public static byte[] decrypt(PublicKey publicKey, byte [] encrypted) throws Exception {
    Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
    cipher.init(Cipher.DECRYPT_MODE, publicKey);

    return cipher.doFinal(encrypted);
}
public static Boolean verify(PublicKey publicKey, byte[] bytes, String data) throws Exception {
    Signature signature = Signature.getInstance("SHA512withRSA");
    signature.initVerify(publicKey);
    signature.update(data.getBytes("US-ASCII"))
    return signature.verify(bytes)
}
def l_key_pair = buildKeyPair()
def l_private_key = l_key_pair.getPrivate()
def l_public_key = l_key_pair.getPublic()
context.private_key = savePrivateKey(l_private_key).replaceAll("(?:\\r\\n|\\n\\r|\\n|\\r)", "")
context.public_key = savePublicKey(l_key_pair.getPublic()).replaceAll("(?:\\r\\n|\\n\\r|\\n|\\r)", "")
context.provisioning_unique_id = "MDWL"+new Date().format("yyMMddHHmmssSSS")
def bytes = sign(l_private_key, (context.proxy_number + context.provisioning_unique_id))
log.info(new String(bytes))
String l_signature = new BASE64Encoder().encode(bytes).replaceAll("(?:\\r\\n|\\n\\r|\\n|\\r)", "")
context.provisioned_data_signature = l_signature
log.info(context.provisioned_data_signature)
log.info(verify(l_public_key, new BASE64Decoder().decodeBuffer(l_signature), (context.proxy_number + context.provisioning_unique_id)))</script></con:config></con:testStep><con:testStep type="httprequest" name="Provisioned User Data Usage" id="6b5b6d62-d8f2-4e51-8fdb-e61140ab6a20"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Provisioned User Data Usage" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Provisioned User Data Usage",
    "identity": {
      "identity_name": "Owner of User Data and Provisioning Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "Provisioning_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "provisioning_public_key": "${=context.public_key}"
          },
          "private_data": null}
        }
      ]
    },
    "scope": {
      "scope_name": "Prerequisite Usage Only"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Provisioned User Data Usage Response" id="06372060-c748-4d9b-8b65-9ba4c082ea64"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != "" 
context.provisioned_user_data_usage_authorization = l_slurped_json[0].token</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="9b981b6f-f694-4e09-862a-08fd20671523"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#ResourceURL}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=context.proxy_number}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="c0512b4d-f039-42ae-9d6f-a1e31370b5d2"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
context.otp_id = l_slurped_json.SendOTPSMSResponse.SendOTPSMSResult.OTPUniqueId
assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="60c0dde6-eee1-4e91-aa2c-e4085292fcb0"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
context.otp = alert.prompt("Enter OTP","Enter OTP")</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates" id="05729bb2-e443-4c32-a18e-754d31c84ac2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Secured Demographic Updates" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "otp_id": "${=context.otp_id}",
            "phone_number": "+971559307088"
          },
          "private_data": {
          	"otp": "${=context.otp}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates Response" id="e2667957-b3a6-48a4-8246-e02d9ca70123"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != "" </script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Provisioned User Data" id="d7abeac2-b666-4fd5-a499-aa88fccb6278"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Secured Demographic Updates - Provisioned User Data" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and Provisioned User Data",
      "authentications": [
        {
          "authentication_name": "Provisioned_user_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "provisioned_data_unique_id": "${=context.provisioning_unique_id}",
            "provisioned_user_data_usage_authorization": "${=context.provisioned_user_data_usage_authorization}"
          },
          "private_data": {
            "provisioned_data_signature": "${=context.provisioned_data_signature}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "otp_id": "${=context.otp_id}",
            "phone_number": "+971559307088"
          },
          "private_data": {
          	"otp": "${=context.otp}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Provisioned User Data Response" id="1a477bd6-567f-4755-9013-40a1c46d0f5c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != "" </script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates" id="c49ba5cb-b1ab-4e9c-a577-dac1820c65b9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Security Updates" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}"
          },
          "private_data": {
          	"DOB": "${=context.DOB}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="967f8ba9-2256-4778-aa23-801fa6dd19f7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Init Data" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Copy of Init Data" id="1fd443e3-cb3e-4ba5-8fde-7ffc48f29061"><con:settings/><con:config><script>//context.username = "Daniyal@wirecard.com"
//context.password = "Test@678"
//context.username = "mobileapp6@wirecard.com"
//context.password = "Wdp@12345"
//context.fiid = 1150
//context.fiid = 1150
context.fiid=1340
context.username="daniyalmobile@wirecard.com"
context.password="Wdp@01234"
context.DOB = "1991-01-01T00:00:00"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d935b7a9-3ec6-4edb-a3b2-4ef57d9d9908" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Misc" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="Validations" id="f094d8fc-255c-4ec4-90ed-e67c88934ac7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Validations" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNMVcyMjdhUUJEOUZXdWZXcFVnRzV5VStNM0tUYWdsa0RqdFN4UlpHM3NnMjlpNzdsNElUcFIvN3l3MmpxSDBncXFtUlVqc3pNNmNQVE96K1BpSlVLUHZoR1NQVkRQQlkwNXpJQUVKdWVCbExvd2luWTBBbHBMQUc3aDl6L2Y4WHQvdmU1N2JJU3dGcnBrdVNmRFVyRmRRNHdjTzBoRlRKMHdTVUVwSTU1aHFXdVBhMEdRSnJFaHcvYlRoYTlqVW1YRzZMYlB5NHNtRnVjMVkwcGgwbFZXamZCeWRPeU9UYWVZY0dTbUJKNlZ6amdCemVITVJ2cldvQll0eitnVVQ1aUFWQW1OT3I3dm9MbkJQRlpDd2FRdDhPRG9aNHY3aG9ZdWZ3VUhQZis4TjluMk16Q2szVTVwb0kwRmE2a1dSZ1hXTEZESnJlL3VEQS9Kc1R5dGE1N2hkRDc4WWwxRStNM1JtK1FLZm9hUElxSjRLbWFPRGpTTjBuQTZIeDJoWWpFS3lPZFZRaytJbXk5Q3BOTlU0dDRCRVp0bUFxY25JODQzZFNFUUJsdnR5OGQya25RamtuR0dHTGJkYXhuVUtEaVlIdkFRNGVuSjJjdFVLcUVHT3FFekRSRnMyV005bm1yRjB1WnBRaVFFYVpCU2Q4RHZLRTBneDJVamJhSFZ2cStnUVN6NWV2MlAzVU5vQ3JpM3N1Y2x2UVhhY2lSU0xzakp1c1BaZk1mcUU5aVhNbU5MeVI1elUzNk0wR1VkYk9KMEtPUlBhTWh1K1ZodmFSLzRQTFlpQXArT3JTVFNLZGpqeGQ0QTM1LzJxL1oxUXBSNkUzTmJoZjNQSFZvUmVxUXQxM2ZDSGs5MktmUVk2Z2tTQy9nRGxMdVhzMnJqMVIxaTBTeFUvYWQxTm5kYzhleHRSc2pwYUMxdmdoTHgwVmp2YlJLQ1Z0VTdCWXJUdENncVZiaU5KQ3FNWlFnWGtzbHBWZ2VFa1BISXV3a2FhTjdKcTFpU3l2eS9RenlnbXFhbitaN0dDUlBCVUxWOEtYQ3RKSU9HcllZcWhMbTFRdFFMVklUakxScll0ZU0vMUJudHVmOC96cnp3MzZQVUR2OS8xdk1FN0s2eklCeFlGaytYMjRQM040UFh4NkxKNGVYdXc4MVRZMHpoak9kTXJNbFBERXh0THMwYlpXL3E2VFVwUnl0T0hMQVlwN1p2RmNzNHJzTmFHaGtWemhoYjN3SmVJM3dEKzF4NThiUWtBQUE9PSJ9.nZpETjGFVHth9e6clWanYwyIVIqpOVPV-JdNOvMH1N0AqxnO8hpeP6Ur3smUV9RpBEYd89nCRfyDIt9sX-s35Q" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/UserRegistration</con:endpoint><con:request>{
	
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Authenticate" id="60e53d7e-347b-48c0-a2ed-b378fda1cc88" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="90cdf065-0f65-4788-9608-28d00d0709cb" name="Authenticate" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://10.10.99.190:8443/middleware_2_x_x/Rest/Authenticate</con:endpoint><con:request>{"Authenticate": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yyMMddHHmmssSSS")}",
  "CardUserId": "Daniyal@wirecard.com",
  "CurrentPassword": "Test@567",
  "InstitutionID": "1150",
  "UniqueIDFlag": "0"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Provisioned User Data Usage" id="2780a0c1-3ddb-48c4-9681-e35e9f7b0f9b" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Provisioned User Data Usage" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>  {
    "authorization_name": "Provisioned User Data Usage",
    "identity": {
      "identity_name": "Owner of User Data and Provisioning Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "Daniyal@wirecard.com"
          },
          "private_data": {
            "password": "Test@567"
          }}
        },
        {
          "authentication_name": "Provisioning_data", "authentication_data": {
          "public_data": {
            "proxy_number": "3051",
            "provisioning_public_key": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiYANswx+5B5eitynXwHdVRk8Ew9X1qRx
6jAtbaNcNYN615v5zD6OmDH/UubsdgeV+rfEIyQK0kOq009sC1Ujae01IyYt/qu1MB2L6b7ABCQH
y3KEEESM6V3fR+0AVZD9v3Nq5ekXmj8NvQtIBoCol+sRkvI0KsPDd39mDN/uCgAaCoXOgpgRjE20
eUH75wV0pDMBbScPRqCte6zrdwDJsQy77CmyTclSLQS7KHyWnuxzDD8Q0p5Fsgb8uAPObWtWeAPv
i7e6AaL9mjEL/2EL6yODCzSQW1YqROHJvCKGNjbX2IOwacfqq+dd/oEAC5Al3g3atfIE8Unb4Kg2
KF2NAQIDAQAB"
          },
          "private_data": null}
        }
      ]
    },
    "scope": {
      "scope_name": "Prerequisite Usage Only"
    },
    "prerequisite_authorization": {
    	 "token": "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"
    }
  }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="6e28cd6a-4d20-4cb9-9a68-29db170e70c6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://10.10.99.190:8443/whitelabelft2_middleware_2_x_x/Rest/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "111",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="ValidateOTPSMS" id="ee8b21de-152a-4cbc-a48b-4247603d708d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="ValidateOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://10.10.99.190:8443/whitelabelft2_middleware_2_x_x/Rest/ValidateOTPSMS</con:endpoint><con:request>{
  "ValidateOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "111",
      "OTP": "681562",
      "OTPUniqueId": 2101,
      "PhoneNumber": "+971559307088",
      "AccessorId": "4"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="ChangePassword" id="a574e582-ce2d-4162-bad3-11c396f5321b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="ChangePassword" postQueryString="false" mediaType="text/xml; charset=utf-8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="SOAPAction" value="ChangePassword" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://10.10.99.24/UAT/EMEA/CoreCardServices/CoreCardServices.svc/basic</con:endpoint><con:request><![CDATA[<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/">
  <s:Body>
    <ChangePassword xmlns="www.corecard.com">
      <requestData xmlns:header="http://schemas.datacontract.org/2004/07/CoreCardServices" xmlns:d4p1="http://schemas.datacontract.org/2004/07/CoreCardServices.DTO" xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
        <LoginUser xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">api_middleware</LoginUser>
        <UserPassword xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">Wirecard1@</UserPassword>
        <IPAddress xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">10.10.98.101</IPAddress>
        <header:UniqueIDFlag>0</header:UniqueIDFlag>
        <header:UniqueID>MDWL180222222651873</header:UniqueID>
        <Source xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">YND</Source>
        <APIVersion xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">1.2</APIVersion>
        <ApplicationVersion i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <CallerID i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <CalledID i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <SessionID i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <ANI i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <DNS i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <Language i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <RequestDate i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <d4p1:ProxyNumber>1789121880857</d4p1:ProxyNumber>
        <d4p1:CurrentPassword>352593</d4p1:CurrentPassword>
        <d4p1:NewPassword>Pwd@4819</d4p1:NewPassword>
        <d4p1:ConfirmPassword>Pwd@4819</d4p1:ConfirmPassword>
      </requestData>
    </ChangePassword>
  </s:Body>
</s:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f93d6f1b-56a3-4b4e-9938-1cd239e65301" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Anonymous - Anonymous Services" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="56882eff-f9f3-48b1-976f-2dbbb11edc02"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="b378286a-1f6c-4e04-be11-1d105267e728"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="66fbc4e2-fafd-4380-84f7-0aaf5ec077e0"><con:settings/><con:config><script>import groovy.json.JsonSlurper


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
context.current_token = l_slurped_json[0].token
assert l_slurped_json[0].token !=""</script></con:config></con:testStep><con:testStep type="httprequest" name="UserRegistration" id="166a43e6-2793-469c-bce8-0687fb81eca5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="UserRegistration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${=context.current_token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/UserRegistration</con:endpoint><con:request>{"UserRegistration": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Validate UserRegistration" id="2ab7cf79-eae4-47d4-af12-31c9f0c9db3e"><con:settings/><con:config><script>import groovy.json.JsonSlurper
assert context.httpResponse.getStatusCode().toString().substring(0,1) == "2"</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="4535c446-085f-4ef7-9ca8-8b383a55b2ca" name="Library - Positive"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserRegistration" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="UserRegistration" id="e899a690-f360-48d7-8d6b-f02797430712"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="UserRegistration" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${testRunner.testCase.testSuite.project.global_context.current_token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/UserRegistration</con:endpoint><con:request>{"UserRegistration": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Validate" id="643e7296-acf2-47bb-b49e-66782c7ea7e7"><con:settings/><con:config><script>import groovy.json.JsonSlurper
assert context.httpResponse.getStatusCode() == 200</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>InfiniteAuthURL</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>ResourceURL</con:name><con:value>https://10.10.99.190:8443/whitelabelft2_middleware_2_x_x/Rest</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI</con:name><con:value>https://10.10.99.190:8443/middleware_security</con:value></con:property><con:property><con:name>InfiniteAuthURL_orig</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI2</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI_EMEA</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>