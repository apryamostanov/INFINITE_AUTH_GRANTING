<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7a797db4-9d5d-436f-9e27-919d62fcad7f" activeEnvironment="Default" name="Infinite Auth" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite id="beed602b-191a-4d5d-9443-0c1af9470544" name="Infinite Auth"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="967f8ba9-2256-4778-aa23-801fa6dd19f7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Init Data" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Init Data" id="1fd443e3-cb3e-4ba5-8fde-7ffc48f29061"><con:settings/><con:config><script>//context.username = "Daniyal@wirecard.com"
//context.password = "Test@678"
//context.username = "mobileapp6@wirecard.com"
//context.password = "Wdp@12345"
//context.fiid = 1150
//context.fiid = 1150
context.fiid=1340
class GlobalContext {
    def static global_context = [:]
}
class WorkingConfiguration {
    String phone_number
    String fiid
    String granting_url
    String resource_url
    String expired_token
    String revoked_token
    String expired_anonymous_anonymous_services
    String expired_read_main_screen
    String expired_demographic_updates_update_profile
    String expired_security_updates_change_password
    String expired_security_updates_change_security_answers
    String expired_secured_demographic_updates_update_phone
    String expired_anonymous_updates_customer_onboarding
}
Object.mixin GlobalContext
WorkingConfiguration wdi_configuration = new WorkingConfiguration(
          phone_number: "+971559307088"
        , fiid: 1340
        , granting_url: "https://wp1.wirecard.com/emea/middleware_security"
        , resource_url: "https://wp1.wirecard.com/emea/middleware_validation"
        , expired_token: "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"
        , revoked_token: ""
        , expired_anonymous_anonymous_services: "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"
        , expired_read_main_screen: "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"
        , expired_demographic_updates_update_profile: "AnT8A+FqYexP8kVT0cuE017Pox3RGGWoKmqAXVPJr9m5ASWXyilIaG3dmu2xWwMyrJ6WdQERAhGug0kAiMdYmJLYGpzJwZDdkdrRLPjKRag7e9DsMncTLymd8zhIbmwgCAvHwZYF8dw55272PxQN0tLmlEFrNtEQmrQbsoIsrFVllgeIeaoOoOlhSmxLsXe6pXp3RDCv0NU3+da+PujAqI40U2XWJexZ/KwHjNdikClw40bCk25Tf0hWtw3U4tICIdJ2uiVrxt3jzcfW33TZEgj/xjDN4FN4GUyFOOgPFeM3dEhMw1fBTJnXSEeiY7tsGjB4Mqq6BmpSLSNVEQOuetrjuCp7Fq1uXS2yzofTIZCdq/xRm0gXuPNk0N6u6XIyQWpkQ9lak8/n5rQKVJtkOkwzok/pYFnWQokY32SM6tm2HkZHF/M1els7aRQ7WrK3B7obWKg2EKNwK+pt/9BA6KH++V8amcRxNKhX1vLJRGjaYPTvNJPtPMoveqPYKPeNs24xm1/sgY1S4V22dRT3Z/tCXNiNZ87n/hLn6dpX4MZ4coDJi89o01ULLTNHR6cIDxsFVWR2KhOgxKPOdrhNVDN/goxyqpKVhomX/VIv3ycicOjH+95tbuDF0SGHnNq6nuPE0G1O7Qrzf7heBoEVzXlVOENvuKXlVrStCBSX9eir5pw2tR8du+ZsbV2xm+ZcFbQC04p+2PrWLd96j0T6wIYzu21AVPKGdArYbuHQ1+wzVMUIMvf/IvZmccJKczfpf7Ib5n/l+yhzPS+P6b0Yza+Bp45MvfwfPMchy0t6xaejRwsT1sMUXthnJs62oKIqpGZQgntcWHKAAx35GPfuyNO5QbjFrufQmGObMVenQThk5CtYgMRDIS3/WPr8MsiWtBLQjdf+8R2/BluRErmD0QQwPadj/GPINVRhZ7B41ri7JrA0q9dmJRZPD8qVshTDkx/4rkkn5bo63fOxo5+xBAzzATFgvDsaJChdKd20/vbAveMI5OCcoeQAzd6pzbwG0M8YWB4jExCEXmSX9iKcU1cZct4Ztiypsm9O6JiFPUTmU4cWO1HXaEhHcdtYjYoFc8H2CQn3ZCNaSbSWxgq5ucAf4x5uVupDlAaAjp6ZWXe9QjRHAkrZN1nlVfxkWGg58KRhS/NTS7gDip56+QoHDFcfg4rXIc3Tzhp7HB0pnbDiPPqdXqJLuZiL34yPTSEzWASNdoGYOpsYqibC9NP+bVun6W4QIxLs/4F6VILXfF+W253QxOMc8d9TIeBcABP/79JsKqZ+ydWlG7KuBJvVCDgBV0RpO9CwUs9Cn4c6Ed2EdF7FciGnAaRp0HFA+hgncplbLp63hS6BLOllp49JR0KovcTKGX1BcZ6/t9fesDHOVQOM3bSb4j9Jnr4H9Zcu3wryDdu9WFIo2C1aQCHNfyetNi5Ut9krARXElKfa7xaAd3qbb5QGdrVytPs2N8Vmbm3kwt7l5V/4utPUs8maqSjRoSdJvgmTwL+G5Y7mMXWr4pe47+o5L525gs5Kdid9mKtGEwlITnCTliXLMl0gbwXwZR58/9tokc0cxkWbIwt+zsZhKuDlSMxfvC/FZvsCaBP6igAFacdM0X4J8eDXDA=="
        , expired_security_updates_change_password: "hWplCyGRa2eKUuD9r6uZjOKUmxYFn6SQA/vl4MlYaYyde+3IWdw1Lae9hZPUFlbk+LNyF8uJXVjfdvma6XYYO0J1sbW/u4l2HWXMVi6n8MeCc+HOefWsCgCmdyXKo732Iuf7+4VMEl45lO/7d69J9ZsyuIOQmvjyDmb8qgu68aN4lOlX4ct492rSSewmazWjVdgnALFM6orYYtiOiMzG2qYWAapDK0ycIH5ZUJOx/Mdc8CYIa6SmEKT1M6BiQNd6d8EL61sidGrkTqzSKuO3tNlRWAwY8biKNg+gCPs0/miNfIABx7iZH47HcfuSli9PnL/9CnKpvOlBWoIDN2Vs64Z4UYq8sEmpTc51HJeHdhAPAHpjTPYslWOui7+rw4BX4j9pfAFZo791/WiptJYgZukfFO0GgfCHBs+hNXX69i/rlWZSHYRek/NhTs4ogD/o+umf8HXAuPdy6DoK8OtNZPcwGygh7SonnIjiw38egxsezNRyjMN6qjEDRdElm7DKEA1nq/qB4ULz+2JIzt3hiGtXXofBHSDE9sqPpAWWTaIA0gAinSKcql4nR8gOo/MzKQsuf9hDm2fvwmPfkE4UA9bvEjpvOfJDg61nTOxtbDF6v252LfEuAHn9i+wm6XWM0GNcT6EJQ/apQbqLU+RfW5EfUMhoIrdhLWYvkJTc6724OL/5TqxjbjjKhhf9mnsk00iL88vomt7De1rIcifvH2XBSmf78JkJIzFqtHJI7ARsFi7jnrsmhHtHgy2wyJe2deScG39x7w3S2dC9rup7oTowjGzgLHcCWX9exm4qIORcAhLCiDMELxGRi3ytMkoiSX41jA2+lhtzZs+nP9LBZw1ciatSSFfqqDU6TWO/jWPIcRCxpj/efN0WYwUXHNgPoPZy9ZnMYa6j5Gc67OQF+iCN7J4tNe+AEUtgasa/PuPU+x5hbKKtsx2IRZ3iJ15xt6YxxAsq4vdK5P+gdXixbFpW09wYdvulCHWoEDDb93AIB13W7Ju00lsgX1JkLAo6m1en7ZuBGVR0hTy64Q6/Gr7ZR1/0RdaVANSTaDfBKs6O7OqC7PYY2E1/q7mGC1miRFUjugoltljrMTv4reASck4qujEJNNTA0W7IumwZQpag1HZDjNMWGsX9qhfMFHApiocseFkw9lc4hGtusaUr0BJ7kOv6920HF3Hfwnlwq0oYgEos1tEl5NzMPhObsVMfUDi/xBSXxOKt21Q4iPvlgUQWWcv2tjHAY4E9Q+9wm7zC167EQ7P8bQh41czNx9Z7hFlKQgaGuogscIw4FsdQ4U4XeYhcUDe+NObCXCtpdQE61kuKdcTIRRp61zjeHe/+yVzStTs/LZhiMBMXXaJLfr/dvtwpSpN5SOIAn21KAmybp69nIpeSkXCYb2BhdwUPkiUHWYQfN6DCQEYGQwaWl4k1S91qKjVKN7vOoCaSoy4GNR2/9yiw0jtFjfFXjYEhikJ8oeKFUzkGNc1+eDHTr7ESwKDLbwTSRT2AugiyLWW2sZ9TzKlf/uq8vgAp5yQol2BszGD94r3Xs43vf5DJXgG2pLYNz6QKu1lSlSMnPKZZvYhyiBW4/mzXgePqs4TN5kXH68BH/CNWB1NwuxZUbkBzC7LiIcQ4ALWr1/E/0v7Mr/Ut1qoJne8eMwIa2/s77tqIYYV2KvjAAR7Tc9MF3A=="
        , expired_security_updates_change_security_answers: "qqNS6d+cDhYg3dL7YMk5RXbCz5SeHzxPFYJVE2lxwm/uCERjlE9GJT56Y0hX73mEDHc1S4drJoQLLrEPG4oRnqpyxRAuFOcQKMB6RlgWJiYBqs6O6deiuqPuOZ+Bd2r+bh+7ZMHfTT0/9M9MVsZtERj5zrZAEN4tYGdUZ64yAeTp+ETqMaXVfAcRPLUurZz3AMBydJd3uAy+QyiszKSFSOy3iOtqUUBGYhzj5g4Cd7sZP5nIWr5t6g9rhPGP1Cs97rUdF+BNvr/pxt4P5gyIWhUJM3Ax0i6Pa6utz33Fd/Vn1X2Db0WjndErlpBe+aqaGSasbuEgF9HUsMGxEY+nJQ1SZkhQt3DTFPbY5IeoZN/odxBKfI1nxH2JqKKd/gO7ppxmHNvxjXHtQr/TrvcoCq1geCofClqORGZ8ymVBpBV5WE6p3duqS1Fbob6oyjUq2ZU8X0SskBIs/2AMIpr9vqvAWZjC5CPcnpTMiblnBEm5SbtKpgFWLnVsrdfxxYzizgBavBmAEt6tybkRebcBd3qgAC8BnjKT6ppTzvMt+bqaCGPmzjvG92xubma1xPV7o/dPiJa98YSf9UYYrqFKn0GfhuTgKp8byfrqQitVmdXwLeU+1uK1fNodXsgSeZICmbHGyf+Spq20U7zzmmi/zzPWTPgFUEYlVonSEJvWsRN5j5nWNBXA0y/G3pWuDoua02AYp1lzHuI1N1f07USaYw+SC42Hpdv25/e3N84oh4jIe6ceXVcCMRsdOqwpor3lMLSF9hmxTx6uYOtuohLDPt4NQkP9lC7bQ74a5sFR+Kw0UT/p18klvoeWVsNVtqohT4kbl/ushVqcDWljfN2d6fEyo21KsnDqPGphiFOEiyWdb7E5uqC/MFtI8PhJ97zYGI5KFn0qacZlX1v+hGgNnAu+YLk6KMUGWmtLhLoLxptiVoEEHn4CiGAi2RhNw4z1XRT1YwWbp+6jCLOaMW+SJNWfPZb8glf78cilaoKeZvWrnfKkfUJMFRebRwCop5T8cLrZfQK0fGbB0RrdsABnG5IcQkzSsmeFUjbW+3GZl3jef5LQjx8JqAzeqZaKkG7GZttHJiu1bs5wsRSSvNo1AGAwqfkKf2p/PCNWtr+abdG6Gns1jWmyuVyPOjv5ZuE8vgMD+4zmK2IabTAj69wMiZQZ5L/Fl4Fbo0fwbEZRYjNggLHt+qvkNOLUhAwzv8QP+I+ITbD9nXaE3JdcWsJ6b9NgbM3VufUQ6dGwgKqzbaQko2INJWFN1ND6RhOIVxT1y6MjRQa8+vFXk3EtTpN7LVmV6fIeeRzXXb871YfbVT/m8jJfBPp+gSB+Yeok9dmTRH4LBbfqsCy343Btg6dYCcF6Io/l0ZeGQK/7XTsQHiykJNIu6fgjv1LsIyFjXUwsACrN9mhihFHlDtFC/eTL/XCxq5y/vT8fCBTZatYKQY2/9O8LO6BZi32VpdQYmzwwMrKm4ViIKQkNIKlPQsRi3UHJ+1wSAfkWCdImn8QopHq4U5izSOWLM7Jq62/2XzhmRUK/gH05+iPN3A3R2zOvoF5JfaCcC00NHD35P5SS9D7PVj1K0uacYSGjoRVQVYN6AclxEGLGme/TAnM/+0eOOc7H+P5Oql952zugpv0uHYdp7d2mbzq4jZZbftXXKzQjpFITyu5ZQ+uTjgoSfY4Dt4fmf2LUrYPgMzfbHRhMgEI="
        , expired_secured_demographic_updates_update_phone: "hWplCyGRa2eKUuD9r6uZjI7IYZ2Z02v7TaGAAgSoU28PT/Snk1gv74V1A+tEgVQNLVDsVA/oFH1hJMGL5vDTjmUZnZmZf+IZ7sHUWYn7SjJU2MGj6O9732vppn3gaEfKvG07x0P/7JhES72TRWKwyTouqjfqpEws7qupatrQbUgec+gauIz0LzlX5koD7HJsr667qbLCNQJCMthazDVQk01B0tXS9+dA7Q64nDXxYMFIUXCloUaCCZCoPqRaK+E/W7eqdzNpKFiHvaowOJRaMxVl6SmXYnPi0UNvJPcnY8KLamo/V9mlZ04GQ0GfUTdg8dpSX9SB+eZHeuxISu98IsgZzAske8DLU/z8ljrfmoj9VlIuVNogreaNLTjly27JdGQsAGlCRPuzxoqc1KTmS9L9rYkAj6BDkOAv6ZsAx7aADSQ0QnIrvOMjdbsZT6lyaz78FHb5g9F2on2DhwMc7ytTQCQiEX5S0WU5B7Z0zn8hUB7ie6uCtMfHxvEvFTmAo7KT/9YgTo+euUD+lnya2g1YM5Xy9PbXmA3hBK9+xDoN7virQR0lSmWJvhk5jRWMRP0909HpEeeGDd5XeBNeAb3ApWfcQJgDVyFXyHq15tUwhF2KuhRjCrjRF2SaOEnnimS5OH2e95NS/DPN6XJ7HrVbyDwbffZ+BxMZ06F2dFL/MigajcojTowhvOANJckUOwUqJEEJvHmXdRNabvshd1kLaCwSFe/Pt62EejXhMl3apJVYndKjHRuO2zWQpSoBs5EmArzq3mPpFh3XKs4AyjwphnJhuvqAxG2hHdz/Js9ZhQmr/OjpMKbgqOdFWDB4sch2/VcWYuUwhUR3hJqWUCPvNQ8j6E4WFXzsYSC7VsR5PSJ3Wn4UrgmzL6L22pSVgfw7q/dN5p52nVeycgEZx0ZnyDmQgicKSPhTDENWTr4/G7jAxKGoVxgkkc3mu/b8p7S4fyfbMkKJ/r6kOc4p5an+4glhpRmphlBj23C+HOBUSfWQGAURocOiDIDaDrWvgDnz+fkoTUjHQtq/pEp1sME52Ws5x20b645Jg3wDegXwwYA/lhw2UmD2A879Yh32+vN5Bdrx1iN6x8oMlGXBCcBZ5ogdfhWm/94gChVuCeRLK4o6Msh/DUQ6sXLvevrUpHcsSTkdzghJBk72IX9D38FmcGjRd8vC5j6FOUIo0d/fp2uwYDgTWIlN0YhbF+4BmxqA8GyeUz1kBohQ9cTKeDR92jGaIrQ8cew7Oonrqu8bh+PZmemzQGQ93iYkptfOFDxNSQf37sXomI/yR8x91RwZdQlLp8qTdXkDAtsmp5YV81iDj23NVsnyK0r9mdcEop5AszYumBx8fPlGEhwSgMeC7fvNRb2v0v1iQyzTV3a/5hI8DLQcKX3ME7EggbvP66c2k4SybIu5ff+mTqdkSpfuDd42mSLxOF+bs7A+ESBGsbI8fJEYtzeCzMYQ97NYtW/9m1/kNOqZbwNv0CdsCDPLKQTcn7J9n21Om1WpesKdwEKes4+zl4qiUJb9icM1rOGgU7DS8WplhdiRnlkM6nkDno2HNaXkmyHlv3qUjMkR/OODHwft2PnxNVN0EDFrgcL6vfXY8qtmMHc1OK015Oz0CzFR1T/Cx8OnLTMpUqlmZoaO4Je+0JsSM0FjZ+O3CVKXKEPGkowfzf+RR+JAD4GUecwluGX4noFOcIyQaqh/x2PUMwI4uvPN+ah4gavC4dDabEQd6AoOi4CN+7ehxZkhfyn4CO+S6cnp0DUqauskJAl6Vlu3QIE+T8VkVKGA6GPNBL5Czv2ftaB03X+cpg=="
        , expired_anonymous_updates_customer_onboarding: "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"
)
WorkingConfiguration wdp_configuration = new WorkingConfiguration(
          phone_number: "+971559307088"
        , fiid: 1340
        , granting_url: "http://localhost:8089"
        , resource_url: "http://localhost:8089"
        , expired_token: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlZXVS9iUUJEK0s5WSt0U3BFUGppQzN5d3VSVzFJd0xRdkZiSVdleEsyMkx2dUhpRXU0cjkzTm5aTTRsb3F0QkJGeXU0YzM4ek9UT1o3Sk5Ub095SFpMNnFaNEFtbkJaQ1FSRnp3cWhCR2taMk9BY3RJNkEzZHdIZTlJRGowQTgvemR3akxnR3VtS3hJK3R1YzExT1NCZzNURXpJblNGSlFTMGptaG1qYTQxalJkQVNzU2ZuL3N5TnBzR3M4azYvT3NwUmk1TkxjNVM5c3JYWHMxS0YvR0Y4N1k1Sm81eDBaSzRHbmxYQ0RBQWo1Y1JoOHRhc21TZ3Y1QWh3VkloY0RvNHcrV2d5WHFWQWtwbTIyQWo4YW5JOVFmSGJuNEdSNzRlNGZlY0g4UExRdkt6WXltMmtpUU52V3l6TUdLUlFhNXZYdjd3d1B5WktPVkczSGNnWWRmdE1zcG54czZ0L2tDbjZPZ3pLbWVDVm1nZ0UxaUZKeU5SaWQ0OFlJOTErS1VraTJvaGlZeGJ2SWNoVXBUamIwTFNXeFdSWmlabkR6ZFdFVXFTckQ1cnc1L2ROdUpRUzRZZXRnbjE4ZWtjY0htRklDRGdPMG41NmZYR3dZTnlEbm9HRklKK2pOVXFEWFNWbFBkb3dadk5ydGtlNUR1b2JJWlhrVDRpcjlobndrNUYvb3JTa2ZaTjVxemJBVXhwUkxWR290NHl1OG9UeUY3bjdoVHF0U0RrSDJSM3lEd2RCTDNSSTZCWjVQcmFUeU9Yd0g5Z2hmWkdsN0JuQ2t0VjY3dlZNMytSeDFUbVVXcHRnT0x2dkZybnZheUFKdHo4dGF6MEZRSy9yTXIvWWwzMi9KT2xWbFA4bHZYWnJ1eFBUTVZ4Lzg0VkRlTlFidTQycTF1aWFoaGh0Q0plT1dzTlgxYmRNTnJPNWJGMkx6WFVFZ1ZIU2NwakdZSUZaS3IrbFFiUnRQbzJMbU1XbTdyZURWWms5aitQa00vNFNiT1ROM3BSRUVxZUtaV3JPcmFmUTRTZmhxbUdDNzFUcXAydSs4UTNMRXQ3MWx3Wk9MaHJodnMrdTYxZXhRR2g2RWZERHd2K0dTWkNmT0JaY2xrMVdQc3VhSGJOZDd1ZzY3S1ovcTFqVk5ZMHlSbkJkUHJaR2FHcDlhVzVpMDFkZ2lxajR1UUQ3T0hQQUVwTFQyYjR0WnlaUTI0b2RDd2JPTm9jUTk4OVdmNkRTWWhseU95Q0FBQSJ9.qWQARZyVgO-UJhLOgvxciSc2C3Dk7-rVIQd-OU-v9UBWVdrnA887LROzVFAbunsGn58NBSabiS4nEpTdn_9xcQ"
        , revoked_token: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlYyMDdiUUJEOUZXdWZXaFVpSnpFUS9HWnhVOVNHQkV6N1VpRnJzU2RoaTczcjdpWEVJUDY5czdGakhOZFNvU0pScE96TzVjenN6R1RPTTZGRzN3dkpucWhtZ2tlY1prQjhFbkRCaTB3WVJmWmFCaXdoZm4va0RnZHVmemc4OHJ5RHdXaVBzQVM0WnJvZy9uTjkza0JOSHpsSVI4eWRJSTVCS1NHZFU2cHBoV3RONHpXd0l2N1A1NWFzenFieWpKSXV6MUtLa1hOemw3SzR2dEtOVjRYeWJYTHBURXlxbVhOaXBBUWVGODRsQWl6aDAxWHcyYUxtTE1yb0wzUllnbFFJakQ2RDNxcTNRcDNLSVdiekJ2aDRjalpHL2ZHeGk1L1I0Y0E3Nm84T1BMVE1LRGR6R21zalFkclU4endGS3hZSnBQYmVQeGdka2hjYkxXL0VjWHQ5L0tKZFN2bkMwSVhORi9nQ0JYbEs5VnpJREFWc0dxTGdmRHcreFV0LzZMa1dKNWRzU1RWVWlYR1RwaWhVbW1yc25VOUNzeTdDM0tUazVkWXFZcEdEelg5OStLdmJUZ2h5eWRERFByazhScFVMTmljREhBUnNQN2s0dTJrWVZDQVhvRU9JSmVpdlVLRFdTRnROOVlBYXZObnNvdTFCZW9EQ1puZ1o0Q3YraFgwdTVFTG83eWdkSno5b3lwSTF4SXhLVkdzczRobS9wenlHWkRkeFoxU3BSeUc3SW45QTROazA3SWdjQWsrbU43TndFcjREK2kzQUoxUW1RYXp0MEtCbitCNzRONVhNTnVrYUZreHB1WGJlVWJ1Nkg5ZWNrNDkrV1BVUTJFbFgybFhiVVdVMmsvelJ0ZGtlcW82V2grRi85dnkyTXFnWFY3M1ZMUkZWek9BN0FTK2NqYVpyaXphOHRtTlpqT2E5aEVLcWFEbEpZVFJES0o5Y2w2ZlNNSmdGSjg1VlVITmJ5NnZLbW9UMjl4WDZCVGR4WXNwT1J3cGl3Uk8xWmxYWDduT1E4TnN3eFhDcHQxSzEyMzJQNEk2dGVjK0NJeE9QOXQzaC9zQzljWS85NFpIdmVUMWs1UytXbVRBZldPVk1GaDNHZmRkMzI4YmJmZEJGL2txL3RuRUtheHFsTEdONms4emM4TmphMHJTbXhoWkJkWEVSOG1IeW1FWWdwYVZuazkxWnJpd0JHd29OcXpxT0ZnL0ExMyttUC83N0dRMnlDQUFBIn0.KK5UUNMQ-6B0a_EC-LClfeuLfe2lSy01RKKtMOim92Vg1lpfrmiv9Nq2EWJ1CWVTNlHk4-LBlmOADdMIJ_ynpw"
        , expired_anonymous_anonymous_services: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlZXMi9hTUJUK0s1R2ZOcTFEdVVCTDh4YjFKclJSYU5QdFphb2lOemxRcjRtZCtVTEpLdjc3amlHa0lVT2FOQUdLaEgwdTN6bjJaNTN2alZDam40Vmt2NmxtZ2llY0ZrQkNFbkhCcTBJWVJVNDZBU3dqb1RkMEEvL002d2NEUHdoT3ZSUENNdUNhNllxRWI4MTZDelY1NVNBZE1YT2lOQVdsaEhRdXFhWTFyZzFOMThDS2hEL2VPcmFtbXpvenlmWmxicXhZdVRSUE9VdWJMZDFtMVNoZng3Zk8yT1NhT1JkR1N1QnA1ZHdpd0FJKzNFVWZMV3JKa29MK3hJUUZTSVhBbU9QM2xyMGwrbFFKS1p1MXdFZmpxeEg2ejg5ZC9BMVAvZjZaTnh6ME1iS2czTXhvcW8wRWFWc3Z5eHlzV1dTUTI3MDNHSjZTbGExV3R1cTRQUTgvak1zcG54czZ0LzBDbjZPaHpLbWVDVm1nZ1UxaU5GeVBScGU0OFlLK2EzRkt5UlpVUTkwWU4zbU9ScVdwUnU1Q0VwdjFKY3hNVGxhUDFwR0tFbXovNjhWZmJEc3h5QVhEREh2a3pUS3BVNUNjQXZBaElQM2s1dXFoRlZDRDNJQ09JWldndjBDRlhpUHRiYW9YOU9ET2RwZnNQcVFYcUd5SHR4R2U0bC9ZMTBMT2hmNkcxbEgybmVZc1cwTk1xVVMzeGt1ODRzK1VwNUFkcCs2VUt2VXE1TDdLeHlwc2ozb1BjNmEwWENjZjZkRFRTYnluK0FXVldaUnErNjR3TjQ0UFhxQk41OEhCNjZ1Q3ljTTBIaCsrOXk0emgyWis5L0wzOEI3SFJ5Tis5N2tmSEQ0R252MFhLNDkxUURPOW10RnUxYWlXaDlDSmVPVnNQZnRHYVN0cnQ1YkZhTzgzVUtnWG5TUXBqR1lJRlpMN3pXb1RHRTJqQytjdWFnU3VrMVYzVFdMNy93Njl3bkdjbWMwalNoU2tnbWRxTGEydUhlb2c0WmRoaXVGazc3UnFSL3dKd1VIYmlKOEY5MTF2K05rTlB2dG5ENTRiQm9QUUQzb296WitzUEdFL3NDeVpyUFlGZTZIYkRkN2xRVmZsdXdaYjRoVGVhWkt6Z3VsdE16UERVeHRMODBZZk95cTFUNUJRRkxQWFBBRXByVWFiNHNrSzVnYXc1ZEN3Yk9wbzhRS1dMTEw2QTdPaCs1bTNDQUFBIn0.K2Xwu9dDebbNw3hb1g4N0QQiGDRlTaym_fX_iz5MfsdNQB_Z8iTxED9iIiJa248iv0kcxYLAQ8lnO0JVqUDXZw"
        , expired_read_main_screen: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNVlo2M09qT0JML1YxS3UyaTk3czdNODdFeWNMM2V4QWNjUDVBQ1NzTm5kY2dsSk1SZ0JIc0R4WTJyKzl4TzJremk1M094a2RpYVRxc1NXNk1kUDNhM3Vwdk9wUVZaVmxCZnhqbFJ4bnMweWt2TEdaY1BsaERYZVBYc1dzOGFsZXFIbzJnZTFxYmMwdmEycjd4b3g0MWtWVjl2RzVhZUg3L2RTeHV1TUYyZjU3UmtxNWFkQktuS1VXWlBSdmRDeWNmbkhwMmQ3OSt3MTE0eTl4SFhZbFJxWHExREU5R0c1a2h4SFprYXllRXRFbW9leDRQOVp4d1ducEdEdmFaNDJQcjlyTEl2NGpsVDh5Sml0aEpDYlpVV3FsUVRVOEZhVThySzhYWW5HNTcvcUJ6UmY4bHIrL3NzOVBKdkUyWmxIQzg0ekNWQnF2b3NwbngxcDVhRlNMbzBuVGRib21mQ0U0TWpkNDlWTmtiTVZyVzVJSWJjcVhwUm1GcEdNOHRyeXF5S2VwYVJNSktWYzFUQm5UNTJSOEcwTjlZK2prTDd4bHp6WGlkS2JzZmVDVmh3WDFZcUlyalJGdCtEU0FxOVJWWE9CVlJyeTR0MlpWTHZaSGhiUEZMOTRXaXN2NW5sMTB3ZVlpSmp0eFQ0ZSs0MHdHRGxkcFRLR1pwS01ITVBxUk8vN1gvLzk1NSsvLzBMMnJzOExHZTIveVBWaDkvMnZYMFFGcnI1Q3ZjY3JUd1lZcnlFWVA4VHlMN3U4NXIyaVZSM3ZVcVRudlVMdlY1M0xtcmp5TkI0bkJZMit0K3dIZy9XejI3eEk5d0xzbGFqaTdxb29lRWEzMzhHSTc4NnVLTTFYV2ZVS205YVp5ZVh6dUt5S3ZZNS9jTzZYRlJ6dkN5bkxkVjY4Smg5OGxWbnZiOExiWGdDWjhXQkJzcExRbXZWYUdpOHZmcndEdjVDT2FpLzIyVXNaNlJzUzhkZmRsU2R1ZlVIemoxSXNiZC9GM1RkS3RJZGM0Qk1oZUhWMHpVKzZwMGNMOHpHODhlelhaTDUvY3Z6bnllRXRBK3doWVpZbkdmTW5HZi8wa24zM0JPbnhqTDJwVitzYkpMa04yVHZFNGxzYXRlOW8yVnJVS0tjSnlvVDg2L0tQSzE1K2p5djIyaFlTTGRrYk5qSW5sL250Zkg1U3NRNnUvMGt1OXpWL0QrV1dGOTA4dTQyTDlPZFVUbWtTajh0M25tcklYMU83dis1U0grTHBVRGh1aWxoS3FYNVdoL2Z3d3ZKVzBkM2o4bDM1UjBYMzM4WlVQNHVyV0dwL3M4VDJZbkRWa2c3Tnc4L0g4ZmpLOUVMOTlyeHZMT0IvSFFrZUpncmtnRzJXN2NGSktsVlJkT1hrcC9WQnI4Y2ZqMDI1cExuYXJ5N1Byckx0MmYyVEdrZzlML243OFVjOS9kalBEQTdDMUE4WDdjUGVabnNDUSs2ZUt5MmxxZXY2Qi9sWWtHeStJdk5hTk0vbVR4RTlQVzZONzNSOWdEbXl3VE9tSWw5VnNSUjEyWEFQM3c2RVZ6ZFgzVFBuNnV6cThWeW5YRWZETmJ6NjgxSDA1OC9Tc0t0RHZ6VXJPYzB6VnU2SFZVcDlNbDdJRWhtWGNjV2ZRLzMwNHZpcm5nZTlOUHc2N0Q5T3ZBN3JJNlRENG45QkhQYS9CT0pBUWV0NXpIRzI5U0NPYjVaeHNYMnk5UlJXdFgzVXZTcWxnMllpVHVQcWZ1dDJsZTFyRnhFbm82NlRTUmZnYTJuZ2xLM0ZqQmVGTlBGOUFCem9UaDVVZlBNZ3Rjb1RYdnVaYndkUjJLUHhPQjcwMFE1dDdIalFmaTgzbFZDclJCajN6L3ZKWEtHSzZEakl1disxc1FnbWR0eU9JQnFnb1ZLcXJoYU1LYlJNaG5FWEdsRnp1ckNHVkF5OEtXbzV6RnBHb1NiR1BOMjRkT0ZXUWJmQzBGeU8ySUxxSkJYWFJCRVlhdGJZUVd4RXpQbWFRWEFlTGdZRVFLQVJFUmdrYlNvNHJUU1FicXBBRTJLcUJJV1RBQ3RNb2k2Rm5ZR1BCeGdZUVFmcDdHT291b2x0bW5jalJkR1lCa3gwelhLb0J4NHlBV0FJUkVDSWpldjNtellNREM2bUtzQ2dFNWpxRkVwOERtWWxNU09YVGF6SWg5WTIyRmxqRzBhR3AwWG1TTU0zTkxXcWNMSzg0NWxJL1hRVDAwa1VNT3hLMlczTS9JRWRHRlpsWTVBSDJWd1Brb3N0VkVFRTFVSGlxa0Ixc2lzMXVHWkxwbGlENFE1WTJBOXNyQStHUkd2YlF6MGFJQlJBRDBlZEVMVWRXOXRzN2Q2NkNDMXI2S2xMMVo0d0swaVhHMjdPTmI2WXQ0SnV1MlBqcTd0Z0VSQ1lSZWUycWNhZVJuZHdFdDFSLzJMdCtwWlA5YURGcjhVT3F3d2kyTmR0QTF4N2l3Q0dQWE9EZFZlbDBIVVFuTitSUk4zUlhxdEpkNEV5Mm5XTWNCSGNrT3ZsS1BTeGdWTTFDMVMwSWFqVjQ3amowUjVTeHBZWURUVno1eVpWQzRrbFJqQlorNmk1azdnOWl0a2FaVWgxRkx4bTB2OVRQUUs0dDRtUVlhMWRwYkxDU1g0SEZwRWZwQU9UNmxITHdaSHBtcEZHOUNYeTlBNEdDQ3ljU2RBaHBwQTJLRlhwaDl5Vi9uY05NSENVOXNBWExHT0xqdUdLYUltdTNYanF0NmRqMURhaDVxNkRERGdVVzFPS1dNdTdkcHV1aHBTdzJ3NXMyTEdoRnFVZ29adlFuRy9ERkFkVXBXdVlxQnVNN1IzdlZlclljSGRERmE4QnNoTGFMVFdNS2cxUFRCVWFiQ1J0dUtaYXZndlZ6Z0trNXRvM3dVTGFQWEV0RjA0enNSb3ExZ1FMUmxCbUZtRGg2bkRoS01pS05rN1NWTWRtMUpYVXFxT0xCWVNkUHVtV3hYaVNLRHlkYi8yNGJJMlU5VzVzOW5YUEdyU2dYQU90U2ozVFVWeXRwZGxXTkFKR3NrSEl2Um43cXVKbWFEUDF4WVFZd3ZCU2ZJUGxlWVBNdlo1aW9ORE1VYWRKRU1IZGZDZXhaMzZ2QmRHazg5RlZ4Y0FWU3h2b3k0bThGOWN1SEh4MHR0V0MrVmFHZEZ6WWVMckRGclBCdHEyRGhkRERoQzFDMzE0VEFYS2tWVm5vdXh2WU03Y01SU0xVcU9LbmJrNG11RWQyVkVlWjVZMTBObVFxN2s5VE1SeWIwNVlOTFcyb3RBb29PaHJydFV3QTNkaEoydzVDemk3VTJ1ZCtYTzJReWF5UkRneU9sMXRraVY0QWcvNDBjUk9nYlZ5Y0JpV2JNREpkdURudTRjaFBxdk5BeHlVejFYTmt1cGhmdS9iWTZBUkIwbTdKWElNQUdyaHVzbkY4cTlOeEo1MHQ5cTBZWElQQzIrRnNPcUZxWUFKOW1yVFg0UzV5UFpYWjBGeHJEbVEzMGc5cUNJRlI1N0orcHJ3ZmFwUDFxaTFmQ3NNUXJQVW9WT2ROb0RoTzNKT1JCc2sybmQxT1p2R3VaZCtXRERpZFdYQVJ3NDFwdE9OK1BDQmE4eUsrVTJSd1RVZFh6b1hJeHNvQWYwVEdKRmpYLzZCNFZnMGFtcUplL0tib3Yya2ZvS3BjNnExTFRYL2YxdFYvMVMxQzQxbWRlRUtzWGlyUGlWK3FJTWVlb3ZGMVZlUlRRK1R6T0p2ZENsSVg4R2FONEVuNWFOUjZySDdmcUZzSnZWbXY2djVqcjZ3dTQveStmWktQRy8vblh5L2ZYcGNhbi84TDM3SEJTTmNhQUFBPSJ9.-GsMiM4ljcNz7tI3Rbnix7jZHKfWpFkmLwksqYjQEqoR4g8nKYeqtXVz19Qal0SYqxYAB8IwLIYvSM9DaIvv1w"
        , expired_demographic_updates_update_profile: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWStqdUpiK0s2MzZ1ak5YNXEyNjBwOXVVV0FJRlp6QytBVjhkZFVDeklRRVE2aUVWSURSL1BkMXVucDZ1dnZPN2tvYktRS2I0K1BqOC9yNC9INVhYTWJtZU5vdnhiZy85cC83b3F2dlB0MTVkWGZjbllxaDJWY2Y2Q0NMc1Q3Zi9mSVQ2VjdlZlRJZWdHVitOR3pMTVczSHZ2L2xiaS9yZnR5UDg5Mm4zNys5LzhsMGUrM3IwNGZqYngvb1dUKzlZaXkrOHJ5UlZWK1ludTgrL2V2M24rYitYSDViOVZuKzNhcjNXYjNqY0NuVnZ2bzJ2T2dWWHhmTG90L1BoZXFPNVY3Vi83enVUM1ZWbk9RL3FtTjM5OGN2ZDhOcC82YlArSFZoZjFGS1Q1N0hZcnhvZ2U3U1MxWFY1L052RjNYM3g3OXZINnJqVU4vNGYzbjVKdDRYTlgxNE9SMS8wMXRvR2ZYbWIvdXEvdnlWWEorcnE3WCt0TmJ1WHJZcCtZN2lCdzVmR2ZDOXByMk1MODJ4dnpHN25QYWZ1K0xjYWpJOXVzbjUrVWRydFBWOGsvVmZUL3BZNk5LVjllbVhteXpUL0Q3NHR4Yjk2N3B2NGhkVmRiejA0K2YrQzRWZWJBQmdnZTkremtmcnB1c3ZweitldmhqODd2SEw2Tk9IeDM3KzhPZVhtM3czNC96ZnVyNnAraWd2MWZqT3pQajRzSHFmbStidnhOQ3o5OEFCdG1WWkgvVm5WZlM3UzdHN3NhNzczWThTL2FpRm0zemZqOS9GM01Ub3AwVW5yZG05WnZYcERyKy92Uk0rdmp3K2ZVZ2VQenorZGE3dlYzMVYzRjE2ZS83RitnL3RFdkp5ZWpmRHVhNk92ZFNXc01EdFhQV3BmcjNzejN2dFd6OEordnZmQnQ3TjlmNHV6dDduL3dxdTkvRlhnZDRIL3luQysvei9Kc1E3UlhXcXY0WFJOM2IxTk94UDh3OVRQNG8xem4vdGZUbHI4M3hXKzI0Ly9qbjEyNld2Ym5TRitpNnF2Z3NxVkYrMWVqdDVWWi9yMDBrcitFL3p2OU45OTJHc3AyOWN4Mk5iMzZ4Y3oxRlRCdFYrdTQvV2RLRlR2STlXLzlDVG9EUkhWZTdYOSt0MkJ5cWczSVRDUC8rSXFhTVpnOVVyQVZHOE1mSXB0ZWhja05hcUZvbTJub1ExUjNGc01qdmg2RUE5NWlZR1dram50TGtwejJscnBBSkU2d3BnbTVOb2ZsNlVUWmJvVkhldG9YbmFoWW1Ibk9HcE1sQ0dXcU9sSG1waWkxMWx1N3BTSmdyV1RVK2liMTVMR05sbEgxOXJQcHJFbDBWdXVPZkN4N2xnYmw0WmN0a0c4Q3d5dUM2WHFCY0VUbmtYWDJYbno5VkIycVcxQXpFZk9Uc29FeStzRVhSbmJVeE02cEFaaE9hek9GQ0xkdU9FT0d5VGRyeWtCc3U0Y2xQWllVK2ZyU3ZiNWhwM2liVk5SeXNtUHFpSnNsUFlDQzNUeEVOL3dqNTFNS2lNd216MC9IREtNNlZ3aG1ISlY2cjJjTEpsZ3kwTkhiMis5R1VIQytSRlNYVlFNL0dWaVlMaHpMekdTVHNGQ24vd2NqVXdac0V6WlpodGZkRXcwc3pwMHVTY095RWkxVnRGbzN2YTVYWVpyazhiQ3kxYjVqN0xsczY4bTliSnNnTjFpM2pTUTdPMDBMWHNkMVBsc1FZckZKZUxlMkVCM3BlbTBTV0FBc0tIRm5tS2syN2NFeVptdHJBbzVkR2hZczJWZGthZ1pVWGJFTTkxQnAzVVpOZWNSU2h0UjU0dmtDYWRReEdKMHExZlhjbEJpV2R6T0JGUDZ6a2M3bm1nMnRTTUZ0RXhqM1dOeFQwb0txcDBXb3NDK1RUNkZNQnB5eUxPL2RVVFU5RmNFd3hpTlhBU2lpSU5tajMxUmJ3bE9Dc3laQ0x1bkdQaVdvS3BJZTBHVU1NRWlQUU00bENHT0pqYUN1SU5Ob1pyQ293MVllNUUyNGMzWk96ZU5rdHJvUFNzbjI0Yzk5R3k5YWRRa1BWYnpWeGVlTzFiM0lzOGhqQ28rcldSV09LUVd4R1ZoaEpWcnlCbmp6WUxWWXdzYXFOc1BSZE1wTEdXb0dMNEloV0xwY3ExMzA1ajFRME9hZGVnYkNNUjcwZndiTW0xbUZkWmZWaGJ0ZDg2RWt4TEdjRFhnc2lwTkZjS2MzK0pseVpNU1dXam5tMElnVGt6QlV0TjRPUnNjQVJyN2lVZG5kUVNBcVdyQTFsRWpsVjBMMXZrbE8zVXNrTnVwOTNPMlFZVEwzdXgxMmZhODBCNi9OQmtTUnN0bFhiRE1oTThwM0xZaHFLcmV1MXJCK1lSRXc2YlpUMnpEQlZJUlF0ZG1sWjArRXhOYkFqRjFocXZUR21HOXVKcEZjUUdibE1MUnlLSVFkSWFSMEViSG9jRGUxN0VOUTVRdkEySGNPczFxbFpOUVR6Nmxsdml2dXkvK0xxcnozL2tiQkJsS3p1aWZWWHNINjZGYVM4eGlGNUtIYi9FaTY1c1B5NTVPOFFGc0djV0NvaUNhY2t6ckxiOFlXWjl4Rkl3SHRKZXZURnZaMjdBbUtTTGIyamZjdVJCMndFcVFnSjh5bHZuTmRWK3NURWRJTnFkUVMyRVVVL2Y0bUEwdHRuQU55QTVNVU1HVy9Kb1M1TE14Rk12QWpKYThwRVVod2JFcGpOV3JjcGorbURKL2RtZ1lIY2lvY3R3MEJnRm40NnBCWFBFNUhGakNrdGE0cGt0Ymh1YlI3djBZb01lM0R4ZVlwc3JscUNRelF6STY4YUtiZVpGK3R5WUYyWmxrYjZ5TjJCbmkyN1liQ25UdnF6bU9oUXhBZXUzRk1LVG9FTmZkV09QbCtqbTRZR09xYk9PZzVZWXphbDZXdW5ZWGR1NUtWNWpiMjFvbTE3eUxIS1E0YzVWTzRHNHkyZm15NU5ZVkx3eGJXc0wyV0dicnRwQ3VYNUNwQmRUMythZVBOQ0FGV1dQUEpxZVRhRjlLdTZtU1dTNW1leFhaODdIc0U3SFNMWk9RMXJ3VmpKc1k2SVN0b2d0V2xDNjVkSXZNMlV4ZnpXbS9PcXdIcVgwNE0vY2gwbHNWU1ptNGw3QTNjS2dlOUYrZkYrUmh0ZmN5VEVYUHVtaWUzVFlUYW4zYUd5ZlZxUUNJOENodUdkWjlKSXY3ajNycVpsQ0hVdWVRcVVuSTh5YmtRZm9vT01BYjViNGlrSXhWSjJqODdmYTByQXlFVWdjWWdrWFdWR0VGUFpSWUR0SjJ5UjV1bm9pWUhBcFp3Qmx3eG92YTRjQzlKSWZXRkdIS0kvNzFxRXF5dVJOemt5UWlrOTlySFJpRFZsU2NXRklMenJyR2pIanZvRmw5MkJxM29SMm9zOUpkQkhtdEltQmVFMDZGaERsQmxzS24rcHVSUXVQTWFGY0pDeDhLQTJjeTU0VmVhOHo3eUhhMExCNVNRN1ZOWWErNWkzWGhZSmRRWFpMQ1lWWHFlaXBPS0Q3amZZbDdvOWh1Z2kvYUpXaGZVL1hQTmlYSElPYXJpS2RzL3ZTRUpzcWk0NDVOVGE1aWxBUk9KRDc4b3o3d2FoYTdYRXRkTGIrbUpVTHU4ZTlHNVlHMm1QRDNjWUgzQklnTXNxakxsbmNvS1lQYzBxbktXMmpuTVBvQ1RQVnlDQVNsRWtiWjBOU2NxalRrUTZvUUFyTTRDWmhFYVNkUE9VS3ZhRXdvdFNBK3lwelhVeWlqYTQzRVRPd20xZ1lsV1pyNHM0UmVzK25XcStsREhhVkowTmlyb3pTbkVESm5ZUE84eTAyMUZOaDdhNDZUMnhLRU5rb1ZDNERNS0l0ODFJK0tIbEFZNjBVd241c2xuUmNFbE5DeEljSnQreTY5ZkhJK1lRb1dPVXNnUGNwM3ptY3JHZmNUYTk0Y1J0c1BWNTVZQkJDd1VMYUthczA5a2gxM1VOOGlqWkdnNW4zZUMwTWhvalZiR0pWTFNSZGFUL0RJVmJEbWVzaWtYb1JsNFo3MHZVUnNKWkJUQ0JMQXpVVllEMVZwbHJpaklXOG5hNWxvSHlrN2FreGk3dk4wSnlrWTBoYmFlWUszc2NCakJJVnVkaHpsZkJaekRqT3RobGVrSm1ZU0ZmVk9GdWJxVG5GTVRzQ0NjN1hnalZoZkpBdnBGdWJQRXRBMmpNalZ1NXJSU1FRZ0tXSm9WTEI2YXpQMGdpbWZUQ1VVSG93M1N4UnJHdm1sYXRISjZjNHFBNGFEbGpRa21ZN2t3NkRoRUFibWNwS2dFeDBQZlVGRktyMDNEVmo4RUwyWTBwYmU2R3FtYVN2YTczUGRCNXdNc0xSVXhxZ2s0NnJjMnE0Uk51UjYxcmt4U3krcGh5K3NrTmlGZDN4U2c5TTR5TlhpNFVwNjQ5R3pRYWVMUGlrTWM5cm9vNG5wUEZic2NoK3l6VnVNV0hCK0U3YmI3Skw0cHBiaGhOS3owQjZlS1RhOTJLT3IzazdlZFRZZ2RRWFY1MHJyZ2xkVWFReEN3bGxrWWJ1V1BraTNGS1VhMnpsSWw5NmlhVU91a2E1UmVoZUUrMkhXRFhYd2xNTzI2OHVPWEJRNmlPbTdlSnlYZHNKbUY0bGxadWNxbEVTbEJjOUJLakRyekhGalk3YkNiWFl4NEZrYklFdnFTR1JKTEt0TlBiVHZJbGNJZ3Rsc2NaaThvaDd5SVM1S3FTQ0Z6eXZmTnpDbG1WdUpwbWFrcDRoWkt3WHFZU3FsRHFrZ2ViWitYYlNveU1KWU15Z1JLbFpUUlRpSjhiaFBqRWlvT3Q1a1dlaTEydnVCUmhQS01OdnNTV1pwdGYyWWdBZkhrR3Q4MnRwK1pNd1lFdzExaTJwR0hHd00zVTlPV3BjTTZUQU9TRURjY0x4R0ZNTmxUTTQ2Zk0rY1laYUdyS1JXVTFlTUxUQm9XcnovY09NZ2lpS0ZYVTBubHUyT2k5VFg4N1VsTG5XTjZEbVVlZHR4dXNNWDBVd1phU0Z6OWhDcDFUalVOclpWcFd4WjUwYmZPcEJtek1vZFAxN29xYUlhREFwemx3azFWSFh5TlVXK3diTE9YN0cxRmlMUUhnaWE0cDRFV2JTNGJCWWRnNVd3czRCNU5ScU5BNXRRVW1hWU11UmtmcU5IWWNZTUJDZldBZEQ0WXQ3emxsY3RkcTNsZnNrUTMvV2RmaG1yV095YUo5Y2ZNQjhtS2VteHU2ZDh5YXp4dVFVV0Rrd1Vnb21WdEhWcHV5aUV3b01BL05rMXZHcytJSHBZdXR1U3dZblpKNGQ1aHRwemRkWGZZblpFbGpOcFlWZGpjZGVpakNhSldSV1FsQmIrTWRaTHN6VGR4S0xrY2dRVDJPdTd5aTQ1dENoTGU1MWZqN0hHVDRWTEFjSnI5NlE1eDVvdStwekpad2NSQU16STUzTGhsWlNqUkVKUGhUUW5YUjlkZXRRc2ZvQWM0MnhqU3BvT3BtdTlwd0lsN2JyYTBta3JnY0tKVlRPUmNpV3NzM3RTdGU5Mmo4YWNaZzRGZEd4NTZza1dkWW4zS09YaW9xSlUvaTg1Y2JNNEE3UWhUa1VEamsvNkh3ZlJuN0pOTDRNS3FlaUtNSnFiU0J3UEZWaFpJa09YclU5cDRKQWZZTkJpR1pSd3ZpS0V4TnZTNENQWkVIUHhJaWVLdk04bDEweUVXTXdzY1VLcllOTTIyRVFVUHNPMHpIaXdhdjBWOXRudy9VUzdmYzFQWiswcmxKcGFFUUFtL3ZTYUNKZGU5OFNubDgxUm5uRzNaQnZGdkdFb09oMXZod3JPaWlONmZhbGxjK0ZLZDVTeXoyZzNwOEl4UG5HekNjSjh6ZWRnNlprU1NaZEV4WFdkVUhmSldZYUtQNXN3WWh3cGtwTEkxTmRoYW5DK05uQTl4b0RtTUpINTVUdGJHekNyYzV4RjMySDI5S0RtRk5QZGxwblM5b0xYbXJzbzdId2EzWFFtSTRrYnhyL2RMd2RFencvdkpXcWNUVFd5NnNBTmVYK3dTWmViS1YrUkVpSG10djk5eVhWRitSZmczTzhqMjExcU5EeWNWeGJ1T3ozMDhlRENKOS80d05zdTgyMVBiL21oOFIvUFdKNzk5QS81L1hybUxIRldDV0ZBbW4rT3VXUDdzUDZ1bG5uYjJtODhvcjEyNXR4dlRYUWZtb2gzSm5BZVBnVldMK2FINGtCUGxuT0o5UCtoMlBmLzlldHEzVDNVM1BoUDRtZEg0ai9ydTN3dFExMTkxUHJ3ZmlidnNQdmQrcTQyL2VmZjFQRnJlRmozN2Ivb2VGd2Q5c0VydGZlcmZWazJiZlJyVi8xWmFkYjI2ZnVtNkt2NmkvOXFydi9vUy80Lys5azNQM3gzNlltS291REZRQUEifQ.4V1WZFpHYQKfrbC2GBOIkJb12AbWcmbnZSfEwsvwskwoYdUZO5J5CORmWLLB9AnWaunHBH--y3s36zwQW7FJLw"
        , expired_security_updates_change_password: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWk9qT0pMK0t4MzE5V1kzQkpqcWNuKzZva0JneW9oQzZBVzBzZEVCaURFMkFsTTJMZ01UODk5UDd1cWU2ZTZkdll1OWlxaXdKVXVwVk9hVG1ZL3l0N3ZpTWpiSDAzNHB4djJ4Lzl3WFhYMzM2UzZ0cTh0cFA4NGY2Q0NMc1Q3Zi9mTFR1cjI4KzJROEFNdjhhS3dzMjdSdDhQR1h1NzJzKzFIdnV2djAyeC9mdjBtTXIzMTkrbkQ4OVFNOTYwKzNHSXNQUlM4L3VMSHpaZkQxZ051ZTZzc0o1N3RQLy9qdHA3bHZzbTRpUHN1LzJ2VStxNDhmTHFYYVYzOE1MM3JIMTgyeTZQZHpvYnBqdVZmMWYxLzNwN29xVHZMdjFiRzcrLzJYdStHMGY5TVgvcnF4dnlpbEo4OWpNVjdPTjdOY3FxbytuMys5S0wzMjMybW5yL1NmS1RlY2pwTzIwNlVyNjVQZWIzeDhXTjhERzZ3c3kvcjRuK24wejlzUDFYR29iMksvZlBtbTFGTlQ5THY2dzB0eFBsK1BKNmwxMHhaNTIxZjE1Ni9ydGJHN1dudFkrL1h1SlU3SmR5dCtFUEdkQkkyUXoxMXhidlZ2ZW5UVDd2T1BJR25yK2FiaFA1NjBnZEdYNi8zeTRlVjIyZmZCUDdYQ1gvZjlvWFJSVmNkTFAzNW5EUUFzOE4yZi9kRzZHZmJMblkrbkx6aThlL3d5K3ZUaHNaOC9mUHZscHQ4Tkp2KzMxMjhHUHNwTE5iNEx1NW4vZmU3Zk8rV1hPNlZ0Y1NsMk45RjF2L3RSb3grdGNOUHYrL0c3bXRzSS9iVHBkTHlNZXkzcTB4MSsvL2ErOFBIbDhlbEQ4dmpoOGM5N2ZiL3JxK0h1MHR2bm42Si8xMENRbDlPN0c4NTFkZXlsOW9RRmJ2ZXFUL1hyWlgvZWEwVDlwT2h2ZjVrTWJvRDdxL0Ivbi84ejV0L0hYeFY2SC95ckN1L3ovNXNTN3l1cVUvMUh6UHdocnA2Ry9XbitZZXBIdGNiNXo3TXZaKzJlejJyZjdjZHZVNzllK3VxMnJsRGZ4ZEozb1lUcXF6WnZKNi9xYzMwNmFRTi9jLy83dXU5K0dPdnBENm5qc2ExdlhxN25zQ245YWgvdnd3MWQ2QlR0dy9YZjlTUW96VkdWKzgzOXB0MkJDaWdub2ZEYlAyTHFhRVpnL1VwQUdHMk5mRW90T2hla3RhcEZvdGlWc09Zb2lreTJTamc2VUpjNWlZRVcwdGx0YnNwejJocXBBT0dtQW5qRlNUZy9MMnBGbHZCVWQ2MmhaYTRLRXc4NXcxTmxvQXkxUmt0ZDFFUVd1OHAyZmFWTUZLeWJua1RmdkpZd1hKVjlkSzM1YUJKUEZybmhuQXNQNTRJNWVXWElKZmJoV1dSd1V5NWhMd2ljOGk2NnlzNmJxNE5jbGRZT1JIems3S0JNdkxCRzBKMjFOVEdwQTJZUW1zL2lRQzNhalJQaXNFM2E4WklhTE9QS1NXV0hYWDIzcm15YmE5UWxWcHlPVmtROFVCTzFTbUVqdEU0VEQ3d0plOVRHb0RJS3M5SHp3eW5QbE1JWmhpVmZxOXJGU2N5R2xUUjA5SHJTa3gwc2tCc20xVUhOeEZNbThvY3pjeHM3N1JRb3ZNSE4xY0NZQmMrVVlSWjdvbUdrbWRPbHlUbTNBMFNxdDRxRzk3VExWMld3T1cwdHRNVE1lWll0blhrM2JaSmxCK29XOGFTSFptbWhhOW52cHNwbERWWW9LaGZud255OEwwMmpTd0FGaEE4dGNoVW4zYmduVE14c1lXSEt3MFBGbWl2dERGL3JpdUlBejNVRzdkUmsxNXlGS0cxSG5pK1FKcDFORVFuVDJLdXU1S0RFc3ptY2lLdnRIQXozM0ZkdGFvYUw2SmpMdXNiaUxoUVZWVHF0aGI1OEdqMEs0QlN6a0hOdi9jUlVPTmNFZzBnTm5BU2lTUDFtVHowUnhRUm5SWVpNeE8xelJCeExNRFdrM1FCcW1BQ1Jua0VVeUFEN1UxdEJ2TVhHY0UyQnNTSE1tV2o3OElhTTNkdDJhUTJVbnZXbkUwVjl1TVRlRkFpeWVhdVp3d3UzZll0NmtVY1ErbFcvTVJKTEhISXJwTkpRb3VvVjVPeHh4UUlWSVl1dVVMYVpDeWJTU0d0UU1YeVJpa1ZTNVJxMzAxaDFnMDNhRFNqYlVFVDdFVHhiY2lQbWRWWWZObGJ0dGJZRTAxTDY4TFVnY2lyTnRjTGNXNktsQ1ZKU3JWRFB0b1RBbkptQ3BTYXdjemJZZ2pYM2tvNTJhZ21CMHZXQkxDTEhLcnlYTGJMTGRtclpJVitsM2M2Ty9ZbVh2ZGpyTysyNUwxMSthTEtrRFpkS3c3RE1CTStwSE9KQWRGV3ZzWFpnTGpIaHNGMDJNOHRRZ1ZTNDBLVnBSWWZQMU1TR1VHeFRkOGNwemRCZVBLMzl5TUJ0YXVGUStCRklXdU1vYU1PallHRFBpN2hHUG9yaVlBaGl0MUcxYWdyaTByZmNFdmRsL3dYcmpyNy9rYk5CbEszc2lNYXEyRDljQzNPMVJDQjhLWFg4RWplOHN2MjQ1TzBRRldBMXMwQkE1RTlMbm1FVjg0ZVo5U0ZMd1hoSWUvWEczSjI1QldPU0xwNmhzV1hMZy9ZRFZJVDQrSlMzOW11cWNiRTFiU0RhblVFdGhGRlAzeUovTk9KczRGdVFuSmdoL1pnOHJpUkpadUtxRndFWkxmbElpa01ESXRNZXExYmxFWDJ3NVA1c1VMQTdrY0JoMkcrTWdrL0gxSUk1WXZLNE5ZVWxMZkhNRnFlTnpPT3FkQ09ESHB3OFdxSVZWeXhCQVpzWmtOZXRGYTJZRytwN1kxNllsVVg2YXJVRnU1WG9obTFNbWNheW11dEFSQVJzM2xJSVQ0SU9mZFdOUFY3Q0c4SjlIVk5uSFFjdE1acFQ5YlRXc2J0WjVhWjRqZHlOb1gxNnliUFFSb1l6ViswRW9pNmZtU2RQWWxIUjFseFpNV1NIT0YyM2hYSzhoRWczb3Q2S3UvSkFmVmFVUFhKcGVqYUZ4bFRVVFpQSWNqUFpyOCtjajBHZGpxRnM3WWEwNEsxa2VJV0pTdGdpWXJTZ05PYlNLek5sTVc4OXB2eHFzeDZsOU9ETjNJTkpaRlVtWnVKZXdOM0NvSFBST0w2dlNNTnJidWVZQzQ5MDRUMDY3S2JVZlRUaXB6V3B3QWh3SU81WkZyN2tpM1BQZW1xbVVNZVNxMURweWhEelp1UStPdWc0d05zbHVxSkFERlZuNi95dFlocFVKZ0tKVFN6aElDc01rY0llOGxkMjBqWkpucTZmQ0JnY3lobEEyYkRCeThhbUFMM2tCMWJVQWNxanZyV3BDak41MHpNVHBPSlRIeW1kV0FPV1ZGd1kwZzNQdWtiTXVHOWcyVDJZV2phaG5laHpFbDZFT1cwaklGNlRqdmxFT1g1TTRWUGRyV25oTWlhVWc0U0ZENldCYzltekl1OTE1ajJFV3hvMEw4bWh1a2JRMDdMbHBsQ3dLOGh1S2FGd0t4VStGUWQwdjlWWTR0NFlwSXZ3aWxZWkdudTY1c0crNUJqVWRCM3FuTjJYaHRoV1dYak1xYkhOVllnSzM0YmNrMmZjRDBiVmFzUzEwSTY5TVNzWGRvOTdKeWdOdE1lR0UwY0gzQklnTXNyRExsa2N2NllQYzBxbktXM0RuTVB3Q1RQVlNEOFVsTWtWem9hazVGQ25JeDFRdmhTWXdXM0NRa2c3ZWNvVmVrTkJTS2tCOTFYbU9KaUVXMTF2UW1aZ0o3RXdLczNXeEowdDlKbFB0ZDVMR2V3cVZ3YkVYQnVsT1lHUzJ3ZWQ1MXRzcUtmQzJsMTFudGlXSUZ5aFFEa013SkMyekUzNW9PUUJqYlZTQ0h1UldkSnhTVXdKRVI4bTNMSnI3T0dSOHdsUnNNNlpEKzlUdnJNNTJjeTRtMTd4NGpUWWVyeHkzeUNFZ29XMFUxWnA3cEhxdW9mNEZHNk5CalAzOFZvWURCR3IyVWFxV2tpNjFqakRBVmJEbWVzaWtib2hsNFp6MHZVUnNKWkJUQ0JMZlRVVllETlZwbHFpakFXOG5hNmxyenlrL2FrNWl4Tm5hRTdTTWFDdE5ITUY3eU1maG9rS0hldzZTbmdzWWh4bmNZWVhaQ1ltMGxVMXlqWm1hazVSeEk1QWd2TzFZRTBRSGVRTDZUWW16eEtROXN5SWxQTmFFUWtFWUdsaXFGUndPdXU3TklKcERBWVNTaGVtMnlXTWRNMjhjdlZvNXhUNzFVSFRBUXRhMG14bjBtR1FFTGhDcHJJU0lCTmRUejBCaFNwZFo4TVl2SkQ5bU5KMnRWRFZUTkxUdGQ1ak9nL1lHZUhvS2ZYUlNjZlZPVFVjb3YzSWRTMXlJeFpkVXc1ZjJTR3hpdTU0cFFlbStaR2oxY0tVOVVlalpnTlBGbnpTbk9jMVVjY1Qwdnl0V0dRZmM4MWJURmd3dnRQK20xWWxjY3lZNFlUU001QXVIcW5HWHNUeE5XOG5seG83a0hyaXFuUEZOYUZyaWpSbklZRXMwc0FaSzA4RU1VVzU1bFlPOHFTYldPcWdhNVJUQk00MTBUakVxcmtXcnJMWmZuM0pnWTFTRHpIdEY0ZnIyazdBOUNxcDNPWlVqWktndk9naFFCMStqU2h1ZE54T3FNVWU5aVZqQzN4SkRZa2trVzJsdVorV1RlUVNXaWlMTkJlVFI5eERKc3gxSVJXODRIbnQ0UmEyTEhNeXlkU1U5QXdoWTdOSUpWU2wxQ0gxdGN6T1d5VTlPaElmUmd4S2xKclZSQ0YrWWh6dUV5TUV1cDRYZVNaNnZlZGVnUEdFTXZ3V1daTHA5ZHBmRE9EREk2aDFmaTB0YnhJR2pLam11aVVWSS9aM3BxNG5SODFyaGhUWUoyUWdUamdlSTZxcGNnWW5mZDhuemxCTEF6WXlxOGtMaHJZNFVHMitmNWlSSDRhUm9yYm1jMHVzOHpMMTVFeE5tV3Q3QTJvZWRkNW12TTd3VmZoVFJscjRqQzEwU2pVUHBkM0txakwyckhPRFIxMjQ0Z3dLWGYrZXFDbEM2aytLTXdkSmRkUTFjaDFqejJBNXg4K1lHaHZoQzFka1RSRXR3a3c2SEJUTHpzWktySElBT2JVYXpVTmJVSkxHanpreVVxOVpSUUVHREVRbjFzRkFlT0tlY3haVnJjYTJjcDVrNE0yNkR0KzhkVXdXamNuRkE4eURlV3BxN3Q3WmJ6SnJURTZCbFFNanBXQmlGVjF2eXk0OElkOHdNRTltSGMrS0g1Z3V0azVjTWpnaDgyd3p6MGhydnJucVIweE1ZRFdYRm5ZMEgzc3BnbkNXa0ZrSlFXM2hIV2U1TUZlL1NTeEdRa004amJsK28rQ2FRNXUydU5mNStSeGwrRlN3SENTOGVrT3VjNkR0dXMrVnNITVFEc3dNZFM0YldrazFSeVQ0VUVCbjB2WFZxUVBGNmdQTU5jYzJLci9wWkxyZWN5SWMybTZ1SlpHNkhpaVVVRGtYQVZ2S05sOVZ1dTdWM3RHSWdzU3VpSTQ5VHlYSnNqbmhIcjFVVkV5Y3d1ZVlHek9ETzBBWFpsTTQ1UHlnODMwUWVpWFQvTkt2N0lxaUVLdU5nY0R4VkFXaEpUcDQxZjZjQ2dMMUN3WWhtb1VKNDJ0T1RCeVhBQi9KZ3A2SkVUNVY1bmt1dTJRaXhtQmlpeFhhQnBuMnd5Q2d4ZzdUTWVMQ3EvVFc4YlBodUluR2ZVM1BKMjJyVkJxYUVjRG12alNhVU5mZXQ0VG5WODFSbm5FMzVOdEZQQ0VvZXAwdng0b09Tbk82ZldubGMyR0t0OVJ5RHFqM0pnSnh2alh6U2NMOFRlZWdLVm1TU2RkRWhYVmQwRytKbWZxS1Axc3dKSnlwMHRMTVZGZGhxakIrTnZDOTVnQ204TkE1WmJzVk5tR3NjOXhGditGaWVoQno2c3BPMjJ4SmU4Rkx6WDAwRjM2dERwclRrZVJOODUrT3QyT0M1NGUzVWpXMjVucDU1YU9tM0Qrc2lCdFpxUmNTMHFIbTl2NTlTZlVEK1cvK09kcEhLM1dvMFBKeDNGaTQ3UGZUeDRNSW5uL2xBMnk3N2JVOXYrYUh4SHM5NHRYdW9YL082OWN4WTR1eFRnb0YwdngxeWgrZGg4MTF1OG5mMG1qdEZwdTNOK042YTV2OTFFSzRNNEh4OERkZy9jMzhTQXp3eWJJL21mYmZiZkR4djI1ZHBidWZtZ3YvdXRqK1lmRmZ0UjIrdHFIdWZtbzlHSC9SZC9qdFRoMTMrLzd6cjZxNE5YeFd0K04vYURqYzNRNkJtNDE3YXoxWnE5dm8xcS82Y3RLdDdWUDNUZEZYOVpkKzFkMi82UWIrL3pzWmQ3Ly9EM01SQVhnWEZnQUEifQ.SVHpMM2YaXcQTwqLHh5kgLDUV8rApR6DZeQotFJiVsORQns5R3z715afufb0oruVVmxFpG0xJ8qsQ9_05v2Z7Q"
        , expired_security_updates_change_security_answers: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWE9qdUxMK0sxUDVlbmRQQ1RDWmVEN2RFQkNZR0JHRVhrQ25UazBCWW8yTndJNk5iV0JyLy91Vms1blptVG03OTlhNXFVclprcVZXcS92cDdrZjkrMTF4SHByOWNUc1h3M2JmZis2THJyNzdkSmZXMWZtNEhhWVA5Q0NMb1Q3ZC9mTFR1cTI4KzJROEFNdjhhQ3dzMjd4ZjNDOS91ZHZLdWgvMHJydFB2My83L2xWaWZPM3I0NGY5Yngvb1NYKzZ4VkI4S0hyNXdZMmR0OEdYQTI1N3FyY1RUbmVmL3ZuN1QzTmZaZDFFZkpaL3RldDlWaDkvT0pkcVczMGJudldPTDV0bDBXK25Rblg3Y3F2cS83NXVqM1ZWSE9VL3FuMTM5OGN2ZDRmajlxSXYvR1ZqZjFaS1Q1NkdZamlmYm1ZNVYxVjlPdjEyVm5ydDMybW5yL1NmS1hjNDdrZHRwM05YMWtlOTMvajRzTHdITmxoWWx2WHhQOVBwWDdjZnF2Mmh2b2w5Ky9KVnFhZW02RGYxaDI5K2ZleFAxL3A0ODZ1MnpHVmIxWisvN05ORzcycnRhZTNmdTVjNEpkK3QrR3I5TjBoOGxaU2M2OVB0Y3U4QzlXbzkrN2tyVHExZXFVYzNuVC8vQ0oyMm5tNTYvL05KbXgyOVhmcVhEeTgzRTd3UC9xV3Y4V1hmdDZzVVZiVS85OE4zTmdMQUF0LzkyUit0bTduZkxMRS92cUh6N3ZGdDlFbGZkZnJ3OVplYmZqZncvTjlZdUpsOUw4L1Y4QzdzNXBUM3ViOTMxUzkzU2h2NVhHeHVvdXQrODZOR1AxcmhwdC8zNDNjMTF4SDZhZE54Zng2Mld0U25PL3orN1gzaDQ4dmowNGZrOGNQam4vZjZmdGNYdzkybHQ4OC9SZitoNFNIUHgzYzNuT3BxMzB2dENRdmM3bFVmNjlmejlyVFZPUHRKMGQvL01rWGNZUGhYU2VGOS9zOU04RDcrb3RENzROOVZlSi8vMzVSNFgxRWQ2MitSOUUxY1BSNjJ4K21IcVIvVkdxWS96ejZmdEhzK3EyMjNIYjVPL1hidXE5dTZRbjBYWWQ4RkdLcXYycnlkdktyUDlmR29EZnpWL2UvcnZ2dGhxTWR2VW9kOVc5KzhYRTloVS9yVk50NkdLenJUTWRxR3kzL29TVkNhZ3lxM3EvdFZ1d0VWVUU1QzRkZC94TlRlak1EeWxZQXdXaHY1bUZwMEtraHJWYk5Fc1N0aHpWRVVtV3lSY0xTakxuTVNBODJrczl2Y2xLZTBOVklCd2xVRjhJS1RjSHFlMVlMTTRiSHVXa1BMWEJRbVB1UU1qNVdCTXRRYUxYVlJFMW5zS3R2bGxUSlJzRzU4RW4zeldzSndVZmJSdGVhRFNUeFo1SVp6S2p5Y0MrYmtsU0huMkljbmtjRlZPWWU5SUhETXUrZ3FPMitxZG5KUldoc1E4WUd6blRMeHpCcEJOOWJheEtRT21FRm9Qb2tkdFdnM2pJakRObW1IYzJxd2pDc25sUjEyOWQyNnNtMnVVWmRZY1RwWUVmRkFUZFFpaFkzUU9vMDg4RWJzVVJ1RHlpak1Sczhmam5tbUZNNHdMUGxTMVM1T1luWllTRU5IcnljOTJjRUN1V0ZTN2RSRVBHVWkvM0JpYm1Pbm5RS0ZkM0J6ZFdETWdpZktNSXM5MFREU1RPbmM1SnpiQVNMVnBhTGhQZTN5UlJtc2ptc0x6VEZ6bm1WTEo5Nk5xMlRlZ0xwRlBPbWhXVnJvV3ZhYnNYSlpneFdLeXRrNU14OXZTOVBvRWtBQjRZY1d1WXFUYnRnU0ppWTJzekRsNGE1aXpaVjJocTkxUlhHQXB6cURkbXF5YTg1Q2xMWUR6MmRJazg2bWlJUnA3RlZYc2xQaTJUd2NpYXZ0SEJ6dXVhL2ExQXhuMFRHWGRZM0ZYU2dxcW5SYUMzMzVOSGdVd0RGbUllZmU4b21wY0tvSkJwRTZjQktJSXZXYkxmVkVGQk9jRlJreUViZFBFWEVzd2RRaDdRNmdoZ2tRNlFsRWdReXdQN1lWeEd0c0hLNHBNRmFFT1NOdEh5N0kyRnpXYzJ1ZzlLUS9uU2pxd3puMnhrQ1ExYVZtRGkvYzloTDFJbzhnOUt0K1pTU1cyT1ZXU0tXaFJOVXJ5Tm5qZ2dVcVFoWmRvR3cxRlV5a2tkYWdZdmdzRll1a3lqVnV4NkhxRGpacFY2QnNReEZ0Qi9Cc3laV1lsbG05VzFtMTE5b1NqSFBwdzllQ3lMRTBsd3B6YjQ3bUpraEp0VUE5V3hNQ2MyWUtscHJBenRuQkZxeTVsM1N3VTBzSWxDNTNaQlk1VnVHOWJKRmR0bVBMZHZraTdUWjI3SSs4N01WVzMybkxmZW55WFpNbGJUaFhHb1psSm5oTzVTRU9SRmYxR21zNzVoSVRIdGJ6YW1JWktwQUtaem8zcmVqd2lacllFSXF0Nm00L3BobmFpcWVsSHhtNFRTMGNDajhDU1d2c0JXMTRGQnpZOHl5dWtZK2lPRGdFc2R1b1dqVUZjZWtsdDhSOTJiOWgzZEgzMzNOMkVHVXJPNkt4S3JZUDE4SmN6QkVJWDBvZHY4UU5yMnc3ekhsN2lBcXdtRmdnSVBMSE9jK3dpdm5EeFBxUXBXRFlwYjI2TUhkanJzR1FwTE5uYUd6WmNxZjlBQlVoUGo3bXJmMmFhbHlzVFJ1SWRtTlFDMkhVMDB2a0QwYWNIZmdhSkVkbVNEOG1qd3RKa29tNDZrVkFSa3Mra0dMWGdNaTBoNnBWZVVRZkxMazlHUlJzamlSd0dQWWJvK0RqUHJWZ2pwamNyMDFoU1VzOHM5bHBJM08vS04zSW9Ec25qK1pvd1JWTFVNQW1CdVIxYlVVTDVvYjYzcGdYWm1XUnZscXN3V1lodXNNNnBreGpXVTExSUNJQ1ZwY1V3cU9naDc3cWhoN1A0UTNodm82cGs0NkRsaGpOc1hwYTZ0aGRMWEpUdkVidXl0QStQZWRaYUNQRG1hcDJCRkdYVDh5VFJ6R3JhRzB1ckJpeVhad3UyMEk1WGtLa0cxRnZ3VjI1b3o0cnloNjVORDJaUW1NcTZzWlJaTG1aYkpjbnpvZWdUb2RRdG5aRFduQXBHVjVnb2hJMml4ak5LSTI1OU1wTVdjeGJEaW0vMnF4SEtkMTVFL2RnRWxtVmlabTRGM0F6TStpY05ZN3ZLOUx3bXRzNTVzSWpYWGlQZHBzeGRSK04rR2xKS2pBQUhJaDdsb1V2K2V6Y3M1NmFLZFN4NUNwVXVqTEV2Qm00ajNZNkR2QjZqcTRvRUllcXMzWCtWakVOS2hPQnhDYVdjSkFWaGtoaEQva0xPMm1iSkUrWFR3UWNITW9aUU5saGhlZVZUUUY2eVhlc3FBT1VSMzFyVXhWbThxWm5Ka2pGeHo1U09yRUdMS200TUtRYm5uU05tSERmd0xKN01MVnNRanZSNXlROEMzTmNSMEM4SmgzemlYTDhtTUtudWx2U3dtVk1LQWNKQys5S0ErZXlaMFhlNjh5N0M5YzBhRjZTWFhXTm9LZGx5MVdoWUZlUXpWeEM0VllxZkNwMjZINnRzY1M5SVVobjRSV3RNalQyZE0yRGZja3hxT2t5MURtN0x3Mnhyckp3bjFOam5hc1FGYjROdVNkUHVEOFlWYXNSMTBJNzlvYXNuTms5N3AyZ05OQVdHMDRjN1hCTGdNZ29EN3RrZHZ5YVBrd3BIY2UwRFhNT3d5Zk1WQ1A5VUZBbUZ6ZzdKQ1dIT2gzcGdQS2x3QXl1RXhaQzJzbGpydEFGQlNHbEJ0eFdtZU5nRXE1MXZRbVpnWjNFd3FnMFd4TjN0dEJuUHRWNkwyV3dxMXdaRUhOcGxPWUlTbTd2ZEo1dnNhR2VDbXR6MVhsaVhZSndnUUxsTUFCRDJqSTM1UWNsZDJpb2xVTFlpOHlTRG5OaVNvajRZY1F0dThZZUhqZ2ZFUVhMblBud1B1VWJtNVBWaEx2eEZjOU9nNjNISy9jTlFpaVlTVHRtbGVZZXFhNTdpSS9oMm1nd2N4K3ZoY0VRc1pwMXBLcVpwRXVOTXh4Z2RUaHhYU1JTTitUU2NJNjZQZ0xXTW9nSlpLbXZ4Z0tzeHNwVWM1U3hnTGZqdGZTVmg3US9OV2R4NGd4TlNUb0V0SlZtcnVCOTVNTXdVYUdEWFVjSmowV000eXpPOEl6TXhFUzZxa2JaeWt6Tk1ZcllIa2h3dWhhc0NhS2RmQ0hkeXVSWkF0S2VHWkZ5WGlzaWdRQXNUUXlWQ2s0bmZaZEdNSTNCUUVMcHduUTloNUd1bVZldUh1MmNZci9hYVRwZ1FVdWE3VVE2REJJQ0Y4aFVWZ0prb3V1cEo2QlFwZXVzR0lObnNoMVMyaTVtcXBwUmVycldlMHpuQVRzakhEMmxQanJxdURxbGhrTzBIN211Ulc3RW9tdks0U3ZiSlZiUjdhOTB4elEvY3JSYW1MSitiOVRzd0pNWkh6WG5lVTNVL29nMGZ5dG0yY2RjOHhZVEZveHZ0UC9HUlVrY00yWTRvZlFFcElzSHFyRVhjWHpOMjlHbHhnYWtucmpxWEhGTjZKSWl6VmxJSUlzMGNJYktFMEZNVWE2NWxZTTg2U2FXMnVrYTVSU0JjMDAwRHJGcXJvV3JiTFpkbm5OZ285UkRUUHZGNGJxMkV6QytTaXJYT1ZXREpDZ3ZlZ2hRaDE4amloc2R0eU5xc1lkOXlkZ01YMUpESWtsa1cybnVwMlVUT1ljV3lpTE54ZVFlOTVBSmMxbElCYzk0V25xNGhTM0xuRXd5TlNZOVE4aFl6VklKVlNtMVMzMHRzL01XU1kvMnhJY1JneEtsWmpWU2lKOFloOXZFQ0lHdTUwV2VpVjd2dVJkZ09LSU1YeUpMTXIxZSs0c0J2SHNFdGM2dnBlV053b0FSMVZ5M3BHTEEvc2JVOVdTdmVjMGhCZllSR1lnVGpvZUlhcXFjd1ZIZjk0a3oxTktBRGN4cThvS2hOUTVVbTI4Zkp1U0hZYVNvcmZuY0hPdThURDA1VVZQbTJ0NkFtbnVkdHhtdk0zd1YvcGlSRmo1akN4MVR6VU5wdDdDcWpEM3IzT0JSRnk0NGcwTFh2eWRxaXBENm8rTE1RVkx0ZFkxY3h0Z3pXTTd4TTZiR1N2akNGVmxUUkxNd2t3NEh4Ynl4c1JLTEhFQk9yVWJ6MEJhVXBQRmpqb3pVYXhaUmdBRUQwWkYxTUJDZXVPZWNSVldyc2EyY0p4bDRrNjdETjIvdGsxbGpjdllBODJDZW1wcTdkL1pGWm8zSktiQnlZS1FVakt5aXkzWFpoVWZrR3dibXlhVGpXZkVkMDhYV2lVc0dSMlNlYk9ZWmFjMVhWLzJJaVFtc3B0TENqdVpqTDBVUVRoSXlLeUdvTGJ6OUpHZm02amVKeFVob2lLY2gxMjhVWEhObzB4YjNPaitmb2d3ZkM1YURoRmNYNURvNzJpNzdYQWs3QitHQm1hSE9aWWRXVXMwUkNkNFYwQmwxZlhYcVFMRjZCM1BOc1kzS2J6cVpMcmVjQ0llMnEydEpwSzRIQ2lWVVRrWEE1ckxORjVXdWU3VzNONklnc1N1aVk4OVRTVEt2anJoSEx4VVZJNmZ3T2ViR3hPQUcwSm5aRkI1eXZ0UDVQZ2k5a21sKzZWZDJSVkdJMWNwQVlIK3NndEFTSGJ4cWY0NEZnZm9GZ3hETndvVHhKU2Ntamt1QTkyUkd6OFFJbnlyek5KVmRNaExqWUdLTEZkb0dtZmJEUVVDTkhhWmp4SVZYNlMzalo4TnhFNDM3bXA2TzJsYXBORFFqZ00xOWFUU2hycjJYaE9kWHpWR2VjWGZJMTdONFFsRDBPbDhPRlQwb3plbTJwWlZQaFNrdXFlWHNVTytOQk9KOGJlYWpoUGxGNTZBeG1aTlIxMFNGZFYzUWI0bUorb28vV3pBa25LblMwc3hVVjJHcU1INDI4TDNtQUtidzBDbGxtd1UyWWF4ejNGbS80V0s2RTFQcXlrN2JiRTU3d1V2TmZUUVhmcTEybXRPUjVLTDVUOGZiSWNIVHc2VlVqYTI1WGw3NXFDbTNEd3ZpUmxicWhZUjBxTG05ZjE5Uy9VRCsxVDlGMjJpaGRoV2FQdzRyQzVmOWR2eTRFOEh6Yi93QTIyNTliVSt2K1M3eFh2ZDRzWG5vbi9QNmRjalliQ3lUUW9FMGZ4M3pSK2RoZFYydjhrc2FMZDFpZGJrWTExc3o3YWNXd3AwSmpJZGZnZldyK1pFWTRKTmxmekx2LzdINENQN3IxbFc2KzZtNThPK0w3UjhXLzFYYjRVc2I2dTZuMW9QeEYzMkgzKy9VZnJQdFAvK21pbHZEWjNFNy9vZUd3OTN0RUxoYXViZldrN1c0alc3OXFyZVRibTJmdW0rS3ZxcmYrbFYzZjlNai9QOTNNdTcrK0IvbENtNGNMUllBQUE9PSJ9.bRUXRRIkYTdn5a-Eclvs9_ImlRGhANjuYC3flNQxBEs9GcBwN3kn_rYom2hkHMVOwLLObFqiuEzRt8EvegB87g"
        , expired_secured_demographic_updates_update_phone: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVk3NU9iT05MK1Y2Ym02KzF1Q1RDVGNUN2RNQ0F3WStSQjZBZm82aW9GaURVMkFqTTJ0b0d0L2Q5Zk9aUE5Kcm05dTdvM1ZhbXhoTlJxZFQvZC9haC91OC9QUTMwNDd1WjgyQjI2VDEzZVZ2Y2Y3NU9xUEI4cmVlZFc3V0Y3elB0NlY5N1JYdVpEZGJyLzZZY3RPM24vMFhnRWx2bkJXRmkyK1dnOUdqL2Q3MlRWRGJ0aHV2LzQyOWZmZndqZlhMdnFlSGY0OVc1RFh1L2NmTWp2OGs3ZTBaT2V2STIrSEhEYlUzNCs0WFQvOFIrLy9URDNWUlo1L1NUL2F0UDdyRDY5UHhkcVYvNDVQQjVHcmNtNUxhcWozbTk4ZUZ3K0FCc3NMTXY2b0lYMDlhR3Ivdno4dCtVSHc3YVhGdmdBSGgvMTU4UFFmNzd2L2YzdmV1MXhkOUVXK1NLNk95dWxKMDlEUHB4UE54T2V5N0k2blg0OUs3MzIzNmwvdS9UL3B2OVo3L2l5V2ViZGJzcFZleWgycXZyN2RYZXN5dndvZnlrUDdmK20zVDl2SDhwRFg5M2tmLzd4VmIzUExyOTd2UmxGYTZpUHZ1eks2dE9YeGRvcGJhV1JjTFBINnlZaDM2ejRidi9yOGZDcjFwRHZodm9QU2VmajdsT2JuNXFiSlgrNnY2bjQ2WHRRTmRWMFUvTWZ6L3BHNkxNM2ZycDd2Ym51NitBbTZYM3dUMzJGTDBLK1hpTXZ5OE81Rzc1eE5BQVcrT2FmL2NHNjJmeXpGUTdIZDZjK2ZSNTl2SHZxcHJzL3Z0eVV2VG5wdjl2OFp2S0RQSmZEdTdBYnN0N24vaFBlVk41dHovbjJKcnJxdHY4ZGdOOG8vTDNGYnVwL08zNi94VHBDUDJ3NkhzN0RUcC8wOFI2Ly8zcGYrUFQ2OUh3WFA5MDkvWG50YjNkOXNldDljdnY3cCtqZk5YTGsrZmp1c2xOVkhqcXB2V2FCMjdXclkvVjIzcDEyR29JL0tQcmJYK2FjRzBML0tyVzh6LytaVDk3SFh4UjZIL3lyQ3Uvei8wbUo5eFhsc2ZvYWJWL0ZWV08vTzA3ZlRYMnYxakQ5ZWZiNXBMMzNTZTNhM2ZESDFLL25ycnl0eTlVM3dmZE43S0hxcXMzYnlxdjZWQjJQMnNCL2VQdDkzVGNmaG1yOEtuVTROTlhOeTlVVTFvVmY3amE3Y0VWbk9rYTdjUG1MbmdTRk9haGl0M3BZTlZ0UUF1WEVGUDd4SHpGMU1DT3dmQ01nak5aR05pWVduWExTV09VczBjYVZzT0lvaWt5MmlEbmFVNWM1c1lGbTB0cE5ac3BUMGhpSkFPR3FCSGpCU1RpOXpHcEI1dkJZdFkyaFpTNXlFL2NadzJOcG9CUTFSa05kVkVjV3U4cG1lYVZNNUt3ZG4wVlh2eFV3WEJSZGRLMzRZQkpQNXBuaG5ISVBaNEk1V1duSWVlUERrMGpocXBqRFRoQTRabTEwbGEwM2xYdTVLS3d0aVBqQTJWNlplR2Exb0Z0cmJXSlNCY3dnTkp2RW5scTBIVWJFWVJNM3d6a3hXTXFWazhnV3UvcHViZEhVMTZpTnJVMHlXQkh4UUVYVUlvRzEwRHFOUFBCRzdGRWJnOUxJelZyUDk4Y3NWUXFuR0JaOHFTb1h4eHZXTDZTaGc5dVRubXhoanR3d0x2ZHFJcDR5a2QrZm1GdmJTYXRBN3ZWdXBuckdMSGlpRExPTkoycEc2aW1aNjR4ek8wQ2t2SlEwZktCdHRpaUMxWEZ0b1huRG5CZlowSW0zNHlxZXQ2QnFFSTg3YUJZV3VoYmRkaXhkVm1PRm9tSjJ6c3pIdThJMDJoaFFRSGpmSUZkeDBnNDd3c1RFWmhZbVBOeVhyTDdTMXZDMXJtZ1Q0S2xLb1oyWTdKcXhFQ1hOd0xNWjByaTFLU0poc3ZIS0s5a3I4V0wyUitKcU93ZjlBL2RWazVqaExGcm1zcmEydUF0RlNaWE9lcUV2bndlUEFqaHVXTWk1dDN4bUtwd3Fna0drZWs0Q2tTZCt2YU9laURZRXAzbUtUTVR0VTBRY1N6RFZKMjBQS2hnRGtaeEFGTWdBKzJOVFFyekdSbjlOZ0xFaXpCbHA4M2hCeHZheW5oc0RKU2Y5MTRtaUxwdzMzaGdJc3JwVXpPRzUyMXlpVG1RUmhIN1pyWXpZRXZ2TUNxazBsQ2c3QlRsN1dyQkFSY2lpQzVTdXBweUpKTklhbEF5ZnBXS1JWSm5HN1RpVWJXK1RaZ1dLSmhUUmJnQXZsbHlKYVpsVys1VlZlWTB0d1RnWFBuekxpUndMYzZrdzkrWm9yb09FbEF2VXNUVWhNR09tWUlrSjdJejF0bUQxZzZTRG5WaENvR1M1SjdQSXNBb2ZaSVBzb2hrYnRzOFdTYnUxTi83SWkwN3M5SjEyM0pjdTM5ZHAzSVJ6cVdGWXBJSm5WUGFiUUxSbHA3RzJaeTR4WWIrZVZ4TkxVWTVVT05PNWJrU0xUOVRFaGxCc3BTbmFtS1JvSjU2WGZtVGdKckZ3S1B3SXhJMXhFTFRtVWRDemwxbGNJeDlGbTZBUE5tNnRLbFhueEtXWHpCSVBSZmNaNjQ2Ky80R3pYaFNOYkluR3F0ZzlYbk56TVVjZ2ZDMTAvQkkzdkxMZE1HZE5IK1ZnTWJGQVFPU1BjNVppdGVHUEUrdENsb0JobjNUcXd0eXR1UVpEbk15ZW9iRmx5NzMyQTFTRStQaVlOZlpib25HeE5tMGdtcTFCTFlSUlJ5K1JQeGlidE9kckVCK1pJZjBOZVZwSUVrL0VWYThDTWxyd2dlVDdHa1NtUFpTTnlpTDZhTW5keWFCZ2V5U0J3N0JmR3prZkQ0a0ZNOFRrWVcwS1MxcmloYzFPRTVtSFJlRkdCdDA3V1RSSEM2NVlqQUkyTVNDdmF5dGFNRGZVOThZOE4wdUxkT1ZpRGJZTDBmYnJEV1VheTJxcUFoRVJzTG9rRUI0RjdidXlIVG84aHplRSt6cW1Uam9PR21MVXgvSjVxV04zdGNoTThSYTVLMFA3OUp5bG9ZME1aeXFiRVVSdE5qRlBIc1dzb3JXNXNEYVE3VGZKc3NtVjQ4VkV1aEgxRnR5VmUrcXp2T2lRUzVPVEtUU21vblljUlpxWjhXNTU0bndJcW1RSVpXUFhwQUdYZ3VFRkppcG1zOWlnR1NVYkxyMGlWUmJ6bGtQQ3J6YnJVRUwzM3NROUdFZFdhV0ltSGdUY3pndzZaNDNqaDVMVXZPSjJocm53U0JzK29QMTJUTnduWS9POEpDVVlBQTdFQTB2RDEyeDJIbGhIelFUcVdISVZLbHdaWWw0UDNFZDdIUWQ0UFVkWEZJaStiRzJkdjlXR0JxV0pRR3dUU3pqSUNrT2tzSWY4aFIwM2Rad2x5MmNDZW9keUJsRGFyL0M4c2lsQXI5bWU1VldBc3FocmJLckNWTjcwVEFVcCtkaEZTaWZXZ01VbEY0WjB3NU91RVJQdWFsaTBqNmFXVFdncnVveUVaMkdPNndpSXQ3aGxQbEdPdjZId3VXcVhOSGNaRThwQndzTDd3c0NaN0ZpZWRUcno3c00xRGVyWGVGOWVJK2hwMlhLVks5am1aRHNYVUxpbENwL3pQWHBZYXl4eGJ3aVNXWGg1b3d5TlBWM3pZRmR3RENxNkRIWE83Z3BEck1zMFBHVFVXR2NxUkxsdlErN0pFKzU2bzJ3MDRocG9iN3doTFdiMmdEc25LQXkwdzRhemlmYTRJVUNrbElkdFBEdCtSUituaEk1ajBvUVpoK0V6WnFxV2ZpZ29rd3VjOW5IQm9VNUhPcUI4S1RDRDY1aUZrTGJ5bUNsMFFVRklxUUYzWmVvNG1JUnJYVzlDWm1BbnRqQXF6TWJFclMzMG1jK1Yza3NaYkV0WEJzUmNHb1U1Z29MYmU1M25HMnlvNTl6YVhuV2VXQmNnWEtCQU9RekFrRGJNVFhpdjVCNE5sVklJZTVGWjBHR09UUWtSNzBmY3NPdkd3d1BuSTZKZ21URWZQaVI4YTNPeW1uQTd2dUhacWJIMWRPVytRUWdGTTJuR3ROVGNJOUYxRC9FeFhCczFadTdUTlRjWUlsYTlqbFE1azJTcGNZWURyUG9UMTBVaWNVTXVEZWVvNnlOZ0RZT1lRSmI0YXN6QmFpeE5OVWNwQzNnelhndGZlVWo3VTNNV1o1T2lLVTZHZ0RiU3pCUjhpSHdZeGlwMHNPc280YkdJY1p4dVVqd2pNemFScnFwUnVqSVRjNHdpZGdBU25LNDVxNE5vTDE5SnV6SjVHb09rWTBha25MZVNTQ0FBUzJKREpZTFRTZCtsRmt4ak1KQlF1akJaejJHa2ErYVZxeWM3bzlndjk1b09XTkNTWmpPUkZvT1l3QVV5bFJVREdldDY2Z2tvVk9FNks4YmdtZXlHaERhTG1hcDZsSjZ1OVI3VGVjQk9DVWZQaVkrT09xNU9pZUVRN1VldWE1RWJzZWlhY1BqRzlyR1Z0NGNyM1RQTmp4eXRGcWFzT3hnVjYzazg0NlBtUEcreE9oeVI1bS81TExzTjE3ekZoRG5qVysyL2NWRVF4OXd3SEZONkF0TEZBOVhZaXppK1pzM29VbU1MRWs5Y2RhNjR4blJKa2VZc0pKQjVFamhENllsZ1ExR211WldEUE9uR2x0cnJHdVhrZ1hPTk5RNnhxcSs1cTJ5Mlc1NHpZS1BFUTB6N3hlRzZ0aE13dmtrcTF4bFZneVFveXpzSVVJdmZJb3BySGJjamFyQ0hmY25ZREY4VFF5SkpaRk5xN3FkbEV6bUhGa29qemNYa0FYZVFDWE9aU3dYUGVGcDZ1SUVOUzUxVU1qWEdIVVBJV00xU0NWVXF0VTk4TGJQMUZuR0hEc1NIRVlNU0pXWTVVb2lmR1llNzJBaUJydWQ1bG9wTzcza1FZRGlpRkY4aVN6SzlYdnVMQWJ4L0FwWE9yNFhsamNLQUVkVmN0NkJpd1A3VzFQWGtvSGxObndEN2lBekVDY2REUkRWVlR1R283L3ZNR1dwb3dBWm0xVm5PMEJvSHFzbDJqeFB5d3pCUzFOWjhidDdvdkV3OU9WRlRadHJlZ0pvSG5iY1pyMUo4RmY2WWtnYStZQXNkRTgxRGFidXd5cFM5Nk56Z1VSY3VPSU5DMTc5bmFvcVErcVBpekVGU0hYU05YRzZ3WjdDTTR4ZE1qWlh3aFN2U09vOW1ZY1l0RHZKNWEyTWxGaG1BbkZxMTVxRU5LRWp0YnpneUVxOWVSQUVHREVSSDFzSkFlT0tCY3hhVmpjYTJjcDVsNEUyNkR0KzhkWWhuamNuWkE4eURXV0pxN3Q3YUY1bldKcWZBeW9DUlVEQ3lraTdYUlJzZWtXOFltTWVUam1mRjkwd1hXMmRUTURnaTgyUXp6MGdxdnJycVI4eUd3SElxTE94b1B2YWFCK0VrSWJOaWdwcmNPMHh5WnE1K2sxaU1oSVo0SGpMOVJzRVZoelp0Y0tmejh5bEs4VEZuR1loNWVVR3VzNmZOc3N1VXNETVE5c3dNZFM3ckcwazFSeVI0bjBObjFQWFZxUUxGcWozTU5NYzJTcjl1WmJMY2NTSWMycXl1QlpHNkhpZ1VVem5sQVp1TEpsdVV1dTVWM3NHSWd0Z3VpWTQ5VDhYeHZEcmlEcjJXVkl5Y3dwY05OeVlHdDRET3pLYXd6L2hlNS9zZzlBcW0rYVZmMmlWRklWWXJBNEhEc1F4Q1M3VHdxdjA1NWdUcUZ3eENOQTFqeHBlY21IaFRBSHdnTTNvaFJ2aGNtcWVwYU9PUkdMMkpMWlpyRzZUYUQ3MkFHanRNeDRnTHI5SmJibDRNeDQwMTdpdDZPbXBiSmRMUWpBRFdENFZSaDdyMlhtS2VYVFZIZWNGdG42MW44WXlnNkhTK0hFcmFLODNwZG9XVlRia3BMb25sN0ZIbmpRVGliRzFtbzRUWlJlZWdNWjdqVWRkRWhYVmQwRytKaWZxS3YxZ3dKSnlwd3RMTVZGZGhxakIrTWZDRDVnQ204TkFwWWRzRk51Rkc1N2l6ZnNOdDZGNU1pU3RiYmJNNTZRUXZOUGZSWFBpdDNHdE9SK0tMNWo4dGI0WVlUNCtYUXRXMjVucFo2YU82MkQwdWlCdFppUmNTMHFMNjl2NTlUZlFEK1dmL0ZPMmloZHFYYVA0d3JDeGNkTHZ4dzE0RUw3L3lIamJ0K3RxYzNySjk3TDBkOEdMNzJMMWsxZHVRc3RsWXhya0NTZlkyWmsvTzQrcTZYbVdYSkZxNitlcHlNYTYzUHRzUExZUjdFeGlQUHdQclovTURNY0JIeS81b1B2NWlQUnAvdXpXZDduOW9MdnpyWXZ1N3hYL1ZkdmpTcGJyL29mVmcvRVhmNGJkN2RkanV1aysvcXZ6VzhGbmNqdit1NFhCL093U3VWdTZ0TTJVdGJxTmJPK3Z6U2JlMlQ5WFZlVmRXbjl0WjkvK21mZmovNzJUYy8vNS9nQUwxcVg0V0FBQT0ifQ.m8Swr7_fAofYqRNFcaAreMgZZuav60yH2-EYKVfP66xrL2NK3lPHl7vRx4cXO9X5YYy86HtXgdzR7jAMdeOwQA"
        , expired_anonymous_updates_customer_onboarding: null //todo
)
def current_config = wdi_configuration
//def current_config = wdp_configuration
testRunner.testCase.testSuite.project.setPropertyValue("fiid", current_config.fiid)
testRunner.testCase.testSuite.project.setPropertyValue("phone_number", current_config.phone_number)
testRunner.testCase.testSuite.project.setPropertyValue("granting_url", current_config.granting_url)
testRunner.testCase.testSuite.project.setPropertyValue("resource_url", current_config.resource_url)
testRunner.testCase.testSuite.project.setPropertyValue("expired_token", current_config.expired_token)
testRunner.testCase.testSuite.project.setPropertyValue("revoked_token", current_config.revoked_token)
testRunner.testCase.testSuite.project.setPropertyValue("username", "daniyalmobile@wirecard.com")
testRunner.testCase.testSuite.project.setPropertyValue("password", "Wdp@01234")
testRunner.testCase.testSuite.project.setPropertyValue("DOB", "1991-01-01T00:00:00")
testRunner.testCase.testSuite.project.setPropertyValue("Expired Anonymous - Anonymous Services", current_config.expired_anonymous_anonymous_services)
testRunner.testCase.testSuite.project.setPropertyValue("Expired Read - Main Screen", current_config.expired_read_main_screen)
testRunner.testCase.testSuite.project.setPropertyValue("Expired Demographic Updates - Update Profile", current_config.expired_demographic_updates_update_profile)
testRunner.testCase.testSuite.project.setPropertyValue("Expired Security Updates - Change Password", current_config.expired_security_updates_change_password)
testRunner.testCase.testSuite.project.setPropertyValue("Expired Security Updates - Change Security Answers", current_config.expired_security_updates_change_security_answers)
testRunner.testCase.testSuite.project.setPropertyValue("Expired Secured Demographic Updates - Update Phone", current_config.expired_secured_demographic_updates_update_phone)
testRunner.testCase.testSuite.project.setPropertyValue("Expired Anonymous Updates - Customer Onboarding", current_config.expired_anonymous_updates_customer_onboarding)
context.username="daniyalmobile@wirecard.com"
context.password="Wdp@01234"
context.DOB = "1991-01-01T00:00:00"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d15e0994-ae5b-494f-928b-54efe108d22f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - 200" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="6cfe90f4-bbd2-4fe7-ad46-2d5741cef35a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="e8dc1042-da0e-4101-8f69-1fc6440833b4"><con:settings/><con:config><script>log.info("###############################################################################")
log.info("##############################"+testRunner.testCase.getName())
log.info("###############################################################################")
testRunner.testCase.testSuite.project.setPropertyValue("expected_rc", "200")</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="e893ab5f-c1d5-4197-973e-013ebd8a9102"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="f0706261-85a5-4957-b4d6-610667846337"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="84843244-b343-41a4-aa7f-56ce4a0c619b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="e833e681-0b14-46b0-b688-435a88927cb8"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="7083fe75-abef-4a04-9fcb-f5a0d0254dfe"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="226e69df-7253-44b0-9868-48e29ac7ecd6"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="8c77dbc3-a4f9-4e43-af63-8393b3ac460f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="a1a2a0b9-ea4b-4f66-a6d3-5e42cca3a3ab"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="5e6912c2-16a0-42f2-9deb-bf39ae4d3dbd"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="9a4bb787-5086-4af2-b3e5-ac430c3889a1"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="33551876-b24b-4c9d-9699-ef80e6b906a1"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserIdEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendActivationCode", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")

run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
//run_service("RevealPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("RevealPINValidationParameter", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirmEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
//run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

//testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
//log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
//run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="d3e263c1-121b-4d76-95bb-e08fbae46809"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="2b86036e-858f-4145-a123-7db5317318ea"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="ced3cacf-20c3-46f2-a9cf-dc01149d6d3a"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="10604c28-85b2-49db-ae5c-b8f34f191901"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="970c83ea-744b-4aab-b8a5-e077db293ca9"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services (OTP)" id="5b20007b-f770-43e3-8aeb-d08eea1693c6"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS 2" id="4a39239d-77d6-4686-9b4c-78254e1e4301"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response 2" id="bfded281-0f7d-4d92-86d8-5435bc8f2c59"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP 2" id="0c9e319f-fa61-4956-b240-9dfb7ef86d2a"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous Updates - Customer Onboarding - Any LMN" id="95a2be63-30ba-4a03-aac5-b722c6a6a98a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous Updates - Customer Onboarding - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Anonymous Updates",
    "identity": {
      "identity_name": "Owner of OTP Data",
      "authentications": [
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Customer Onboarding"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Updates - Customer Onboarding Response" id="ae82d9b6-8981-4c20-b37f-7cd9bd2d40ea"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous Updates - Customer Onboarding",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services (OTP) 2" id="36a820c3-6864-4afe-817f-3976ca2b7a5f"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous Updates - Customer Onboarding"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous Updates - Customer Onboarding")
run_service("AddressLookup", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "\"")
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CheckIDDocumentValidation", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7a457265-0465-448d-98b5-f5133a387437" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - No Auth Header - 403" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="51e27e3a-2a84-4936-9565-04e0c8c5c1e4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="a9d883a8-05b6-4e33-9b9c-9c1d9b18b363"><con:settings/><con:config><script>log.info("###############################################################################")
log.info("##############################"+testRunner.testCase.getName())
log.info("###############################################################################")
testRunner.testCase.testSuite.project.setPropertyValue("expected_rc", "403")</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="79a125c6-6cf3-49d3-9bcc-a6ab4d6fb972" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="466be7a9-efb5-4115-b0b9-dc3bd5e1322b" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="f705121e-1e87-4fa5-b0ae-238f74f0e84c" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="c1c4bc72-6f5b-47ef-8a2e-e1d88ffaae2a" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="2509527d-5459-485a-a937-e7b7b9a2785b" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="5fff4a92-6af3-41cc-bdf4-383a83875972" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="986d63e2-04d6-4e2d-99eb-ba0a04b8547b" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="00ad70d0-68ff-46b7-b54d-d07c7fb4423c" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="ee0555c0-a9c1-4b90-84b9-aca10734120b" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="168d6f8a-ee5c-4eda-91a2-96306470d48b" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="43b70e0b-6a3a-43bc-b52d-d683a343e113" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="cc5c39be-f5aa-4992-9a45-5e0fdbd7e599" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="0e5ac670-70df-49ea-93ea-afa2f8085bf0" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="fcbde23f-b0cf-4f12-bcc2-b3c0a2a4ac07" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="398010fa-42ef-4fa5-a727-648adf7a29b6" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="f9547385-d3f1-42c8-aeb6-7fb3fa1b0b42"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService - No Auth Header'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserIdEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendActivationCode", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")

run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
//run_service("RevealPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("RevealPINValidationParameter", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirmEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
//run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous Updates - Customer Onboarding"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous Updates - Customer Onboarding")
run_service("AddressLookup", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "\"")
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CheckIDDocumentValidation", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1834b23b-2f60-42c1-a4cb-d85ed228d359" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Empty Auth Header - 403" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="9d0a70a9-a2ba-40eb-9a7f-ff1ac9ffc3b8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="a6323007-4c22-40b3-bd21-75c6564ebdcb"><con:settings/><con:config><script>log.info("###############################################################################")
log.info("##############################"+testRunner.testCase.getName())
log.info("###############################################################################")
testRunner.testCase.testSuite.project.setPropertyValue("expected_rc", "403")</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="b79063aa-768f-4900-84fc-55a5c0441ab3" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="60695faf-4641-4f40-8d82-74aeceb83ddc" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="9a9676a9-34c8-4674-9118-b03ff8f21ce2" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="b7d2db9f-9f77-40ab-9859-d5c294258ee3" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="8d75749a-2d90-46a3-8b3a-068b7200fa98" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="4386b7b9-837a-46d2-bb93-266c9903a627" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="b7112a22-fecc-43e9-8405-c66778409a7a" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="db1aa58f-f8c7-45a0-9aca-0bc2925799a8" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="a9d7865c-79ac-4bd2-af21-6e9840e75bc3" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="1477e990-8920-4c35-b72b-a5e7cb19063a" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="cce5c033-afb7-4b82-ad8a-5bf2dfee4879" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="497e8d27-e65c-432b-b502-d19c3d9048cb" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="3a8afd1c-d081-475a-b282-a5bc8ecf3165" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="06640689-25c4-40d9-800e-7a7da25220d9" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="ab073e89-1aaf-4825-8e38-5053cafd6761" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="b5bf2cc3-cedb-4f81-ad2f-038d2acc314c"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService - Empty Auth Header'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserIdEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendActivationCode", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")

run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
//run_service("RevealPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("RevealPINValidationParameter", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirmEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
//run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous Updates - Customer Onboarding"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous Updates - Customer Onboarding")
run_service("AddressLookup", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "\"")
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CheckIDDocumentValidation", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="382da24a-5bb5-4042-ae60-661c0d1dbc0b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Bearer Auth Header - 403" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="6c836aae-6cdf-47be-ada1-0ab477531e3d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="5a512aeb-2d51-424c-af79-970cdd6b8060"><con:settings/><con:config><script>log.info("###############################################################################")
log.info("##############################"+testRunner.testCase.getName())
log.info("###############################################################################")
testRunner.testCase.testSuite.project.setPropertyValue("expected_rc", "403")</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="749eb21c-5ddc-4525-8c6b-4215f19530c6" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="368cef73-5eff-4913-8da0-d7d8523718fd" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="23d92d93-20d3-4720-acaf-97ea0d146540" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="fb1ee03e-a809-430e-b6b4-db3e06938b23" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="c9f5f6ae-e210-43d0-8e5d-34774ca3affe" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="e1fced48-56cc-4fd9-a198-1e3ca343897f" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="43cbbfb7-c223-4782-a4fe-a7a0748ff688" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="c55e79a2-290f-4f9d-b5a1-db871d835337" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="fe8f56a9-8763-482a-ac25-843850d52edc" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="c6f3a165-5e13-4660-8810-fd4d2007b742" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="413fa596-8f44-4fef-8c57-dc1d72922be7" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="0540121a-1084-45f8-9170-40e9a6d64c5c" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="788d0400-581c-4741-9dac-c1ad6472b0f1" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="b4480c2b-a6a1-47ff-a410-eee962a0c53c" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="84038d71-4d60-4beb-bb5a-3ff74dee1c62" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="e217bbff-4420-451b-ae20-a11da10a5225"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService - Bearer Auth Header'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserIdEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendActivationCode", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")

run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
//run_service("RevealPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("RevealPINValidationParameter", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirmEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
//run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous Updates - Customer Onboarding"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous Updates - Customer Onboarding")
run_service("AddressLookup", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "\"")
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CheckIDDocumentValidation", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="df979db1-d696-422b-bdb5-51a41ce4b84a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Expired JWT - 401" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="53c7e552-1459-4412-9f5b-13e5f32974b0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="821bfefd-0c3f-4ba8-ae36-ab4805e7e020"><con:settings/><con:config><script>log.info("###############################################################################")
log.info("##############################"+testRunner.testCase.getName())
log.info("###############################################################################")
testRunner.testCase.testSuite.project.setPropertyValue("expected_rc", "401")</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="8e4447a7-bff0-4364-9b06-802e3613e2f5" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="5b362bf9-192b-4663-9562-c3e750f29324" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="ec3d698b-50f9-479d-9bd9-4ffb8de86a99" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="192c64e9-5e4f-4f86-9dd9-b2805b46d677" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="8471d967-9d0a-474f-9d7b-94f04ba13cab" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="8d236d29-8730-43d8-9511-607d06c247e9" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="fc2b39db-2346-49e7-961a-17d3c314dde5" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="fab94464-7ec5-40cb-a8ad-4dfb31f19537" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="9e445760-7694-4d2e-9a41-acf74b17c6db" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="995c2941-a0d3-4c11-8a52-a4fe5a07f15a" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="745a1704-c8f1-4eee-99cc-515283130410" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="3e116ad4-f2f2-4c6c-95a8-bc36fadc7889" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="7696bcab-9e2f-4075-b6ef-6ec5080ce8fa" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="07cce945-e93c-4f54-a496-625dc0007ba9" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="f248341c-9e4d-47f7-81b4-51dada7c9b44" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="c4f9016e-9380-4210-b092-b3100323a02a"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Expired Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserIdEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendActivationCode", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Expired Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")

run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
//run_service("RevealPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("RevealPINValidationParameter", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirmEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Expired Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
//run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Expired Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Expired Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Expired Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Expired Anonymous Updates - Customer Onboarding"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous Updates - Customer Onboarding")
run_service("AddressLookup", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "\"")
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CheckIDDocumentValidation", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f952863a-3684-4a60-a874-ea1a7bbe1706" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Junk JWT - 403" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="ee7a5484-eef9-4bce-9e76-880030efa328"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="54905f48-e551-4687-bfdb-b340809a8dbf"><con:settings/><con:config><script>log.info("###############################################################################")
log.info("##############################"+testRunner.testCase.getName())
log.info("###############################################################################")
testRunner.testCase.testSuite.project.setPropertyValue("expected_rc", "403")</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="d822d35e-c1ff-4fa2-a53e-f547e1895f60" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="e94823b0-fe70-4650-a462-97cf10bcd982" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="08c592b7-474e-447e-ab46-acc79bf45110" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="59ae408d-e4a1-4db7-8a03-f8afc67024ce" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="39c5a176-c7bd-444a-a556-c3803582eef9" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="a6b93939-bc82-48ca-a061-6041ae3d603a" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="1a1378c1-eb2e-4471-a298-7eb66800cec2" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="8c9d3f92-e4a8-4404-af30-33bda2091cfe" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="9e71ce2e-176e-4aed-b692-cda5bcba7ef7" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="bdefb15d-d5d3-413f-9925-0280e528965c" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="f67eed03-4fda-4d38-adf8-213c85dbb17c" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="c6680afc-04af-4934-9afb-2966ec1e913e" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="ede61e46-82b7-4dca-9497-f87b5585e255" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="c5bcd07d-5d9f-41df-8173-8920e8386da7" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="13c48e84-24f8-4af1-9a9e-5728a852be16" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="9637aca7-4f6c-4ef8-a46e-a31062e3c8b4"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService - Junk JWT'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserIdEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendActivationCode", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")

run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
//run_service("RevealPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("RevealPINValidationParameter", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirmEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
//run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous Updates - Customer Onboarding"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous Updates - Customer Onboarding")
run_service("AddressLookup", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "\"")
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CheckIDDocumentValidation", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d498383c-b1d4-4e8d-93e3-fc03ca18f06c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Usage Exceed - same Authorization header usage - 403" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="45e1dcb4-8793-4e85-85db-88e0457f0d4f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="80712ace-6aae-4a04-84ae-57cbc6d6e8be"><con:settings/><con:config><script>log.info("###############################################################################")
log.info("##############################"+testRunner.testCase.getName())
log.info("###############################################################################")
testRunner.testCase.testSuite.project.setPropertyValue("expected_rc", "403")</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="ed9620d5-8b98-4561-a2eb-81afdfc34552"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="645fdf28-1f70-4d45-a0ca-701168fd08a4"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="108c54bd-fe0e-48f9-b354-3e5e5db38b99"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="ef064320-e144-4d86-9094-23cbfdaf12fd"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="863d8a41-d5d8-49fe-b027-98a88a2bf13d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="8fc2a0d8-be0a-4752-9dd4-ee2a363dae30"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="ac4afa4a-f228-4f72-8a20-fcabecf4ca0f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="919affdd-82d6-4e80-a729-14a101e04f44"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="f14dd3cd-8d58-476b-867d-5711238d6b5e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="9406befd-c9c2-4e01-a37f-a9861108035b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="44e0e367-f329-4dcf-8098-430648f481be"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params, Boolean i_no_log_no_validation = false) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
if (!i_no_log_no_validation) {
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}
}


testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
//run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"", true)
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"", true)
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

//testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
//log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
//run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
//run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
//run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
//run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
//run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="8ba032ed-d651-454f-a259-cbd133ba0cd0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="369b202d-ae38-4041-9119-09c8a8f07f83"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="86fc8970-738b-4392-8c7e-2adfd1e12d98"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="15b02604-671d-48a6-b0ed-dce2852264bf"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="bcbfbba9-a597-4901-b1fc-ecb473f17d20"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services (OTP)" id="feb9f33a-f68d-43a5-940a-1889317ccf61"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params, Boolean i_no_log_no_validation = false) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
if (!i_no_log_no_validation) {
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"", true)
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services (OTP) 2" id="c1efe33e-4515-4ef8-a6e3-5de9d8223928"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params, Boolean i_no_log_no_validation = false) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
if (!i_no_log_no_validation) {
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous Updates - Customer Onboarding"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous Updates - Customer Onboarding")

run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "\"", true)
run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "\"")

run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"", true)
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"", true)
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"", true)
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"", true)
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"", true)
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="dc0a4efc-9a1f-4cfa-b3d9-ef837ab3b12f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Usage Exceed - Service calls within same authorization - 403" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="e97cbf1d-2072-4edb-ac1c-d1bd76b55bbb"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="e9d80cad-8a22-4223-ae32-d2de3c1ee666"><con:settings/><con:config><script>log.info("###############################################################################")
log.info("##############################"+testRunner.testCase.getName())
log.info("###############################################################################")
testRunner.testCase.testSuite.project.setPropertyValue("expected_rc", "403")</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="ab9b671b-7a5e-4359-a093-65c0e03e85c6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="dc6130d6-570b-4103-b657-49688ea701fe"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="1d785e73-b5fb-4437-b342-1a852159aa48" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="02c11e50-e633-4ebb-937d-a48b47f3db4f" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="36a3ca3e-e3d5-4e04-b65f-f5703b86b341" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="6253d12b-0a53-440d-9e33-0efb41f5f7f0" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="fd459a89-4f03-4c05-9bbf-2bfafa2efb36" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="a4a648c2-ff5f-40cc-aca1-f870f036fd70" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="50a7ec18-ae4b-4517-accf-4db5849c0022" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="7cfe4648-39f6-4355-ba49-cb2d8139fa94" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="acc4df63-b19c-468f-a896-cfcbe08c9aa6" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="4a7da809-8157-408f-9497-28ec5632f1ea" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="68158f7f-ce88-4b5b-99fd-3a46b500a5fe" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="60f0eb71-fa95-46b0-9589-16a208902a19" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="2e72f9ec-b6c8-4cc8-b100-f974ab92e3b4" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="1ad7491e-a460-4240-a4f0-a05761026d66"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params, Boolean i_no_log_no_validation = false) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
if (!i_no_log_no_validation) {
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"", true)
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"", true)
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"", true)
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"", true)
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"", true)
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"", true)
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"", true)
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"", true)
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"", true)
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"", true)
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"", true)
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"", true)
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS 2" id="54a7005f-f1b8-4f32-9bbd-7ebab400ce15"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response 2" id="a5527cd1-9d02-4849-a7f2-106fbc7ee161"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP 2" id="20cd94bc-8f8e-4d5e-9a87-c7ac74948717"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous Updates - Customer Onboarding - Any LMN" id="cb142664-721a-4f0a-987b-310b17c8bc58"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous Updates - Customer Onboarding - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Anonymous Updates",
    "identity": {
      "identity_name": "Owner of OTP Data",
      "authentications": [
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Customer Onboarding"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Updates - Customer Onboarding Response" id="f684ded8-cdaa-479f-8985-2a60b6d74a29"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous Updates - Customer Onboarding",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services (OTP) 2" id="7807ed10-84ba-42df-88dc-adc553159a55"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params, Boolean i_no_log_no_validation = false) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
if (!i_no_log_no_validation) {
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous Updates - Customer Onboarding"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous Updates - Customer Onboarding")

run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "\"", true)
run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "\"")

run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"", true)
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"", true)
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"", true)
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"", true)
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"", true)
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e966e3d3-cdad-41c8-a04f-9b18d88858dd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Refresh Usage - 403" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="7adb8877-5a5a-46ed-a9e1-31ee3fd285af"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="c98e60b8-0c2d-4cdb-8d31-784cb7ef54ee"><con:settings/><con:config><script>log.info("###############################################################################")
log.info("##############################"+testRunner.testCase.getName())
log.info("###############################################################################")
testRunner.testCase.testSuite.project.setPropertyValue("expected_rc", "403")</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="0de9f026-9713-48fb-b6e3-ce41229a0f1b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="272c6e04-8481-4754-ac27-124954c20606"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="d39931b8-26da-4ccc-a103-efa740a3e374"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="daea3d98-5d73-4828-a616-7091b8b03fa6"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="b0ca4742-365f-44b6-b20b-1ff526a3ca28"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="f4a35cb3-1a75-4f61-9bd7-c76b54dd3c13"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="3eb17116-f1c0-4a4a-88d9-a27c615971c1"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="de895c87-f026-4047-92f1-c5c2785b79e5"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="3966f921-ea76-41a4-87a2-53a264f5c7eb"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="fd384fb4-3288-46b0-9996-b280b3df9f73"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="fde98bd1-96b1-4c84-a88f-62bc80c279e0"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn("Unexpected result: Received ${context.httpResponse.getStatusCode().toString()} - Expected: ${testRunner.testCase.testSuite.project.getPropertyValue("expected_rc")}: \\/\\/\\/")
	log.warn(context.httpResponse.URL)
	log.warn(context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
	log.warn("Unexpected result: Received ${context.httpResponse.getStatusCode().toString()} - Expected: ${testRunner.testCase.testSuite.project.getPropertyValue("expected_rc")}: /\\/\\/\\")
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserIdEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendActivationCode", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
//run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/DisputeForm/eng/0.6.0")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")

run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
//run_service("RevealPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
//run_service("RevealPINValidationParameter", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirmEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
//run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

//testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
//log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
//run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="3ab9476d-6c66-4215-beb4-b23e60128714" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="583150c8-970b-4ce8-8405-7a6c1c0d619a" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="4b021d20-54c6-4989-9bc0-4832b44b077c" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="167490c3-7814-4933-b729-bc3f442cfe61" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="0f685006-b0a1-4237-a289-b5e748c47587" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services (OTP)" id="7b44b7ca-dec8-408a-8d62-7a8c1229c197"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services (OTP) 2" id="ca9c3f01-f1b1-4180-8141-69aae6f8b3c9"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous Updates - Customer Onboarding")
run_service("AddressLookup", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "\"")
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CheckIDDocumentValidation", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetProductParameters", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2df16fae-efcb-467f-926f-560a2ed5a442" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Data Scope Exceed - wrong keys - 403" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="b866648b-a514-42ef-b43d-cdea1074ea78"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="acad882d-0c64-40a3-b246-fb36c7b98709"><con:settings/><con:config><script>log.info("###############################################################################")
log.info("##############################"+testRunner.testCase.getName())
log.info("###############################################################################")
testRunner.testCase.testSuite.project.setPropertyValue("expected_rc", "403")</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="e693d6a8-ed41-4539-8488-9f94f016511e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="594dad0c-0d81-4dd7-b474-662598f39833"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="04e162eb-b81f-4630-9efe-077e687e88d4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="36595da8-b066-472a-9fa0-3f54e6d329e0"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="04765da3-9f87-4303-8d92-8f9e54470878"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="88293853-5179-4005-895b-0907ea81436c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="fa164411-9622-48dc-8ab6-6d6c4a0e5b82"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="1add3339-bfff-4b3b-bc02-07ecef033319"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="68b6abf4-99de-45f0-8443-c34873a96011"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="f8ef7fe2-6bdf-4ba5-a0e7-c80061d998b2"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="16e9c931-7d8b-421c-b1ec-77b8a15453d3"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

def l_proxy_number = testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "1"
def l_phone_number = testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "1"
def l_accessor_id = testRunner.testCase.testSuite.project.getPropertyValue("accessor_id") + "1"
def l_product_id = testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "1"

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("GetCVC", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
//run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
//run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
//run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + l_product_id + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("SetStatementDate", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("StatementsInformation", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
//run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
//run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
//run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
//run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
//run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
//run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
//run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("Document", "GET", "/${l_accessor_id}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${l_accessor_id}/DisputeForm/eng/0.6.0")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + l_product_id + "")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID\": \"" + l_product_id + "\"")

run_service("FXRateSearchEnhanced", "GET", "?ProductID=" + l_product_id + "")
run_service("GetFees", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("GetProductParameters", "GET", "?ProductID=" + l_product_id + "")
run_service("RetrieveProductWallets", "GET", "?ProductID=" + l_product_id + "")
//run_service("RevealPIN", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
//run_service("RevealPINValidationParameter", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")
run_service("W2WTransferConfirmEnhanced", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
//run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\"")

//testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
//log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
//run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + l_proxy_number + "\", \"PhoneNumber\": \"${l_phone_number}\"")</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="13d6f4c6-92a2-4205-84dd-10cef03a5dcc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="59c73ca5-7fdf-4a04-aaf9-2ae0a38f6edb"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="66141fc9-1660-42ad-9811-5be0d9e9fcfa"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="ddf1f644-be72-4a94-9294-9bebc8e3eb45"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="9d62da16-429a-4cc9-abed-77c85b7a7674"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services (OTP)" id="22856e60-bfd4-4425-941f-87c0fec31324"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

def l_proxy_number = testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "1"
def l_phone_number = testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "1"
def l_proxy_number_correct = testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")
def l_phone_number_correct = testRunner.testCase.testSuite.project.getPropertyValue("phone_number")
def l_accessor_id = testRunner.testCase.testSuite.project.getPropertyValue("accessor_id") + "1"
def l_product_id = testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "1"

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"${l_proxy_number}\", \"PhoneNumber\": \"${l_phone_number}\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"${l_proxy_number}\", \"PhoneNumber\": \"${l_phone_number_correct}\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"${l_proxy_number_correct}\", \"PhoneNumber\": \"${l_phone_number}\"")</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS 2" id="a8264b6d-2579-4570-9f6b-9c8dbed4fed3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response 2" id="7ff9d5b0-40b8-420d-a393-694b45110fcf"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP 2" id="f7e6e3ad-7a6d-4f52-a406-c93f6fc36370"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous Updates - Customer Onboarding - Any LMN" id="fbe49769-c76b-47a6-9c00-d97c64c0df79"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous Updates - Customer Onboarding - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Anonymous Updates",
    "identity": {
      "identity_name": "Owner of OTP Data",
      "authentications": [
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Customer Onboarding"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Updates - Customer Onboarding Response" id="85c88daf-2b7f-436c-8e63-686fbd655b97"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous Updates - Customer Onboarding",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services (OTP) 2" id="e6b67101-28e2-44d1-968a-9ceb1271bd46"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

def l_proxy_number = testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "1"
def l_phone_number = testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "1"
def l_proxy_number_correct = testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")
def l_phone_number_correct = testRunner.testCase.testSuite.project.getPropertyValue("phone_number")
def l_accessor_id = testRunner.testCase.testSuite.project.getPropertyValue("accessor_id") + "1"
def l_product_id = testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "1"

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous Updates - Customer Onboarding"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous Updates - Customer Onboarding")
run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber\": \"${l_phone_number}\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2e74835a-a344-4778-82d6-a519b02f0963" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Data Scope Exceed - missing keys - 403" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="68149a76-587a-4299-a7d3-20a43cc686e7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="da809346-64b3-4ebc-8e00-b02fc3297281"><con:settings/><con:config><script>log.info("###############################################################################")
log.info("##############################"+testRunner.testCase.getName())
log.info("###############################################################################")
testRunner.testCase.testSuite.project.setPropertyValue("expected_rc", "403")</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="3d5059c5-077f-4e11-8f8c-2837ad7c1df9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="5fef44d6-75b1-448d-b8ee-248ad97ed679"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="77ee45c6-a017-4077-920a-f9f6624f39d3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="659ff967-97b4-4612-b1dc-6cca9aeaab08"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="7356885e-36dc-4388-882e-ee858f85efb9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="530a605e-f103-4c00-8650-630bc6f604f2"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="5de64c1c-c39e-4643-bd57-6d971d6b1462"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="d0784dc7-4e65-4681-a5dc-7e54a0f9ce12"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="e79acefa-aa15-4d95-aa22-89c9aa2ba87b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="f3c046c4-7fda-4a15-bf74-cc3b99d29d82"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="f0508f96-63e2-491a-9a13-b5a825741081"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

def l_proxy_number = testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")
def l_phone_number = testRunner.testCase.testSuite.project.getPropertyValue("phone_number")
def l_accessor_id = ""//testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")
def l_product_id = testRunner.testCase.testSuite.project.getPropertyValue("product_id")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber1=" + l_proxy_number + "")
//run_service("GetCVC", "GET", "?ProxyNumber1=" + l_proxy_number + "")
//run_service("CardActivationSS", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber1=" + l_proxy_number + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber1=" + l_proxy_number + "")
//run_service("UserRegistration", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber1=" + l_proxy_number + "")
//run_service("ForgotPassword", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber1=" + l_proxy_number + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber1=" + l_proxy_number + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("FXRateSearch", "GET", "?ProductID1=" + l_product_id + "")
run_service("GetSecretKey", "GET", "?ProxyNumber1=" + l_proxy_number + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber1=" + l_proxy_number + "")
//run_service("SetStatementDate", "GET", "?ProxyNumber1=" + l_proxy_number + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber1=" + l_proxy_number + "")
//run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber1=" + l_proxy_number + "")
//run_service("StatementsInformation", "GET", "?ProxyNumber1=" + l_proxy_number + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("VirtualCardCreate", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("ForgotPIN", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber1=" + l_proxy_number + "")
//run_service("GenerateOTP", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("ValidateOTP", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber1=" + l_proxy_number + "")
//run_service("Document", "GET", "/${l_accessor_id}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${l_accessor_id}/DisputeForm/eng/0.6.0")
run_service("GetProductParametersEnhanced", "GET", "?ProductID1=" + l_product_id + "")
run_service("ChangePassword", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID1\": \"" + l_product_id + "\"")

run_service("FXRateSearchEnhanced", "GET", "?ProductID1=" + l_product_id + "")
run_service("GetFees", "GET", "?ProxyNumber1=" + l_proxy_number + "")
run_service("GetProductParameters", "GET", "?ProductID1=" + l_product_id + "")
run_service("RetrieveProductWallets", "GET", "?ProductID1=" + l_product_id + "")
//run_service("RevealPIN", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("RevealPINValidationParameter", "GET", "?ProxyNumber1=" + l_proxy_number + "")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("ValidateLoad", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("W2WTransferConfirmEnhanced", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
//run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")

//testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
//log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
//run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\", \"PhoneNumber1\": \"${l_phone_number}\"")</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="c1498fb3-f6fc-42a3-9f8c-36bd4ce367d9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="a7b30d4e-33fe-4da1-9d94-9fc08f3c0eaf"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="15bdf6d3-1f0a-43e5-87db-bdb41993fe00"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="659d0318-01b5-409f-863d-d94d264f1838"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="549a60e3-77a8-4137-870d-ea789e1e32b7"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services (OTP)" id="6acb31d6-2804-4836-969d-13e210036709"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

def l_proxy_number = testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")
def l_phone_number = testRunner.testCase.testSuite.project.getPropertyValue("phone_number")
def l_accessor_id = testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")
def l_product_id = testRunner.testCase.testSuite.project.getPropertyValue("product_id")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber1\": \"${l_proxy_number}\", \"PhoneNumber1\": \"${l_phone_number}\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"${l_proxy_number}\", \"PhoneNumber1\": \"${l_phone_number}\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber1\": \"${l_proxy_number}\", \"PhoneNumber\": \"${l_phone_number}\"")</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS 2" id="92d4a5b1-b775-4172-b798-a2565e19cfea"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response 2" id="671856f2-0d0d-4599-a69a-79b7a7db90c9"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP 2" id="3fc542bb-0c56-4e8a-8d31-2c5ee13dd703"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous Updates - Customer Onboarding - Any LMN" id="08e393d6-53ed-4d84-b2e3-2eca4da5089e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous Updates - Customer Onboarding - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Anonymous Updates",
    "identity": {
      "identity_name": "Owner of OTP Data",
      "authentications": [
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Customer Onboarding"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Updates - Customer Onboarding Response" id="59beff2e-c45e-47bf-b8bb-b0d59f4d0c66"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous Updates - Customer Onboarding",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services (OTP) 2" id="835ae7e3-7202-4d95-b38e-7bace0df3392"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

def l_proxy_number = testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "1"
def l_phone_number = testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "1"
def l_proxy_number_correct = testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")
def l_phone_number_correct = testRunner.testCase.testSuite.project.getPropertyValue("phone_number")
def l_accessor_id = testRunner.testCase.testSuite.project.getPropertyValue("accessor_id") + "1"
def l_product_id = testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "1"

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous Updates - Customer Onboarding"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous Updates - Customer Onboarding")
run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber1\": \"${l_phone_number}\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="21c42d70-1e34-40cb-b7b0-007275f5f773" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Data Scope Exceed - empty keys - 403" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="20d0358e-1af8-4be4-9750-fd395a9e61d8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="96bd97f6-fdec-469e-a8c2-fad618c68e49"><con:settings/><con:config><script>log.info("###############################################################################")
log.info("##############################"+testRunner.testCase.getName())
log.info("###############################################################################")
testRunner.testCase.testSuite.project.setPropertyValue("expected_rc", "403")</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="f9568349-7198-4509-bc84-a79962c2984e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="eb7deb4b-dcf3-4a30-8479-0846a74d9f96"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="40e58e23-66e1-4178-89c2-ba51a0933e18"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="e165ab9c-db96-44a6-a429-ec666f8be8bc"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="165fb3f7-cffe-4c8e-aa08-d9b77662f497"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="1740175e-9ad5-46d9-a9ec-40a5210bd95f"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="34963ba0-58d1-49be-96f9-bb2d696d67d8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="4ef31af9-6936-4b30-b1b3-0c104f2e746b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="30d3a461-a60f-4904-87fb-9b35f8db3d1f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="1edcb9ac-0126-405b-9256-68792edb782a"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="60c66adc-4964-4652-bff5-3533dc4e169f"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

def l_proxy_number = ""//testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")
def l_phone_number = ""//testRunner.testCase.testSuite.project.getPropertyValue("phone_number")
def l_accessor_id = ""//testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")
def l_product_id = ""//testRunner.testCase.testSuite.project.getPropertyValue("product_id")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("GetCVC", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("CardActivationSS", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("UserRegistration", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("ForgotPassword", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("FXRateSearch", "GET", "?ProductID1=" + l_product_id + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("SetStatementDate", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("StatementsInformation", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("VirtualCardCreate", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("ForgotPIN", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("GenerateOTP", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("ValidateOTP", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("ForgotUserId", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + l_proxy_number + "")
//run_service("Document", "GET", "/${l_accessor_id}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${l_accessor_id}/DisputeForm/eng/0.6.0")
run_service("GetProductParametersEnhanced", "GET", "?ProductID1=" + l_product_id + "")
run_service("ChangePassword", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProductID1\": \"" + l_product_id + "\"")

run_service("FXRateSearchEnhanced", "GET", "?ProductID1=" + l_product_id + "")
run_service("GetFees", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("GetProductParameters", "GET", "?ProductID1=" + l_product_id + "")
run_service("RetrieveProductWallets", "GET", "?ProductID1=" + l_product_id + "")
//run_service("RevealPIN", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
//run_service("RevealPINValidationParameter", "GET", "?ProxyNumber=" + l_proxy_number + "")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("ValidateLoad", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")
run_service("W2WTransferConfirmEnhanced", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
//run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\"")

//testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
//log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
//run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber1\": \"" + l_proxy_number + "\", \"PhoneNumber1\": \"${l_phone_number}\"")</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="6581e2c2-8179-4b7a-ab81-0ed5fae1cd5e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="33f694b7-a37b-4426-8515-9bb2f154a263"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="685f1fce-bded-4524-831b-8ba1de97c04c"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="27a3e438-7b11-4416-9156-7da3ec462cca"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="994dd6ba-f884-4be4-bd94-f90bb7668dd4"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services (OTP)" id="134e29f0-1746-457c-8c12-051dfa70f4d7"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

def l_proxy_number = testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")
def l_phone_number = testRunner.testCase.testSuite.project.getPropertyValue("phone_number")
def l_accessor_id = testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")
def l_product_id = testRunner.testCase.testSuite.project.getPropertyValue("product_id")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"\", \"PhoneNumber\": \"\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"\", \"PhoneNumber\": \"${l_phone_number}\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"${l_proxy_number}\", \"PhoneNumber\": \"\"")</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS 2" id="430caafd-8590-42b1-b3f9-19fc3bb082bc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response 2" id="72484f61-40b9-47af-bde0-a1df09aed96c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP 2" id="8028ac1b-bb94-4fcc-8800-cb2780632118"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous Updates - Customer Onboarding - Any LMN" id="2f58e60f-932e-4c12-9839-ff73b303ba7d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous Updates - Customer Onboarding - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Anonymous Updates",
    "identity": {
      "identity_name": "Owner of OTP Data",
      "authentications": [
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Customer Onboarding"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Updates - Customer Onboarding Response" id="4a593a16-77ea-4144-9d13-18cf3583453a"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous Updates - Customer Onboarding",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services (OTP) 2" id="287a5c33-f4be-4242-bcc0-a7f286ccccca"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

def l_proxy_number = testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "1"
def l_phone_number = testRunner.testCase.testSuite.project.getPropertyValue("phone_number") + "1"
def l_proxy_number_correct = testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")
def l_phone_number_correct = testRunner.testCase.testSuite.project.getPropertyValue("phone_number")
def l_accessor_id = testRunner.testCase.testSuite.project.getPropertyValue("accessor_id") + "1"
def l_product_id = testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "1"

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous Updates - Customer Onboarding"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous Updates - Customer Onboarding")
run_service("AccountCreationWithKYC", "POST", ", \"MobileNumber1\": \"\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="195b7668-60de-4067-bef4-03afb04debf0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Service Scope Exceed - 403" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="6d670103-8b12-42c4-a28a-bed3ce2fe282"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="e823302d-9e4c-44f4-8cb0-0d90b6364d48"><con:settings/><con:config><script>log.info("###############################################################################")
log.info("##############################"+testRunner.testCase.getName())
log.info("###############################################################################")
testRunner.testCase.testSuite.project.setPropertyValue("expected_rc", "403")</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="ebf270f0-22af-4323-b701-dc59c86d9b5f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="c309bcc8-a799-4284-93b2-31d00c853c72"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="c2d8802e-a64f-456c-9945-681ecaed89d9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="7fd7c639-afdf-46bf-93af-750de5ba7a12"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="05011913-5489-43ce-b560-6a8d1d9da992"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="6ac3c3b6-8f6e-4d12-9a80-6ec50a3171bf"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="838e8095-41bf-4f71-9395-9bc43de99264"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="2b9166c7-f568-4c6c-a849-ca59875255e6"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="f00dc77e-de64-4474-8f52-2c13fd5ea2bb"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="4fa4849d-905e-4f31-abca-27090dfd8379"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="05533746-6411-4002-83aa-dc1b94eb9bec"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="3ee5611e-76a8-416f-9426-79287cffd478"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="56e1fad8-8f3d-483b-ae5a-b271a3960dee"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="ed275851-0caa-4cae-b381-1433346d52d8"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="c7935acc-8290-4134-b8dc-0b32a6dabc80"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS 2" id="43fe2118-d93b-4494-ad0c-608a6470215c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS 2" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response 2" id="71915e04-5108-4e9a-96f2-e6b895ab5ea0"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP 2" id="d992cf8f-c6a6-4914-aba4-8066d6cf1d2e"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous Updates - Customer Onboarding - Any LMN" id="0fe27c2b-fb47-436c-b163-4fe2b0ee9326"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous Updates - Customer Onboarding - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Anonymous Updates",
    "identity": {
      "identity_name": "Owner of OTP Data",
      "authentications": [
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Customer Onboarding"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Updates - Customer Onboarding Response" id="9b21b5fd-7c12-4779-8129-7a6993457483"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous Updates - Customer Onboarding",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="ac9b27ab-f3d4-4442-9750-6a1cad219731"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
if (testRunner.testCase.testSuite.project.getPropertyValue("expected_rc") != context.httpResponse.getStatusCode().toString()) {
	log.warn(context.httpResponse.URL.toString() + ">>>>>" + context.httpResponse.requestContent.replace("\n", "").replace("\r", ""))
     log.warn(context.httpResponse.responseContent.replace("\n", "").replace("\r", ""))
}
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CheckIDDocumentValidation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("FXRateSearch", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetFees", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetProductParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetProductParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("RetrieveProductWallets", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("RevealPINValidationParameter", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("AccountCreationWithKYC", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("AddressLookup", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CreateEEPaymentRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FundingAmountInquiry", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("RevealPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateEEPaymentResponse", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateIDDocument", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateLoad", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirmEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous Updates - Customer Onboarding"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous Updates - Customer Onboarding")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("FXRateSearch", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("RevealPINValidationParameter", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("RevealPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirmEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"${testRunner.testCase.testSuite.project.getPropertyValue("phone_number")}\"")</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="1e11a76b-0ffb-4a86-8d0c-0f8086ea8275" name="Services - Generic"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5c6b11c7-71f8-4f9e-a8aa-88f6a2b4d8c9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="491c462f-ba07-4283-b144-b4cee16cec21"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="75da7149-e115-4e62-8e01-9a7dd65b1b3e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7d1b38a1-4da4-482d-988d-3efb7d0499c8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService - No JWT" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="c4473601-465d-4356-941f-ad36cea5e6ab"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="c0f0aa74-832e-415c-8657-84c9161a32fd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b659afa3-26dc-4c08-b2f9-c876192bcc14" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService - No Auth Header" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="71772226-05df-4240-b477-1bc27dd054ae"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="d2352dd8-7748-48bb-8317-b6a224658ef9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="20aa4bbc-84f6-43de-99a7-cc44b4b3593d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService - Empty Auth Header" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="2963a01b-0334-40b8-aea2-786df7f8b787"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="5397d85c-fac9-4295-9d3b-5fc70ad79398"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b791a76a-0694-4de6-a451-9cb68564059b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService - Bearer Auth Header" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="8f418174-2196-4f7e-b35a-e22209e13a45"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="0266c1c0-0073-481a-8920-34ae326858df"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="06a43434-5df7-42e2-a602-b85d333259df" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService - Junk JWT" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="a61ed067-c2b0-44be-92dd-e90b3dbe9c4b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer 12345" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="9d5ff27c-fa3e-4724-983a-8e7ba1a8bcdd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer 12345" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>InfiniteAuthURL</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property><con:property><con:name>ResourceURL</con:name><con:value>https://wp1.wirecard.com/emea/middleware_validation</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI</con:name><con:value>https://10.10.99.190:8443/middleware_security</con:value></con:property><con:property><con:name>InfiniteAuthURL_orig</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI2</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI_EMEA</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property><con:property><con:name>fiid</con:name><con:value>1340</con:value></con:property><con:property><con:name>granting_url</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property><con:property><con:name>resource_url</con:name><con:value>https://wp1.wirecard.com/emea/middleware_validation</con:value></con:property><con:property><con:name>expired_token</con:name><con:value>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</con:value></con:property><con:property><con:name>revoked_token</con:name><con:value/></con:property><con:property><con:name>username</con:name><con:value>daniyalmobile@wirecard.com</con:value></con:property><con:property><con:name>password</con:name><con:value>Wdp@01234</con:value></con:property><con:property><con:name>DOB</con:name><con:value>1991-01-01T00:00:00</con:value></con:property><con:property><con:name>current_token</con:name><con:value>qqNS6d+cDhYg3dL7YMk5RZVjUsCA498BcIvjZP1pRyEG4/5cX9vPaI4BhOeZ9RZzr5qv/Tes7dku+dkeRJCA3A0b+frxbstEo5CdD/F0W8GxaTesLVfiRGiRaretOIrq/VdgKhNcLT1M7IlcglR99t6JQOYPmzZ6mRPhSZlHBa3l3qn5CgSLtVr0iuPyQz/nXsOhcIb3GknKacmhEn2KJgp9sLCmlsmR9LWoYDV2fzKOqgao60J4Cr7gzsBGK4YCXLsAnJ2UAdumB6797Oa+c6hms5U/EFAWGowLC5Q8MqzhezVWLak8FJW/12K6JhFqPh/QZCtGK7k8md1Bcl8rrKHG31lH1xNsZI7Q4muOfl0IyCXWmZwAgZePo0H+CKbvaSxpbE/yg6UQjS5MURmf1qI20kGnfYdCpMpxTBJUnKVTG8P9RzzbGcC0CXQ1Y/Ed5S1Xg9s2sUWhGBGAK10nECwhHzvkeZll+rsrBGg2AawNS1SvPwJT6JbSNdtRNnYfIW/8+8aCYWMEjU0mGFxDCqyhKG6bGlTAaHd6SjEHddDHTeSByoHA3pDovERqCNXeV+o4L/mKH8moqWPG0Gvjwu0hxbJ05Q11AMbFA8PFyMPhO+7kQ8MFgXqJCqXTAbCrSFeZlLrUC/8Oi+xv6UIdF05FYJDWC1bJwRkKZXkujI8snEGFIgqL4o/MgSPYRyS9hHqwkNQSMJl/ik928or70V/bAT+CI3qXXxwnWVo91cZr0ZqTlgGD2LljJdrUsvqPdSXuioyQxaV3seiQyrJ+GuPMHvw2szCg8Rzav8XzHId8BaR2CGaVmPPj9I/yjO/+Y5LeYJsaBrd7CWkB1pUuzNq0/LWfdfUO21C3kOWYYvg22W3R2glzr9HFIbaQYLRzByu/ZWlRmOg2q0oVxGuQeCS7omi21StsTb/MwWYo1Zcm7FctzGj/IjYx7mttcFM+Pp95xyd+thTsWT/OFvVVDeKVmqiFvyIBPQcuYhaL4sfTwHtt90vcU8/g9zS3MzuvJpkDbKgXQlTADO7JrLIoJoGwHad8SagVW8k4pP+2KDAlew+8UHS96Wzrn3dPqc7/rJuRXeggF2CkwL/QfPCEFp7QwnVI8W2uDyUZ1rL7boJBBX4Y8aD1dVC0YDTk+0rYpfuYszigaVBx7wOE67K3fdQ0Iq6ahcC3+eF8jMzi2/QIVWNr3E3ijfxOPy0fEg8+5qNkwNphBQwofUqtaO2U4MHW+agGItoicKvIFCTlV+YLEm23rwdGwkgIupam1Xi9l3JM++4HlX1xX1ImViRu4eH+Mjd77Ei3VijOaPopfhGc0KzQGwjkhSLh5XcD/B0WUayoPBv3FgstO0aNDhXy7ATgPcxsE8y1PqwW5Rj8ipMR2DltXXXe7hwpbiIqOuWo59bn5oHIUz+zy4wSWEaAUDBCopr/N1HxeGTqRoHbHNyz709RdWFAXEF7fq6r2zdyVP615OnoSy/3LvqGKIZzu1b4tfH01AirntlX8mefigRQoYtz1+t4c1tKpM8Q9k0iPPFFwr5nn5G321RoS6LrlfDfYwGhjak93Xxo43W+XFD21vzygX9Ndbx4WQbmEH7SPvkUte+nHKzIFLdKHdXZhrDdC3Lrhnz4LIpq+8UjaVJQb9hFkMOzea66MzGVrVuzUvN/3E5AL0TQGFLyTMDUL2/tnN+fPojGrlqYnvERI+LuYanlAq9MmjbYuEkMRzbYirSBvogNwWY35d6dB2hojdLcD5mZI6VNQv7fdug4AS0ffOkJ/xIguTw3OeLyaSTi/b21RijvhfT4/pDUjQ0EI2gT+ooABWnHTNF+CfHg1ww=</con:value></con:property><con:property><con:name>proxy_number</con:name><con:value>1789605043337</con:value></con:property><con:property><con:name>product_id</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>accessor_id</con:name><con:value>6</con:value></con:property><con:property><con:name>otp_id</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">8182</con:value></con:property><con:property><con:name>otp</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">966748</con:value></con:property><con:property><con:name>current_service</con:name><con:value>UpdateProfileWithoutPhone</con:value></con:property><con:property><con:name>params</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">, "ProxyNumber": "1789605043337", "PhoneNumber": "+971559307088"</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value>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</con:value></con:property><con:property><con:name>Anonymous - Anonymous Services</con:name><con:value>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</con:value></con:property><con:property><con:name>Read - Main Screen</con:name><con:value>5cIHYraGRoz/eDoy8gdAIAR8AaNS9pyCy0CWxcTjHJCHbZDVhSGCmaPxUBOfDDI18psSS4eSHqycOQ2bGKhb9lqNKwAeelzer15ICcvLBZoZq1XUxiv4p+0qIh9/g29ivPcPiLkyhx8mJH92jHjAAc65wVq2Fr1YKFVoiAVYx/aGwMcKyD2nJMP7rz7+EpxEA3vjwjTvynRgwTTHst9JvGyxx1GkTZeRr5caaFSRYFcDWXy5cQLpRcHGq/7vD+tJJ6hg5/ekZ3JcvLDRIhMPUsRRJbME2Tqudd237axeWFRbMM/dFhZlq2ueJsTHELfmZOmxMZvvt9IVXwfEEFmc+HeLY7Btcg/aSJPkVJ5EyTcKyMcRpSIY+Thg2GuyZCLojidqfZZUI9dQjmkf43WaFYLv7zMzB3NXbiVTRw9BUrO5RqXg7DPuzksQcB3jd3mS4TggTGBcCSCTH+30WrW3n3hlVpgUzOMjdHw1gWOZt+yrG4BBG3OJxbmCBk/AKdf1dMZifM3kFPiemKELJ9EkaH4wqQ+HlGyYVrxMUMEurcng0zLMw/Qea7et6lbhUWRamGajDwjKuz2GQC4W6fpYzFA7bgN4Nf4JUa6bMtYdcr0YfwdnTomdAKYGjKyjrWfeDDqe+k43fDrCoMmLsd/GlFs218I40Rm0b6LczFS9+HGXCOetT3lJF7UMzdIkiL4zb/GrV9Ry+qyU4VW9LIXytWi+8l6EUkXoAYUwsPlvh9rfdklWFcSGgJxDUhP4zarLr2Km/Rs0Cc1HIh0GjlltAmP6YHi7mnmgtFLNBgTkXhtBlWmsxM7ntC9glhFjXO+LO0nutPgsvIKrYCpEtn6tfCOvkEMaPv6hNHTvACUFj+wZC0EPG7q5XdRRETpi7cwZ3VMA42z6rIpaTXgRaJ7Ty6gdUGtt1xWHoAjCE9HFi7tNJ9qOGxrurYDFRSyqOqQ2/6lASTOqFj0NBEEoFKNhv2lIl/4LTxWs7CEZkOePdbSx0hSsQl+wu3X0BJWGPdCtfF2xN6zxPY7S6e0rtBHjHA2mACfSy2UOrapzCbGKrgEeTaccOGOHLGn8h7PWutgbt5fxrCkBH5NXe96FR6RvMSi5Bx1K2i6KaaMdfe2T79SyDUfASF+7TZOf6MYApb7X86SvfgT0qXD/4PxHtfeTmKPi4dC+hk13ZCH9Ttboqvp7DZt4H3bGDWAE7qyteviZ2RGUNpw6E+i610/CYTIA4cR3n7Hnp/Wq3kL33dZdfuDwGX8v/WtIQi5RnxOSGBJVY4jhFpCwEdEIDZAoThwdjxrxpIAncJrv7ge78eluUmjSYfaWJGqbVm/3XEwMGUsgpwpHXk8kH9J+nHBvY2nM5djhPtY2SwxDmyxVYMf8oUzGxiLjFc1lll/1XiIVWbxSLadqjzSTM/OHblowKQdZlVst9eiJUx/KMPwpUievjWrmTHfJc4ZtuyiEyrgZ8fUKUi48znlO0lGUfs/2p9uRnsuWIFBUFxttlmw19tNtjo6+QEVQD+/NsawFmb4avW49lh+hHgRJXtuPK+1+cTzVmK6/sZr2KujMffZ0CcjfMvLWxXVNY8rkmoe71yKvNsF2EWYHi6RV6FUvOTWXiJwUQ7jeTylftrliZg7pQjdAHhmcK14RCnnrQie0GuMxGYHARXa0rd5QqMJrKRR1odXcR6y7r5kr34SBZ6U584TamBwoB7PlwRNb8Slf4BvEsJhBv0SnzapnrT15jBPr9Rx5f67cl5jY0+gxm/5C7vzP2URjUW6p0r63XHwfXfxeQ7OYfLRrnc2o5NH3Hl6nucINTgtP4CAO6P0toJwBF02DGfwO1AZH1qpQ/sFf9Mkr97B3DsZCaJY1LY5f2vHKaSRbpsvLugcuV55sXhbetWpb2caM66MlKbtXLYkvHHDIzVw1TD61CPyjrn12N96prvzUMALnCf25tPLZdScao8nxG29bhMSA7JK8OOvUiqcT0koFACL/7yXUiSIieg8cheg+YhZfz83EaHWuGeuyRHLF7YDVnRw53HiZLPBMOh/kZUaihhh6DdfvbYEBGokeCHWet/eXlENiNfloPObswUN8fF4EGnRPTedhWE0rnajtDYglGmhaakN71tcJRmoTI5CLfOi02dc+QwglxS0qXnSBQLRvqHQ0gKtlTjQujIqsXpB4J24YM6aKsA2NcWH1CAG/eOGkb0JNt1SB6vI2gsV2CZtcsU3x52WgY28BDtz05Q2vQu0mjp8s+SMqhk/IlreEV+yxUp6qfrJBKYmVi4TgT4N7Arnoki2jpXlh/3jta/nzHFJkR2O7AKBzRLu6MlwW+ZRMxAYgBStlZTJqDNFeNtMUhN5tRONrwuviCQabqAVR7GSre3sftVWKq9ZbgylN2C5TjydXESiPu1Iu0gfQviXRHHo3GwKZ/JfC/ohrHz8JXkuuTfv8vcx9G1YrnzUveA6AWC8pFA3LiHnX8hL8Hp2UoYSOfaYkrIxUxNEv5EsfsihClRW9OJJ3BySM2QQGqh8NT24CgQm20G5Ny9rRCyGUlfOmHSvfYnTbHyf0xIJM3POMvqB+RP1UTkdZAtACxuYoEdox3s/2ZKE1rSPTJYsBS+Dq4U3hBMpkVoxZsDJ7OOOxp2x1CohHJEapbzN8afcUY0wtS0vRSwa3ccnq+250w7Hu/+Z59B0EsRtkgANiokt1LJor8dXlnZ5VFfm5VS3eszAbY+HwNU/qRUuttHe6lVrsaFDhBEy2aZqiuoRENNVs+ta6yGu/jRGX+1azlgKlZ8N5GP3mVPTmhDAyB9TUeVsBs/3Xz7YqeDg/TD0ai6XCo9jzS4t+OPOUdlZ5YaKX63hS3QPd6MSnXjfg1U7JvJp4zHthSMDrNjV0gHIDld19atyr/E/FI6gMwMJrUgA/zs6eQQf+iHKi5SIS0Do+4AdV+8o57Vzojm6fc/CyzhMc3kIH9Cw9MFkPRk7WIiIXKZVK0FSBPKc8OhuYOeKhAs6chgxaNYx8e+GIma50</con:value></con:property><con:property><con:name>Demographic Updates - Update Profile</con:name><con:value>AnT8A+FqYexP8kVT0cuE02Om0MJKLiAsVIanyH/t6G4hcTMnNyOzD/wMnOlyb/d79htfyz/6v3ZceBsPfMHkyXOGCnhKodAFLVrkYno/5mYI1MRo8KqxptL0RfGblEu8Fd6v18pgneDWRutXhF8HVcq68U6ZU3L9DQgAAFi21jDJtNGpk8eTZCpu1C7q2ktBFcDEUlmGbA8KcJli8C0fnDvJOeXpUnIk1ZFH9LYdEuTlsaDiYCj2EptOqsHp0vIBZT6iTjtL1i/Bz14qj75qlJEifSTJenOB4P7ALwXWtcfUzVOWoncEn1ElwZLWq2zkQf2vnDEUU+BykESkJkXxpp8rzIpq2siYfKRG3cvF/b5zdDWLfjT1BlejDcsiqBhfeDTR9YrW034RtdbUXqTJGfCjxM8w+TrMbcxtndkaaaYKMdKZvZvJcjMPL7Yadm9O/Pcp9WOdJnVoiju67gAnG7FJxjv2tC7jQ/Cx4Ki61RJ6rR3Dm087CuBOBU+SuJuiMKQKkT+nG4/qYk5dIoNWZdhOsWEEbZCMeRgQRJtii2OQqkSMKbStE1OoxSiJFADcKqfobQf0XEjctifii+Dg6rYSmRyhDSc+GQIHwA//v0mqtHYFuKcrVui4ErCJgXfdnK/InfvUTbJzaPjArqE3WUjULg3MpZ0dTw0QvITW1TL1/A7yX6teY4C8vkwm+dPf84hE3dl3TZAalAGlJLClI5m5IdQf/3skjlHhttKJXncoVB0WwDAhPNQ82Cun+Dna+2eSmvSBu9GkDrH8/VPE7+xaVJ6QzSDSDA11p4p0ewlOtNmieOyoIpM+cv27KvXY4KII0RHj8Ph+QDR4jVMgLLN85WCSBedfxgoVLmR61tLhEphLhAEGc4flI9ymVw1nv6lbvmiyDcBjCzu5nU31mWjEV2g0qsGR09+FzCph99UxGoB/3mPEPIumGHEqpIOYFf53KGU5BprrBQXRvp5QSAwJo+JK2Bjyj8Z6njjrbWl88omGxps+QN/JJxZcheXqaG+fn23ri4J0BdN2JqJc2JkIvQe/OcgTkcXH8fn+zsUVuLCZdtOGHvpLNt1O2jYwD0l75vQgLU+xHF9OYy5tzPcb3ccEu7G/DQV8HZF4xi9az3qpapGF4J84QcDMA5bsosngWg/qjBk68aSxFE4rKeivvqPYBdjQBJM4pEs1vPBaTHS76cooJrFbn/wu1oTHGbrh/NDZhRCADOvDYBjCj80KjfJcFgUhz/TOGglv7YvpmEADnbKa9l01/SJO6d1TOyMI+D2JnMyZG6/b895y4avJO2RdAfLUWzns7iyCrybAD4s3nmiBwggmlJcGEQkQ7QZOldCjf8pyDIbbcFUiCyQGfAgQ24KXmVO308YcKiPYYN53IlDUgQVLL4U1ZvM3F3R00ZxQRXBlSYFTmaruL2gT+ooABWnHTNF+CfHg1ww=</con:value></con:property><con:property><con:name>Security Updates - Change Password</con:name><con:value>X/B6RaE20jQKRLaDz1echN2P5h2iaNoELRfmm6ioxK8HDqekiZ0Qk9AFGwNbMosruwVF3xe6xL6gdb5itpU04ku7El4+17Gf7UAfiXt6vaKKIkur02jCmaADsM32LDMPdENjASYsIKGW/KNu2BA0GqAL+M4vLX/uc/y7q013NbWkhIxW3q7N9JWvGJwhK+vKg8jZ693+TeDSABu/i0/dJ3kR9Q75kPipW+nyy2U/gZUhN/Pi0igShLQSiE3WB8eQqAI9XL+t1MT659OAFVNi+cA6lc8yQG4NF7NG34OaCKdMFg4q//lwaFlC8euk/ZRhYNW6feBkBqDgiY0wZabFJgn6y/xHYf00rsnE/LX5bQNWsalpHyuhXgGb6qe0ER/jYuLCWXTbRLV/5sEFCm56rEGpqvPYsl2OoG8Ao3aSbV17MFp/gTcz3LlB4bbmFL7bWACtCS0Q0TF2MfLwfcGFfGdE9/2lpdtNjkvBSFh6Ji8R5dFu95wX27SUHbD0jrk4cFDcpBzlRU3JjK/l4q3JYGFyJlpEWOSw5Ekm6bjbkUgnApYk6ueeIbrEHd77UG2WA6FicNF3Qyo9S8XoFG61bocnxlghr/erds77SvIT61+aBQy8vq2GtJX7xMjtiy+npiSqxcU1snyi25ZwQVlKhOTwjixd1rLZIk02PKLVx3LirS+ySfFkzL/pOExP0X8O7zh6yfK3fuyPy71Z/UrqRUU94YLE21l7+TcXVr0AQDAQvx4TRk1vrz5O11y2im2nZ5nUK8Xpe0J07cBg8RAzKDCxBIm9da4pSkyO0MYYcczXsBY7LzyJ+kIZNT7hCU0AAP9S10B4cig99T69HTONLFSmCyv0aUWFV5YvaonnXUjm5RGSWmR117b4zTNecD4si6FqQNw960jTFsPJ57VXc3hkiTxYnxVgIU+xqDqNKdxsdSdKGgDjIYCACdbp2rU0zsP1U+IoLRAx/TqPNI4qq5GE4fPjatmlRBAVdz+aPwgjdGvEUySY42cgACm8C6XVycb5VYp+Y1oFKJxKSj97AW3jSbM4HqDZ7XH3acryd9SicKMyo6MCKjReVGCDjoFrrIvFAKOtrYmcXoTq1RQ8zWofWs+XgXN2yvNZ4f9E5sxEByRp+eHMbWB1VaDYJGfVsB5W83HDAIsNvAmyYbrJTGdKK4aFjAJJvh8gp2uhqaGlKT0bPUWVdG2iPBRYTQsSFJJ8XMO+pQPGORMOOEdVZvPx+u/bNivDU3xZw8xTlhQYqGPniDuf7YIp8AiCrGfJtZIzFj97ggTB1gth5fJ9qjYFscgAHFnUcMIf7DeNgSJcSzygYzDL4W6GA7unDE1Q9jLzEh2Uh+u91qt/5VXIlQd8y8yAGHKdWsPU4DfK5mi704ueDQwBQSwROiki1e9zDTFF95TeL8qTw+YmWB3jwCERYW65RjlkAUyt0Ay07FQ8eAATNYbfZIECKP3Onen+t1PkgAj6O/gmM6AFAVj1VFFunj4k2VNeS1jxlZ9DaKZyFdZvRw39uGgFkNa5FGGOZWEmYhdXUq/02c16UK3cJjJZc72iNlBE/XGZOw9oST7S/s85jY65M++2LycMpU3N3/4R/CGmvlbhFNUtGnjUsZk/FiOyDuJTmhBezZGgcy7QrDk0VWjw5/v87U/eRUaUW+nqD1PMRoDMQwMXiiSm02gT+ooABWnHTNF+CfHg1ww=</con:value></con:property><con:property><con:name>Security Updates - Change Security Answers</con:name><con:value>X/B6RaE20jQKRLaDz1echPUEwhCQtOfLafOFct8ZlLQs7WtPkLyyam6JZDv8WAt2f91pmfvk29X4t5bJD8+i9Gre5vLy9ByNJ+xaFwUM6TYRRNgkio5PnwjMqeCa14eWm1x1nkh6px1JSsDcSF9xmoNSk0HjqLaLrJrcKy6niUhz2GLN7wDMkyZ7gzC/37uWwDnJPxcE6G0ZXkOxySjh9uiSISzKAsh4Hq6FrUF1a8FkMyUaeON4wQ/a/MdvJRAzI89GWnbWvj5JmPhMfaiaDGneWwAEmQ4Jk+atVCTxeqgNd9IST9QUxKQiQ6FYXCggivUtpsCvjFxgZH0UB8ii+efafcH5tdpS5NRS+w/HTe4YV+r0OZD7Cmczx+Ik+Tenoz0CTSM+ucn2yoohAMOvROaNBb8HxO/4dJeKlCGKx9WwiDJ5+yLV2BVvxq4ufIjhaZJOh7WtDeioUTrBJcyFI2MRTxQBwLRh9Y537FrjHik4+c8PLJe7/24zsoOUKP9laT/CN1AqZFdUIF72H7OSLtgy2ki1blCHAlkPXavw2UjembSUJ01GxnH8tvNu3La5wK3e1mapbE998jum6vbTVNy165KNqphzTub6Q9YeTuNmp/mD+5tkiX4NrY8BbZvLLA7ZiTiV5H1DmP+pa9dPda8YR2jNLeOBHBhl8hUKI671jhz7poCoPi4iOqYV7/bjNOVhokRxIA7byLEbOqGyW08pJM1gFVb2RxBd4jOF6ZQmZ+LuOEA9ZeY6EhatXY+alWalkUauVUPq9spTUaTTAYERYfaCO/fQ1QyF2rdoTmHrDFbtKpUZHACoXvxBgZLW44GSTC+K5+2tFljM37DSG1jXsiQAmjqpPki9g2/45Tk8rE6+/br/yzsvzUm5GvC7+znBjUHd8tN97GhQ8ORlkFg6QzLYelCVX3UCr6Gwyof2qsoZUqN+TcC4xjxs6Au4BzCQj9rHgWI/N7VLyrym1f6zERxYej3zy90kOMj5j94ZuKVXfNF9dI/R1ct0rufPmLUbic3DPRBb/o7wrn/N5iaquKa7zR39GGNqpkpGamACV+/E0P4CzQMMC9F7mld1gJ2srtiooZYnGP3zq9Dh9yVb4rmy2R14ASDrCs2a6iC4SDKvjpnF9vUN0mCn3D87J5WoaItvtzdkAPcfGM6+xOxZYR0tF6EaBIWC9X0n7n6/BRMe1OiAs4KxZa935ekYhFDHlOl7H7Mjl+JRL/ZanPngJiD95HJFbfqZMdNMkwQnJovMS3wAAkT/nhiaX7xfeE1tk//qZNZVs4WdH4v3hk9ReQbL7btm7+bLrTPrJvZmzZYwPfKC9DvHdb8aWPF9BUKZbVMhJwa9os4LKbM6IOrEpqSqWVUGtUc0X1sxKy3wXFOKqOnBMwZfcinBD31fpkagLtlShagvf/oykAQiWAZjLxGQzxIwAOgwD+BegFXXXYkQojykp4QIiRBkvp5W8Sv+rsmgtehv8KmaThVAagczgXUnFugyZFVxnP2pJEbqtrRjgNAHEEWZVeIJCXCHld2ovnZVWbfCe/awIcsGIggC3rgz0QSD8BxM1kxOeE2BlQXRd0mpjNVowTTKN1VwstpglPNEkooSevZaIdl5JktX+6BAEQWxpedhwgw1Qgy27DlC58K62+p+U2woESk/WA5xpiOkDU/V7MFluJoFCOayUSriLne6+pNVrNGOAnfO8pOSfNgfF6KhbjkxsH9R</con:value></con:property><con:property><con:name>Secured Demographic Updates - Update Phone</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">qqNS6d+cDhYg3dL7YMk5RZVjUsCA498BcIvjZP1pRyEG4/5cX9vPaI4BhOeZ9RZzr5qv/Tes7dku+dkeRJCA3A0b+frxbstEo5CdD/F0W8GxaTesLVfiRGiRaretOIrq/VdgKhNcLT1M7IlcglR99t6JQOYPmzZ6mRPhSZlHBa3l3qn5CgSLtVr0iuPyQz/nXsOhcIb3GknKacmhEn2KJgp9sLCmlsmR9LWoYDV2fzKOqgao60J4Cr7gzsBGK4YCXLsAnJ2UAdumB6797Oa+c6hms5U/EFAWGowLC5Q8MqzhezVWLak8FJW/12K6JhFqPh/QZCtGK7k8md1Bcl8rrKHG31lH1xNsZI7Q4muOfl0IyCXWmZwAgZePo0H+CKbvaSxpbE/yg6UQjS5MURmf1qI20kGnfYdCpMpxTBJUnKVTG8P9RzzbGcC0CXQ1Y/Ed5S1Xg9s2sUWhGBGAK10nECwhHzvkeZll+rsrBGg2AawNS1SvPwJT6JbSNdtRNnYfIW/8+8aCYWMEjU0mGFxDCqyhKG6bGlTAaHd6SjEHddDHTeSByoHA3pDovERqCNXeV+o4L/mKH8moqWPG0Gvjwu0hxbJ05Q11AMbFA8PFyMPhO+7kQ8MFgXqJCqXTAbCrSFeZlLrUC/8Oi+xv6UIdF05FYJDWC1bJwRkKZXkujI8snEGFIgqL4o/MgSPYRyS9hHqwkNQSMJl/ik928or70V/bAT+CI3qXXxwnWVo91cZr0ZqTlgGD2LljJdrUsvqPdSXuioyQxaV3seiQyrJ+GuPMHvw2szCg8Rzav8XzHId8BaR2CGaVmPPj9I/yjO/+Y5LeYJsaBrd7CWkB1pUuzNq0/LWfdfUO21C3kOWYYvg22W3R2glzr9HFIbaQYLRzByu/ZWlRmOg2q0oVxGuQeCS7omi21StsTb/MwWYo1Zcm7FctzGj/IjYx7mttcFM+Pp95xyd+thTsWT/OFvVVDeKVmqiFvyIBPQcuYhaL4sfTwHtt90vcU8/g9zS3MzuvJpkDbKgXQlTADO7JrLIoJoGwHad8SagVW8k4pP+2KDAlew+8UHS96Wzrn3dPqc7/rJuRXeggF2CkwL/QfPCEFp7QwnVI8W2uDyUZ1rL7boJBBX4Y8aD1dVC0YDTk+0rYpfuYszigaVBx7wOE67K3fdQ0Iq6ahcC3+eF8jMzi2/QIVWNr3E3ijfxOPy0fEg8+5qNkwNphBQwofUqtaO2U4MHW+agGItoicKvIFCTlV+YLEm23rwdGwkgIupam1Xi9l3JM++4HlX1xX1ImViRu4eH+Mjd77Ei3VijOaPopfhGc0KzQGwjkhSLh5XcD/B0WUayoPBv3FgstO0aNDhXy7ATgPcxsE8y1PqwW5Rj8ipMR2DltXXXe7hwpbiIqOuWo59bn5oHIUz+zy4wSWEaAUDBCopr/N1HxeGTqRoHbHNyz709RdWFAXEF7fq6r2zdyVP615OnoSy/3LvqGKIZzu1b4tfH01AirntlX8mefigRQoYtz1+t4c1tKpM8Q9k0iPPFFwr5nn5G321RoS6LrlfDfYwGhjak93Xxo43W+XFD21vzygX9Ndbx4WQbmEH7SPvkUte+nHKzIFLdKHdXZhrDdC3Lrhnz4LIpq+8UjaVJQb9hFkMOzea66MzGVrVuzUvN/3E5AL0TQGFLyTMDUL2/tnN+fPojGrlqYnvERI+LuYanlAq9MmjbYuEkMRzbYirSBvogNwWY35d6dB2hojdLcD5mZI6VNQv7fdug4AS0ffOkJ/xIguTw3OeLyaSTi/b21RijvhfT4/pDUjQ0EI2gT+ooABWnHTNF+CfHg1ww=</con:value></con:property><con:property><con:name>Expired Anonymous - Anonymous Services</con:name><con:value>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</con:value></con:property><con:property><con:name>Expired Read - Main Screen</con:name><con:value>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</con:value></con:property><con:property><con:name>Expired Demographic Updates - Update Profile</con:name><con:value>AnT8A+FqYexP8kVT0cuE017Pox3RGGWoKmqAXVPJr9m5ASWXyilIaG3dmu2xWwMyrJ6WdQERAhGug0kAiMdYmJLYGpzJwZDdkdrRLPjKRag7e9DsMncTLymd8zhIbmwgCAvHwZYF8dw55272PxQN0tLmlEFrNtEQmrQbsoIsrFVllgeIeaoOoOlhSmxLsXe6pXp3RDCv0NU3+da+PujAqI40U2XWJexZ/KwHjNdikClw40bCk25Tf0hWtw3U4tICIdJ2uiVrxt3jzcfW33TZEgj/xjDN4FN4GUyFOOgPFeM3dEhMw1fBTJnXSEeiY7tsGjB4Mqq6BmpSLSNVEQOuetrjuCp7Fq1uXS2yzofTIZCdq/xRm0gXuPNk0N6u6XIyQWpkQ9lak8/n5rQKVJtkOkwzok/pYFnWQokY32SM6tm2HkZHF/M1els7aRQ7WrK3B7obWKg2EKNwK+pt/9BA6KH++V8amcRxNKhX1vLJRGjaYPTvNJPtPMoveqPYKPeNs24xm1/sgY1S4V22dRT3Z/tCXNiNZ87n/hLn6dpX4MZ4coDJi89o01ULLTNHR6cIDxsFVWR2KhOgxKPOdrhNVDN/goxyqpKVhomX/VIv3ycicOjH+95tbuDF0SGHnNq6nuPE0G1O7Qrzf7heBoEVzXlVOENvuKXlVrStCBSX9eir5pw2tR8du+ZsbV2xm+ZcFbQC04p+2PrWLd96j0T6wIYzu21AVPKGdArYbuHQ1+wzVMUIMvf/IvZmccJKczfpf7Ib5n/l+yhzPS+P6b0Yza+Bp45MvfwfPMchy0t6xaejRwsT1sMUXthnJs62oKIqpGZQgntcWHKAAx35GPfuyNO5QbjFrufQmGObMVenQThk5CtYgMRDIS3/WPr8MsiWtBLQjdf+8R2/BluRErmD0QQwPadj/GPINVRhZ7B41ri7JrA0q9dmJRZPD8qVshTDkx/4rkkn5bo63fOxo5+xBAzzATFgvDsaJChdKd20/vbAveMI5OCcoeQAzd6pzbwG0M8YWB4jExCEXmSX9iKcU1cZct4Ztiypsm9O6JiFPUTmU4cWO1HXaEhHcdtYjYoFc8H2CQn3ZCNaSbSWxgq5ucAf4x5uVupDlAaAjp6ZWXe9QjRHAkrZN1nlVfxkWGg58KRhS/NTS7gDip56+QoHDFcfg4rXIc3Tzhp7HB0pnbDiPPqdXqJLuZiL34yPTSEzWASNdoGYOpsYqibC9NP+bVun6W4QIxLs/4F6VILXfF+W253QxOMc8d9TIeBcABP/79JsKqZ+ydWlG7KuBJvVCDgBV0RpO9CwUs9Cn4c6Ed2EdF7FciGnAaRp0HFA+hgncplbLp63hS6BLOllp49JR0KovcTKGX1BcZ6/t9fesDHOVQOM3bSb4j9Jnr4H9Zcu3wryDdu9WFIo2C1aQCHNfyetNi5Ut9krARXElKfa7xaAd3qbb5QGdrVytPs2N8Vmbm3kwt7l5V/4utPUs8maqSjRoSdJvgmTwL+G5Y7mMXWr4pe47+o5L525gs5Kdid9mKtGEwlITnCTliXLMl0gbwXwZR58/9tokc0cxkWbIwt+zsZhKuDlSMxfvC/FZvsCaBP6igAFacdM0X4J8eDXDA==</con:value></con:property><con:property><con:name>Expired Security Updates - Change Password</con:name><con:value>hWplCyGRa2eKUuD9r6uZjOKUmxYFn6SQA/vl4MlYaYyde+3IWdw1Lae9hZPUFlbk+LNyF8uJXVjfdvma6XYYO0J1sbW/u4l2HWXMVi6n8MeCc+HOefWsCgCmdyXKo732Iuf7+4VMEl45lO/7d69J9ZsyuIOQmvjyDmb8qgu68aN4lOlX4ct492rSSewmazWjVdgnALFM6orYYtiOiMzG2qYWAapDK0ycIH5ZUJOx/Mdc8CYIa6SmEKT1M6BiQNd6d8EL61sidGrkTqzSKuO3tNlRWAwY8biKNg+gCPs0/miNfIABx7iZH47HcfuSli9PnL/9CnKpvOlBWoIDN2Vs64Z4UYq8sEmpTc51HJeHdhAPAHpjTPYslWOui7+rw4BX4j9pfAFZo791/WiptJYgZukfFO0GgfCHBs+hNXX69i/rlWZSHYRek/NhTs4ogD/o+umf8HXAuPdy6DoK8OtNZPcwGygh7SonnIjiw38egxsezNRyjMN6qjEDRdElm7DKEA1nq/qB4ULz+2JIzt3hiGtXXofBHSDE9sqPpAWWTaIA0gAinSKcql4nR8gOo/MzKQsuf9hDm2fvwmPfkE4UA9bvEjpvOfJDg61nTOxtbDF6v252LfEuAHn9i+wm6XWM0GNcT6EJQ/apQbqLU+RfW5EfUMhoIrdhLWYvkJTc6724OL/5TqxjbjjKhhf9mnsk00iL88vomt7De1rIcifvH2XBSmf78JkJIzFqtHJI7ARsFi7jnrsmhHtHgy2wyJe2deScG39x7w3S2dC9rup7oTowjGzgLHcCWX9exm4qIORcAhLCiDMELxGRi3ytMkoiSX41jA2+lhtzZs+nP9LBZw1ciatSSFfqqDU6TWO/jWPIcRCxpj/efN0WYwUXHNgPoPZy9ZnMYa6j5Gc67OQF+iCN7J4tNe+AEUtgasa/PuPU+x5hbKKtsx2IRZ3iJ15xt6YxxAsq4vdK5P+gdXixbFpW09wYdvulCHWoEDDb93AIB13W7Ju00lsgX1JkLAo6m1en7ZuBGVR0hTy64Q6/Gr7ZR1/0RdaVANSTaDfBKs6O7OqC7PYY2E1/q7mGC1miRFUjugoltljrMTv4reASck4qujEJNNTA0W7IumwZQpag1HZDjNMWGsX9qhfMFHApiocseFkw9lc4hGtusaUr0BJ7kOv6920HF3Hfwnlwq0oYgEos1tEl5NzMPhObsVMfUDi/xBSXxOKt21Q4iPvlgUQWWcv2tjHAY4E9Q+9wm7zC167EQ7P8bQh41czNx9Z7hFlKQgaGuogscIw4FsdQ4U4XeYhcUDe+NObCXCtpdQE61kuKdcTIRRp61zjeHe/+yVzStTs/LZhiMBMXXaJLfr/dvtwpSpN5SOIAn21KAmybp69nIpeSkXCYb2BhdwUPkiUHWYQfN6DCQEYGQwaWl4k1S91qKjVKN7vOoCaSoy4GNR2/9yiw0jtFjfFXjYEhikJ8oeKFUzkGNc1+eDHTr7ESwKDLbwTSRT2AugiyLWW2sZ9TzKlf/uq8vgAp5yQol2BszGD94r3Xs43vf5DJXgG2pLYNz6QKu1lSlSMnPKZZvYhyiBW4/mzXgePqs4TN5kXH68BH/CNWB1NwuxZUbkBzC7LiIcQ4ALWr1/E/0v7Mr/Ut1qoJne8eMwIa2/s77tqIYYV2KvjAAR7Tc9MF3A==</con:value></con:property><con:property><con:name>Expired Security Updates - Change Security Answers</con:name><con:value>qqNS6d+cDhYg3dL7YMk5RXbCz5SeHzxPFYJVE2lxwm/uCERjlE9GJT56Y0hX73mEDHc1S4drJoQLLrEPG4oRnqpyxRAuFOcQKMB6RlgWJiYBqs6O6deiuqPuOZ+Bd2r+bh+7ZMHfTT0/9M9MVsZtERj5zrZAEN4tYGdUZ64yAeTp+ETqMaXVfAcRPLUurZz3AMBydJd3uAy+QyiszKSFSOy3iOtqUUBGYhzj5g4Cd7sZP5nIWr5t6g9rhPGP1Cs97rUdF+BNvr/pxt4P5gyIWhUJM3Ax0i6Pa6utz33Fd/Vn1X2Db0WjndErlpBe+aqaGSasbuEgF9HUsMGxEY+nJQ1SZkhQt3DTFPbY5IeoZN/odxBKfI1nxH2JqKKd/gO7ppxmHNvxjXHtQr/TrvcoCq1geCofClqORGZ8ymVBpBV5WE6p3duqS1Fbob6oyjUq2ZU8X0SskBIs/2AMIpr9vqvAWZjC5CPcnpTMiblnBEm5SbtKpgFWLnVsrdfxxYzizgBavBmAEt6tybkRebcBd3qgAC8BnjKT6ppTzvMt+bqaCGPmzjvG92xubma1xPV7o/dPiJa98YSf9UYYrqFKn0GfhuTgKp8byfrqQitVmdXwLeU+1uK1fNodXsgSeZICmbHGyf+Spq20U7zzmmi/zzPWTPgFUEYlVonSEJvWsRN5j5nWNBXA0y/G3pWuDoua02AYp1lzHuI1N1f07USaYw+SC42Hpdv25/e3N84oh4jIe6ceXVcCMRsdOqwpor3lMLSF9hmxTx6uYOtuohLDPt4NQkP9lC7bQ74a5sFR+Kw0UT/p18klvoeWVsNVtqohT4kbl/ushVqcDWljfN2d6fEyo21KsnDqPGphiFOEiyWdb7E5uqC/MFtI8PhJ97zYGI5KFn0qacZlX1v+hGgNnAu+YLk6KMUGWmtLhLoLxptiVoEEHn4CiGAi2RhNw4z1XRT1YwWbp+6jCLOaMW+SJNWfPZb8glf78cilaoKeZvWrnfKkfUJMFRebRwCop5T8cLrZfQK0fGbB0RrdsABnG5IcQkzSsmeFUjbW+3GZl3jef5LQjx8JqAzeqZaKkG7GZttHJiu1bs5wsRSSvNo1AGAwqfkKf2p/PCNWtr+abdG6Gns1jWmyuVyPOjv5ZuE8vgMD+4zmK2IabTAj69wMiZQZ5L/Fl4Fbo0fwbEZRYjNggLHt+qvkNOLUhAwzv8QP+I+ITbD9nXaE3JdcWsJ6b9NgbM3VufUQ6dGwgKqzbaQko2INJWFN1ND6RhOIVxT1y6MjRQa8+vFXk3EtTpN7LVmV6fIeeRzXXb871YfbVT/m8jJfBPp+gSB+Yeok9dmTRH4LBbfqsCy343Btg6dYCcF6Io/l0ZeGQK/7XTsQHiykJNIu6fgjv1LsIyFjXUwsACrN9mhihFHlDtFC/eTL/XCxq5y/vT8fCBTZatYKQY2/9O8LO6BZi32VpdQYmzwwMrKm4ViIKQkNIKlPQsRi3UHJ+1wSAfkWCdImn8QopHq4U5izSOWLM7Jq62/2XzhmRUK/gH05+iPN3A3R2zOvoF5JfaCcC00NHD35P5SS9D7PVj1K0uacYSGjoRVQVYN6AclxEGLGme/TAnM/+0eOOc7H+P5Oql952zugpv0uHYdp7d2mbzq4jZZbftXXKzQjpFITyu5ZQ+uTjgoSfY4Dt4fmf2LUrYPgMzfbHRhMgEI=</con:value></con:property><con:property><con:name>Expired Secured Demographic Updates - Update Phone</con:name><con:value>hWplCyGRa2eKUuD9r6uZjI7IYZ2Z02v7TaGAAgSoU28PT/Snk1gv74V1A+tEgVQNLVDsVA/oFH1hJMGL5vDTjmUZnZmZf+IZ7sHUWYn7SjJU2MGj6O9732vppn3gaEfKvG07x0P/7JhES72TRWKwyTouqjfqpEws7qupatrQbUgec+gauIz0LzlX5koD7HJsr667qbLCNQJCMthazDVQk01B0tXS9+dA7Q64nDXxYMFIUXCloUaCCZCoPqRaK+E/W7eqdzNpKFiHvaowOJRaMxVl6SmXYnPi0UNvJPcnY8KLamo/V9mlZ04GQ0GfUTdg8dpSX9SB+eZHeuxISu98IsgZzAske8DLU/z8ljrfmoj9VlIuVNogreaNLTjly27JdGQsAGlCRPuzxoqc1KTmS9L9rYkAj6BDkOAv6ZsAx7aADSQ0QnIrvOMjdbsZT6lyaz78FHb5g9F2on2DhwMc7ytTQCQiEX5S0WU5B7Z0zn8hUB7ie6uCtMfHxvEvFTmAo7KT/9YgTo+euUD+lnya2g1YM5Xy9PbXmA3hBK9+xDoN7virQR0lSmWJvhk5jRWMRP0909HpEeeGDd5XeBNeAb3ApWfcQJgDVyFXyHq15tUwhF2KuhRjCrjRF2SaOEnnimS5OH2e95NS/DPN6XJ7HrVbyDwbffZ+BxMZ06F2dFL/MigajcojTowhvOANJckUOwUqJEEJvHmXdRNabvshd1kLaCwSFe/Pt62EejXhMl3apJVYndKjHRuO2zWQpSoBs5EmArzq3mPpFh3XKs4AyjwphnJhuvqAxG2hHdz/Js9ZhQmr/OjpMKbgqOdFWDB4sch2/VcWYuUwhUR3hJqWUCPvNQ8j6E4WFXzsYSC7VsR5PSJ3Wn4UrgmzL6L22pSVgfw7q/dN5p52nVeycgEZx0ZnyDmQgicKSPhTDENWTr4/G7jAxKGoVxgkkc3mu/b8p7S4fyfbMkKJ/r6kOc4p5an+4glhpRmphlBj23C+HOBUSfWQGAURocOiDIDaDrWvgDnz+fkoTUjHQtq/pEp1sME52Ws5x20b645Jg3wDegXwwYA/lhw2UmD2A879Yh32+vN5Bdrx1iN6x8oMlGXBCcBZ5ogdfhWm/94gChVuCeRLK4o6Msh/DUQ6sXLvevrUpHcsSTkdzghJBk72IX9D38FmcGjRd8vC5j6FOUIo0d/fp2uwYDgTWIlN0YhbF+4BmxqA8GyeUz1kBohQ9cTKeDR92jGaIrQ8cew7Oonrqu8bh+PZmemzQGQ93iYkptfOFDxNSQf37sXomI/yR8x91RwZdQlLp8qTdXkDAtsmp5YV81iDj23NVsnyK0r9mdcEop5AszYumBx8fPlGEhwSgMeC7fvNRb2v0v1iQyzTV3a/5hI8DLQcKX3ME7EggbvP66c2k4SybIu5ff+mTqdkSpfuDd42mSLxOF+bs7A+ESBGsbI8fJEYtzeCzMYQ97NYtW/9m1/kNOqZbwNv0CdsCDPLKQTcn7J9n21Om1WpesKdwEKes4+zl4qiUJb9icM1rOGgU7DS8WplhdiRnlkM6nkDno2HNaXkmyHlv3qUjMkR/OODHwft2PnxNVN0EDFrgcL6vfXY8qtmMHc1OK015Oz0CzFR1T/Cx8OnLTMpUqlmZoaO4Je+0JsSM0FjZ+O3CVKXKEPGkowfzf+RR+JAD4GUecwluGX4noFOcIyQaqh/x2PUMwI4uvPN+ah4gavC4dDabEQd6AoOi4CN+7ehxZkhfyn4CO+S6cnp0DUqauskJAl6Vlu3QIE+T8VkVKGA6GPNBL5Czv2ftaB03X+cpg==</con:value></con:property><con:property><con:name>expected_rc</con:name><con:value>403</con:value></con:property><con:property><con:name>phone_number</con:name><con:value>+971559307088</con:value></con:property><con:property><con:name>Anonymous Updates - Customer Onboarding</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">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</con:value></con:property><con:property><con:name>Expired Anonymous Updates - Customer Onboarding</con:name><con:value>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</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>