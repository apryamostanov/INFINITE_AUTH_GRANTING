<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7a797db4-9d5d-436f-9e27-919d62fcad7f" activeEnvironment="Default" name="Infinite Auth" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite id="beed602b-191a-4d5d-9443-0c1af9470544" name="Infinite Auth"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4c69d69e-616a-4b39-892a-9af793c3467d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Infinite Auth" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Init Data" id="70edc71c-71e4-43c6-b2a4-7ecc4f5c4b1f"><con:settings/><con:config><script>//context.username = "Daniyal@wirecard.com"
//context.password = "Test@678"
//context.username = "mobileapp6@wirecard.com"
//context.password = "Wdp@12345"
//context.fiid = 1150
//context.fiid = 1150
context.fiid=1340
context.username="daniyalmobile@wirecard.com"
context.password="Wdp@01234"
context.DOB = "1991-01-01T00:00:00"</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous" id="ceca378a-b04b-44d9-b090-c9a2b90461d6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="740682bb-f197-42b3-a012-3b1ad1a60a1b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
context.anonymous_token = l_slurped_json[0].token
assert l_slurped_json[0].token !=""</script></con:config></con:testStep><con:testStep type="httprequest" name="Read" id="4b750057-4ded-402f-83ed-8cb3b06bf5c4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Read" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.anonymous_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="a5881d30-881f-4e8d-9c65-871f5d1213d2"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
if (l_slurped_json[0].authorization_name=="Refresh") {
	context.refresh_token = l_slurped_json[0].token
	context.read_token = l_slurped_json[1].token
} else {
	context.refresh_token = l_slurped_json[1].token
	context.read_token = l_slurped_json[0].token
}
context.proxy_number = l_slurped_json[0].scope.data_scope.proxy_number</script></con:config></con:testStep><con:testStep type="httprequest" name="Read Refresh" id="a2ffcf0a-119f-4962-b58a-2c280c211acb"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Read Refresh" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of Refresh Data",
      "authentications": [
        {
          "authentication_name": "Refresh_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "old_access_token": "${=context.read_token}"
          },
          "private_data": {
            "refresh_token": "${=context.refresh_token}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.anonymous_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Refresh Response" id="fa90b706-cfee-49c8-a52a-4f055a0ab7d5"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
if (l_slurped_json[0].authorization_name=="Refresh") {
	context.refresh_token = l_slurped_json[0].token
	context.read_token = l_slurped_json[1].token
} else {
	context.refresh_token = l_slurped_json[1].token
	context.read_token = l_slurped_json[0].token
}
assert context.refresh_token != ""
assert context.read_token != ""</script></con:config></con:testStep><con:testStep type="groovy" name="Prepare Provisioned User Data Usage" id="91ccae96-0552-4f32-af01-55aece405cc2"><con:settings/><con:config><script>package authentication_modules

import sun.misc.BASE64Decoder
import sun.misc.BASE64Encoder

import java.security.Signature;
import java.security.GeneralSecurityException
import java.security.KeyFactory
import java.security.KeyPair
import java.security.KeyPairGenerator
import java.security.PrivateKey
import java.security.PublicKey
import java.security.spec.PKCS8EncodedKeySpec
import java.security.spec.X509EncodedKeySpec
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;

import javax.crypto.Cipher;


public static PrivateKey loadPrivateKey(String key64) throws GeneralSecurityException {
    byte[] clear = new BASE64Decoder().decodeBuffer(key64);
    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(clear);
    KeyFactory fact = KeyFactory.getInstance("RSA");
    PrivateKey priv = fact.generatePrivate(keySpec);
    Arrays.fill(clear, (byte) 0);
    return priv;
}


public static PublicKey loadPublicKey(String stored) throws GeneralSecurityException {
    byte[] data = new BASE64Decoder().decodeBuffer(stored);
    X509EncodedKeySpec spec = new X509EncodedKeySpec(data);
    KeyFactory fact = KeyFactory.getInstance("RSA");
    return fact.generatePublic(spec);
}

public static String savePrivateKey(PrivateKey priv) throws GeneralSecurityException {
    KeyFactory fact = KeyFactory.getInstance("RSA");
    PKCS8EncodedKeySpec spec = fact.getKeySpec(priv,
            PKCS8EncodedKeySpec.class);
    byte[] packed = spec.getEncoded();
    String key64 = new BASE64Encoder().encode(packed);

    Arrays.fill(packed, (byte) 0);
    return key64;
}


public static String savePublicKey(PublicKey publ) throws GeneralSecurityException {
    KeyFactory fact = KeyFactory.getInstance("RSA");
    X509EncodedKeySpec spec = fact.getKeySpec(publ,
            X509EncodedKeySpec.class);
    return new BASE64Encoder().encode(spec.getEncoded());
}


public static void main(String[] args) throws Exception {
    KeyPairGenerator gen = KeyPairGenerator.getInstance("RSA");
    KeyPair pair = gen.generateKeyPair();

    String pubKey = savePublicKey(pair.getPublic());
    PublicKey pubSaved = loadPublicKey(pubKey);
    System.out.println(pair.getPublic()+"\n"+pubSaved);

    String privKey = savePrivateKey(pair.getPrivate());
    PrivateKey privSaved = loadPrivateKey(privKey);
    System.out.println(pair.getPrivate()+"\n"+privSaved);
}

public static KeyPair buildKeyPair() throws NoSuchAlgorithmException {
    final int keySize = 2048;
    KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
    keyPairGenerator.initialize(keySize);
    return keyPairGenerator.genKeyPair();
}

public static byte[] encrypt(PrivateKey privateKey, String message) throws Exception {
    Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
    cipher.init(Cipher.ENCRYPT_MODE, privateKey);

    return cipher.doFinal(message.getBytes());
}

public static byte[] sign(PrivateKey privateKey, String message) throws Exception {
    Signature signature = Signature.getInstance("SHA512withRSA");
    signature.initSign(privateKey);
    signature.update(message.getBytes("US-ASCII"))
    return signature.sign()
}

public static byte[] decrypt(PublicKey publicKey, byte [] encrypted) throws Exception {
    Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
    cipher.init(Cipher.DECRYPT_MODE, publicKey);

    return cipher.doFinal(encrypted);
}
public static Boolean verify(PublicKey publicKey, byte[] bytes, String data) throws Exception {
    Signature signature = Signature.getInstance("SHA512withRSA");
    signature.initVerify(publicKey);
    signature.update(data.getBytes("US-ASCII"))
    return signature.verify(bytes)
}
def l_key_pair = buildKeyPair()
def l_private_key = l_key_pair.getPrivate()
def l_public_key = l_key_pair.getPublic()
context.private_key = savePrivateKey(l_private_key).replaceAll("(?:\\r\\n|\\n\\r|\\n|\\r)", "")
context.public_key = savePublicKey(l_key_pair.getPublic()).replaceAll("(?:\\r\\n|\\n\\r|\\n|\\r)", "")
context.provisioning_unique_id = "MDWL"+new Date().format("yyMMddHHmmssSSS")
def bytes = sign(l_private_key, (context.proxy_number + context.provisioning_unique_id))
log.info(new String(bytes))
String l_signature = new BASE64Encoder().encode(bytes).replaceAll("(?:\\r\\n|\\n\\r|\\n|\\r)", "")
context.provisioned_data_signature = l_signature
log.info(context.provisioned_data_signature)
log.info(verify(l_public_key, new BASE64Decoder().decodeBuffer(l_signature), (context.proxy_number + context.provisioning_unique_id)))</script></con:config></con:testStep><con:testStep type="httprequest" name="Provisioned User Data Usage" id="6b5b6d62-d8f2-4e51-8fdb-e61140ab6a20"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Provisioned User Data Usage" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Provisioned User Data Usage",
    "identity": {
      "identity_name": "Owner of User Data and Provisioning Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "Provisioning_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "provisioning_public_key": "${=context.public_key}"
          },
          "private_data": null}
        }
      ]
    },
    "scope": {
      "scope_name": "Prerequisite Usage Only"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Provisioned User Data Usage Response" id="06372060-c748-4d9b-8b65-9ba4c082ea64"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != ""
context.provisioned_user_data_usage_authorization = l_slurped_json[0].token</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="9b981b6f-f694-4e09-862a-08fd20671523"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=context.read_token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#ResourceURL}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=context.proxy_number}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="c0512b4d-f039-42ae-9d6f-a1e31370b5d2"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
context.otp_id = l_slurped_json.SendOTPSMSResponse.SendOTPSMSResult.OTPUniqueId
assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="60c0dde6-eee1-4e91-aa2c-e4085292fcb0"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
context.otp = alert.prompt("Enter OTP","Enter OTP")</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates" id="05729bb2-e443-4c32-a18e-754d31c84ac2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Secured Demographic Updates" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "otp_id": "${=context.otp_id}",
            "phone_number": "+971559307088"
          },
          "private_data": {
          	"otp": "${=context.otp}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates Response" id="e2667957-b3a6-48a4-8246-e02d9ca70123"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != "" </script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Provisioned User Data" id="d7abeac2-b666-4fd5-a499-aa88fccb6278"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Secured Demographic Updates - Provisioned User Data" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and Provisioned User Data",
      "authentications": [
        {
          "authentication_name": "Provisioned_user_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "provisioned_data_unique_id": "${=context.provisioning_unique_id}",
            "provisioned_user_data_usage_authorization": "${=context.provisioned_user_data_usage_authorization}"
          },
          "private_data": {
            "provisioned_data_signature": "${=context.provisioned_data_signature}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "otp_id": "${=context.otp_id}",
            "phone_number": "+971559307088"
          },
          "private_data": {
          	"otp": "${=context.otp}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Provisioned User Data Response" id="1a477bd6-567f-4755-9013-40a1c46d0f5c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != "" </script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates" id="c49ba5cb-b1ab-4e9c-a577-dac1820c65b9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Security Updates" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}"
          },
          "private_data": {
          	"DOB": "${=context.DOB}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="967f8ba9-2256-4778-aa23-801fa6dd19f7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Init Data" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Init Data" id="1fd443e3-cb3e-4ba5-8fde-7ffc48f29061"><con:settings/><con:config><script>//context.username = "Daniyal@wirecard.com"
//context.password = "Test@678"
//context.username = "mobileapp6@wirecard.com"
//context.password = "Wdp@12345"
//context.fiid = 1150
//context.fiid = 1150
context.fiid=1340
class GlobalContext {
   def static global_context = [:]
}
class WorkingConfiguration {
	String fiid
	String granting_url
	String resource_url
	String expired_token
	String revoked_token
}
Object.mixin GlobalContext
WorkingConfiguration wdi_configuration = new WorkingConfiguration(fiid: 1340, granting_url: "https://wp1.wirecard.com/emea/middleware_security", resource_url: "https://wp1.wirecard.com/emea/middleware_validation"
, expired_token: "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"
, revoked_token: "")
WorkingConfiguration wdp_configuration = new WorkingConfiguration(fiid: 1340, granting_url: "http://localhost:8089", resource_url: "http://localhost:8089"
, expired_token: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlZXVS9iUUJEK0s5WSt0U3BFUGppQzN5d3VSVzFJd0xRdkZiSVdleEsyMkx2dUhpRXU0cjkzTm5aTTRsb3F0QkJGeXU0YzM4ek9UT1o3Sk5Ub095SFpMNnFaNEFtbkJaQ1FSRnp3cWhCR2taMk9BY3RJNkEzZHdIZTlJRGowQTgvemR3akxnR3VtS3hJK3R1YzExT1NCZzNURXpJblNGSlFTMGptaG1qYTQxalJkQVNzU2ZuL3N5TnBzR3M4azYvT3NwUmk1TkxjNVM5c3JYWHMxS0YvR0Y4N1k1Sm81eDBaSzRHbmxYQ0RBQWo1Y1JoOHRhc21TZ3Y1QWh3VkloY0RvNHcrV2d5WHFWQWtwbTIyQWo4YW5JOVFmSGJuNEdSNzRlNGZlY0g4UExRdkt6WXltMmtpUU52V3l6TUdLUlFhNXZYdjd3d1B5WktPVkczSGNnWWRmdE1zcG54czZ0L2tDbjZPZ3pLbWVDVm1nZ0UxaUZKeU5SaWQ0OFlJOTErS1VraTJvaGlZeGJ2SWNoVXBUamIwTFNXeFdSWmlabkR6ZFdFVXFTckQ1cnc1L2ROdUpRUzRZZXRnbjE4ZWtjY0htRklDRGdPMG41NmZYR3dZTnlEbm9HRklKK2pOVXFEWFNWbFBkb3dadk5ydGtlNUR1b2JJWlhrVDRpcjlobndrNUYvb3JTa2ZaTjVxemJBVXhwUkxWR290NHl1OG9UeUY3bjdoVHF0U0RrSDJSM3lEd2RCTDNSSTZCWjVQcmFUeU9Yd0g5Z2hmWkdsN0JuQ2t0VjY3dlZNMytSeDFUbVVXcHRnT0x2dkZybnZheUFKdHo4dGF6MEZRSy9yTXIvWWwzMi9KT2xWbFA4bHZYWnJ1eFBUTVZ4Lzg0VkRlTlFidTQycTF1aWFoaGh0Q0plT1dzTlgxYmRNTnJPNWJGMkx6WFVFZ1ZIU2NwakdZSUZaS3IrbFFiUnRQbzJMbU1XbTdyZURWWms5aitQa00vNFNiT1ROM3BSRUVxZUtaV3JPcmFmUTRTZmhxbUdDNzFUcXAydSs4UTNMRXQ3MWx3Wk9MaHJodnMrdTYxZXhRR2g2RWZERHd2K0dTWkNmT0JaY2xrMVdQc3VhSGJOZDd1ZzY3S1ovcTFqVk5ZMHlSbkJkUHJaR2FHcDlhVzVpMDFkZ2lxajR1UUQ3T0hQQUVwTFQyYjR0WnlaUTI0b2RDd2JPTm9jUTk4OVdmNkRTWWhseU95Q0FBQSJ9.qWQARZyVgO-UJhLOgvxciSc2C3Dk7-rVIQd-OU-v9UBWVdrnA887LROzVFAbunsGn58NBSabiS4nEpTdn_9xcQ"
, revoked_token: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlYyMDdiUUJEOUZXdWZXaFVpSnpFUS9HWnhVOVNHQkV6N1VpRnJzU2RoaTczcjdpWEVJUDY5czdGakhOZFNvU0pScE96TzVjenN6R1RPTTZGRzN3dkpucWhtZ2tlY1prQjhFbkRCaTB3WVJmWmFCaXdoZm4va0RnZHVmemc4OHJ5RHdXaVBzQVM0WnJvZy9uTjkza0JOSHpsSVI4eWRJSTVCS1NHZFU2cHBoV3RONHpXd0l2N1A1NWFzenFieWpKSXV6MUtLa1hOemw3SzR2dEtOVjRYeWJYTHBURXlxbVhOaXBBUWVGODRsQWl6aDAxWHcyYUxtTE1yb0wzUllnbFFJakQ2RDNxcTNRcDNLSVdiekJ2aDRjalpHL2ZHeGk1L1I0Y0E3Nm84T1BMVE1LRGR6R21zalFkclU4endGS3hZSnBQYmVQeGdka2hjYkxXL0VjWHQ5L0tKZFN2bkMwSVhORi9nQ0JYbEs5VnpJREFWc0dxTGdmRHcreFV0LzZMa1dKNWRzU1RWVWlYR1RwaWhVbW1yc25VOUNzeTdDM0tUazVkWXFZcEdEelg5OStLdmJUZ2h5eWRERFByazhScFVMTmljREhBUnNQN2s0dTJrWVZDQVhvRU9JSmVpdlVLRFdTRnROOVlBYXZObnNvdTFCZW9EQ1puZ1o0Q3YraFgwdTVFTG83eWdkSno5b3lwSTF4SXhLVkdzczRobS9wenlHWkRkeFoxU3BSeUc3SW45QTROazA3SWdjQWsrbU43TndFcjREK2kzQUoxUW1RYXp0MEtCbitCNzRONVhNTnVrYUZreHB1WGJlVWJ1Nkg5ZWNrNDkrV1BVUTJFbFgybFhiVVdVMmsvelJ0ZGtlcW82V2grRi85dnkyTXFnWFY3M1ZMUkZWek9BN0FTK2NqYVpyaXphOHRtTlpqT2E5aEVLcWFEbEpZVFJES0o5Y2w2ZlNNSmdGSjg1VlVITmJ5NnZLbW9UMjl4WDZCVGR4WXNwT1J3cGl3Uk8xWmxYWDduT1E4TnN3eFhDcHQxSzEyMzJQNEk2dGVjK0NJeE9QOXQzaC9zQzljWS85NFpIdmVUMWs1UytXbVRBZldPVk1GaDNHZmRkMzI4YmJmZEJGL2txL3RuRUtheHFsTEdONms4emM4TmphMHJTbXhoWkJkWEVSOG1IeW1FWWdwYVZuazkxWnJpd0JHd29OcXpxT0ZnL0ExMyttUC83N0dRMnlDQUFBIn0.KK5UUNMQ-6B0a_EC-LClfeuLfe2lSy01RKKtMOim92Vg1lpfrmiv9Nq2EWJ1CWVTNlHk4-LBlmOADdMIJ_ynpw")
//def current_config = wdi_configuration
def current_config = wdp_configuration
testRunner.testCase.testSuite.project.setPropertyValue("fiid", current_config.fiid)
testRunner.testCase.testSuite.project.setPropertyValue("granting_url", current_config.granting_url)
testRunner.testCase.testSuite.project.setPropertyValue("resource_url", current_config.resource_url)
testRunner.testCase.testSuite.project.setPropertyValue("expired_token", current_config.expired_token)
testRunner.testCase.testSuite.project.setPropertyValue("revoked_token", current_config.revoked_token)
testRunner.testCase.testSuite.project.setPropertyValue("username", "daniyalmobile@wirecard.com")
testRunner.testCase.testSuite.project.setPropertyValue("password", "Wdp@01234")
testRunner.testCase.testSuite.project.setPropertyValue("DOB", "1991-01-01T00:00:00")
context.username="daniyalmobile@wirecard.com"
context.password="Wdp@01234"
context.DOB = "1991-01-01T00:00:00"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d935b7a9-3ec6-4edb-a3b2-4ef57d9d9908" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Misc" searchProperties="true" disabled="true"><con:settings/><con:testStep type="httprequest" name="Validations" id="f094d8fc-255c-4ec4-90ed-e67c88934ac7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Validations" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNMVcyMjdhUUJEOUZXdWZXcFVnRzV5VStNM0tUYWdsa0RqdFN4UlpHM3NnMjlpNzdsNElUcFIvN3l3MmpxSDBncXFtUlVqc3pNNmNQVE96K1BpSlVLUHZoR1NQVkRQQlkwNXpJQUVKdWVCbExvd2luWTBBbHBMQUc3aDl6L2Y4WHQvdmU1N2JJU3dGcnBrdVNmRFVyRmRRNHdjTzBoRlRKMHdTVUVwSTU1aHFXdVBhMEdRSnJFaHcvYlRoYTlqVW1YRzZMYlB5NHNtRnVjMVkwcGgwbFZXamZCeWRPeU9UYWVZY0dTbUJKNlZ6amdCemVITVJ2cldvQll0eitnVVQ1aUFWQW1OT3I3dm9MbkJQRlpDd2FRdDhPRG9aNHY3aG9ZdWZ3VUhQZis4TjluMk16Q2szVTVwb0kwRmE2a1dSZ1hXTEZESnJlL3VEQS9Kc1R5dGE1N2hkRDc4WWwxRStNM1JtK1FLZm9hUElxSjRLbWFPRGpTTjBuQTZIeDJoWWpFS3lPZFZRaytJbXk5Q3BOTlU0dDRCRVp0bUFxY25JODQzZFNFUUJsdnR5OGQya25RamtuR0dHTGJkYXhuVUtEaVlIdkFRNGVuSjJjdFVLcUVHT3FFekRSRnMyV005bm1yRjB1WnBRaVFFYVpCU2Q4RHZLRTBneDJVamJhSFZ2cStnUVN6NWV2MlAzVU5vQ3JpM3N1Y2x2UVhhY2lSU0xzakp1c1BaZk1mcUU5aVhNbU5MeVI1elUzNk0wR1VkYk9KMEtPUlBhTWh1K1ZodmFSLzRQTFlpQXArT3JTVFNLZGpqeGQ0QTM1LzJxL1oxUXBSNkUzTmJoZjNQSFZvUmVxUXQxM2ZDSGs5MktmUVk2Z2tTQy9nRGxMdVhzMnJqMVIxaTBTeFUvYWQxTm5kYzhleHRSc2pwYUMxdmdoTHgwVmp2YlJLQ1Z0VTdCWXJUdENncVZiaU5KQ3FNWlFnWGtzbHBWZ2VFa1BISXV3a2FhTjdKcTFpU3l2eS9RenlnbXFhbitaN0dDUlBCVUxWOEtYQ3RKSU9HcllZcWhMbTFRdFFMVklUakxScll0ZU0vMUJudHVmOC96cnp3MzZQVUR2OS8xdk1FN0s2eklCeFlGaytYMjRQM040UFh4NkxKNGVYdXc4MVRZMHpoak9kTXJNbFBERXh0THMwYlpXL3E2VFVwUnl0T0hMQVlwN1p2RmNzNHJzTmFHaGtWemhoYjN3SmVJM3dEKzF4NThiUWtBQUE9PSJ9.nZpETjGFVHth9e6clWanYwyIVIqpOVPV-JdNOvMH1N0AqxnO8hpeP6Ur3smUV9RpBEYd89nCRfyDIt9sX-s35Q" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/UserRegistration</con:endpoint><con:request>{

  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Authenticate" id="60e53d7e-347b-48c0-a2ed-b378fda1cc88" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="90cdf065-0f65-4788-9608-28d00d0709cb" name="Authenticate" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://10.10.99.190:8443/middleware_2_x_x/Rest/Authenticate</con:endpoint><con:request>{"Authenticate": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yyMMddHHmmssSSS")}",
  "CardUserId": "Daniyal@wirecard.com",
  "CurrentPassword": "Test@567",
  "InstitutionID": "1150",
  "UniqueIDFlag": "0"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Provisioned User Data Usage" id="2780a0c1-3ddb-48c4-9681-e35e9f7b0f9b" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Provisioned User Data Usage" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>  {
    "authorization_name": "Provisioned User Data Usage",
    "identity": {
      "identity_name": "Owner of User Data and Provisioning Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "Daniyal@wirecard.com"
          },
          "private_data": {
            "password": "Test@567"
          }}
        },
        {
          "authentication_name": "Provisioning_data", "authentication_data": {
          "public_data": {
            "proxy_number": "3051",
            "provisioning_public_key": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiYANswx+5B5eitynXwHdVRk8Ew9X1qRx
6jAtbaNcNYN615v5zD6OmDH/UubsdgeV+rfEIyQK0kOq009sC1Ujae01IyYt/qu1MB2L6b7ABCQH
y3KEEESM6V3fR+0AVZD9v3Nq5ekXmj8NvQtIBoCol+sRkvI0KsPDd39mDN/uCgAaCoXOgpgRjE20
eUH75wV0pDMBbScPRqCte6zrdwDJsQy77CmyTclSLQS7KHyWnuxzDD8Q0p5Fsgb8uAPObWtWeAPv
i7e6AaL9mjEL/2EL6yODCzSQW1YqROHJvCKGNjbX2IOwacfqq+dd/oEAC5Al3g3atfIE8Unb4Kg2
KF2NAQIDAQAB"
          },
          "private_data": null}
        }
      ]
    },
    "scope": {
      "scope_name": "Prerequisite Usage Only"
    },
    "prerequisite_authorization": {
    	 "token": "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"
    }
  }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="6e28cd6a-4d20-4cb9-9a68-29db170e70c6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://10.10.99.190:8443/whitelabelft2_middleware_2_x_x/Rest/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "111",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="ValidateOTPSMS" id="ee8b21de-152a-4cbc-a48b-4247603d708d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="ValidateOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://10.10.99.190:8443/whitelabelft2_middleware_2_x_x/Rest/ValidateOTPSMS</con:endpoint><con:request>{
  "ValidateOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "111",
      "OTP": "681562",
      "OTPUniqueId": 2101,
      "PhoneNumber": "+971559307088",
      "AccessorId": "4"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="ChangePassword" id="a574e582-ce2d-4162-bad3-11c396f5321b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="ChangePassword" postQueryString="false" mediaType="text/xml; charset=utf-8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="SOAPAction" value="ChangePassword" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://10.10.99.24/UAT/EMEA/CoreCardServices/CoreCardServices.svc/basic</con:endpoint><con:request><![CDATA[<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/">
  <s:Body>
    <ChangePassword xmlns="www.corecard.com">
      <requestData xmlns:header="http://schemas.datacontract.org/2004/07/CoreCardServices" xmlns:d4p1="http://schemas.datacontract.org/2004/07/CoreCardServices.DTO" xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
        <LoginUser xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">api_middleware</LoginUser>
        <UserPassword xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">Wirecard1@</UserPassword>
        <IPAddress xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">10.10.98.101</IPAddress>
        <header:UniqueIDFlag>0</header:UniqueIDFlag>
        <header:UniqueID>MDWL180222222651873</header:UniqueID>
        <Source xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">YND</Source>
        <APIVersion xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">1.2</APIVersion>
        <ApplicationVersion i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <CallerID i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <CalledID i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <SessionID i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <ANI i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <DNS i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <Language i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <RequestDate i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <d4p1:ProxyNumber>1789121880857</d4p1:ProxyNumber>
        <d4p1:CurrentPassword>352593</d4p1:CurrentPassword>
        <d4p1:NewPassword>Pwd@4819</d4p1:NewPassword>
        <d4p1:ConfirmPassword>Pwd@4819</d4p1:ConfirmPassword>
      </requestData>
    </ChangePassword>
  </s:Body>
</s:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f93d6f1b-56a3-4b4e-9938-1cd239e65301" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Anonymous - Anonymous Services - Any LMN" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="56882eff-f9f3-48b1-976f-2dbbb11edc02"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="1dc4d5e2-cc52-4ffb-92ec-5c1c90291e45"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services - Any White Labeled" id="b378286a-1f6c-4e04-be11-1d105267e728"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services - Any White Labeled" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="66fbc4e2-fafd-4380-84f7-0aaf5ec077e0"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token","Bearer " + l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="94d02d1a-4736-4ad2-968b-af5e1d6560d7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="0e183c5b-1b4e-48e9-b438-a619351f4e2d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="58a315f9-d16f-41d2-9d2e-fa5228b711e4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="307c1b0e-08c7-4cbc-baea-190e9af21cf3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="2614bb13-b577-49df-b697-052964380807"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="aefe8912-ef6f-40e6-9a7c-0f3a1c18e381"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="cfa9eed9-36c0-4caa-b31d-28e14b662ea8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="27ef8d2b-5a0b-4a2d-a1e2-b152bcdbcb34"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="a5a303af-d3fe-4d43-aa49-3b2ed63763bf"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SendOTPSMS - Minor Issue exists (PhoneNumber)" id="24c4fbf4-7385-4daa-a534-d3b3b8512f11"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f200eb06-a428-41d4-875a-9bb7a442107b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ValidateOTPSMS - Minor Issue exists (PhoneNumber)" id="748abe84-04a0-406c-a16e-b482cfe8ced7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>20ea13d4-2fb2-4c30-9272-a3f42f354c81</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="45692b54-7a67-447e-a7a7-73da04683839" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Missing JWT" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="3069babc-0fa8-409b-a57a-380ff7150881"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="7d765bc8-7f5a-4b31-9f88-f5125a1bc475"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="groovy" name="Nullify JWT" id="011785cf-b95b-46be-b478-9a221429003b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}

Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", null)</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="2ed78d44-496d-4abb-a2d7-9a1a61e4dbfc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="62031752-67f0-42a9-ad36-6ef2db12fa63"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="15c86049-ee38-4fde-a90e-b6dbd4fd2e43"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="5881c97f-cad1-4fc0-91f8-d8ad616e5eb3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="ab869c0e-20ba-41e5-9991-4adc4b4373de"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="55c236a5-7435-437c-9417-a2e9367b4757"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="5c35d7d5-cf40-4c14-bf31-440b482b50db"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="02c01792-5bac-4136-a265-57f984c872d4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="83be95ae-6e16-43f7-ad7f-96ae0ed349cb"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a23e3d20-13a2-4143-b505-877af5914223" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Invalid JWT" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="2d275bd4-d24f-4ee2-bbcc-0b49c0bfb34c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="78153e75-e8e3-4aa9-b1c4-d0f3057a6d32"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="18e5d423-7cc3-4a75-b5c0-ef9f971021c9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="e7e61ed2-7c31-4f14-b0d2-16ec4f3869db"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", "1"+l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="74f7f6cc-b18e-4c5a-8dd1-e60c948e4a66"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="c9de0402-a8e0-4fdd-9a9d-fa06576c117e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="e2f147f6-9f29-486d-a08e-6c54ccacabef"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="871a9c5e-cc0e-40bf-931f-cf22c8001195"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="98022481-df22-4b29-8155-235e6530392e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="a4992a30-e8e7-4b96-bc4d-45f55f9bb073"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="5133e7b0-c3a3-4a29-98a6-03b0315d5e68"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="8a24e307-0544-4edb-b670-1a7fa9a694db"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="69702862-7ba9-4b33-a16b-ef514c8de751"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0b7a4e7e-3e51-4185-a666-2cc97bae2a47" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Expired JWT" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="c7b37e99-107f-4ea3-9c3d-08b1433f4bb1"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="a6431b00-e94f-4ec0-80de-364075083448"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="groovy" name="Set Expired JWT" id="e31c7641-402d-479e-8788-9761dd801d82"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", "Bearer " + testRunner.testCase.testSuite.project.getPropertyValue("expired_token"))
</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="056ba5d3-5d98-4660-908a-f8312c7d3c83"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="404bbb47-6636-4111-ab57-0112e32869a0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="f75ed1fb-98ac-4bb0-ad9d-a57935fe1b14"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="a8d2266f-4a24-474b-95a0-2243d01c18e0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="e7e0d660-6e75-4b6e-8b1c-4065e26af559"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="a3f06412-6b92-4908-b472-5004257d6880"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="25307afe-7a92-4781-b53d-42f359385632"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="0ac91358-8eaa-4307-afbf-b861467ed117"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="2659d538-f6ca-4c25-b2a0-0b6e3a6cd20c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bcaf65d0-31c4-4757-9b22-06d28d2058d9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Revoked JWT" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="680ea3b4-b9ef-4d5b-be7f-6b4bb881311a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="d487fee3-5382-4190-97bd-25a909b068bc"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="3d5c1cee-f30e-4eda-ba9f-8c827058d7f3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Revoke JWT - manual step" id="e9fd6a36-eab3-4a95-8937-4c63224d8163"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import com.eviware.soapui.support.*

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", "Bearer " + l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null

def alert = com.eviware.soapui.support.UISupport
context.otp = alert.showInfoMessage("Revoke Authorization ID " + l_slurped_json[0].authorization_id + " and press OK")</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="9adc6a47-5d53-4d11-a7aa-28f12eaced70"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="c72420b3-4a89-4c90-a8eb-19431f63e1e5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="3f0bcae6-d894-472e-9288-5ebbf698f87f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="d551a46d-8b05-4ed7-8f6b-108b81189cc7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="c7f8ce73-7f7d-44d5-8c9d-77a0ba1631b5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="2c63f358-646a-4447-b410-8163d8e16c67"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="4246571a-6533-4627-9747-b678ebfbd30c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="4b2798cb-62e3-45bd-b875-ea191faf7213"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="73bd87a0-b954-4581-bada-85a91320716c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="60d59098-683a-4f4b-9e27-cbcf7f33e126" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Permission Exceed" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="bfd0295b-8564-4ca9-80d6-7cff2658a79c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="0afdd1eb-3445-4d71-87ae-1fd4fb829011"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="8442cd48-25a6-4687-bce9-7c2aa5059ed1"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="0ed3780b-817a-4609-8637-eaa4a76ba354"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", "Bearer " + l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="calltestcase" name="GetCardDetailEnhanced" id="29e97def-a7d5-481b-b99a-362b478c9cb5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d67996bc-4ecc-40f9-8b22-a307b148e6a8</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1ee9e361-2e46-4b80-9963-71150d030146" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Anonymous - Anonymous Services - Any LMN" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="02fbc202-a989-4d3c-9382-e2fc45332a64"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="76b59431-b1fe-42fe-913f-9edacebbef25"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="d5916867-6a98-4801-9dfc-0e5d903501a1"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="747b6dd4-5093-4f36-8c53-f8919bf49762"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="bd4bf517-d7f0-439b-91a4-7952e6359558"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}
log.info("Known issue exists (key fields):")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0fb80e33-8ccd-4dee-8f79-6924bc86532c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Read - Main Screen - Any LMN" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="25119dfe-e98d-4cd2-8a32-0ea6fff73801"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="a85b98f6-dae1-470f-a746-b25af48c896b"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="8954f23f-6b65-4c68-8b32-2ac03a5736ce"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="dafbad73-0998-46c0-a856-764072b065dc"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="223d4d97-b8a5-408e-913e-23a16c1419b7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="35db3187-28e3-48b8-8ab0-ae9762fe7814"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
	testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[1].token)
} else {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
	testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="f3f361b9-a947-4b53-b65d-0eb07c691a2d"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e1332ae8-d150-4305-8a40-fb2bfaf5ef43" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Demographic Updates - Update Profile - Any LMN" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="58b394c4-4344-4f88-8fc3-b831c884f3f4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="98be4b85-9221-4c87-ad08-50bb323dc934"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="55d7a688-e0f7-4855-a6cc-ea2eaf568571"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="16f89fae-d02a-4d5e-9d8b-380c1efaf297"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="bb9f4b44-0c42-4a76-ad06-4fd02575ded2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="c8e32eb4-731a-471f-b1bb-b4fde00f7f58"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
	testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[1].token)
} else {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
	testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Profile Updates - Any LMN" id="0f50db2a-f498-420c-a4e6-4d35e658d895"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Profile Updates - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates Response" id="ac16d3ab-6d48-4672-b990-fc5920f2847b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="98947460-fd88-4b9e-9b8d-b378392c87c6"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}


run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6e1b2499-acd7-48d4-b67b-5d0b1f98f791" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Security Updates - Change Password - Any LMN" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="02201b67-fe6a-4bf0-bd1b-83367a484ffe"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="9f332a36-ad4d-4e21-89c9-1211313f1665"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="02a16eee-4218-4568-8396-6b815c2c0b48"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="42c99893-0cb3-4b52-9cc6-3ee5555ca969"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="0104214c-09b2-4800-86b6-c5cc0220c137"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="77aaa5e2-a082-4376-bb32-ec25450d6230"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
	testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[1].token)
} else {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
	testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="be96f6c5-ba50-4fee-8704-6d80e384b064"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
          	"DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates Response" id="00876526-d506-4e38-a430-77706a971ea0"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="3f001271-528e-4858-a742-7c424aa98fb8"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="899427bd-acab-4398-aea2-e68f9986332f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Security Updates - Change Security Answers - Any LMN" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="5b271f07-1954-4605-88da-768dac0a3a17"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="99451f64-9c5f-426e-a795-c1cc88374082"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="f3ff1b08-5c85-4144-9541-97e904a3af45"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="05331066-5989-4827-8c90-66ced6b180c5"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="c42ee7e2-c047-4f43-ac28-63e7a25c6ada"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="303deb9d-7eea-4adc-9bb3-0ffc26c6fe77"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
	testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[1].token)
} else {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
	testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="a0683ff0-b4e8-46b4-b670-6ecba75f3774"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
          	"DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates Response" id="3551a3b4-72c0-41e4-bd2c-86182496647b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="03e898b0-c7ac-4a96-83c7-2af17cca860c"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}


run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9a500aba-9b33-40bb-9cd6-a672420a0266" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Secured Demographic Updates - Update Phone - Any LMN" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="a466dbb9-28a7-4abf-a8e6-2265d5e73b82"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="046059fc-5dac-4d17-9345-31b12f942790"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="8b4b7474-06ce-4feb-9f2a-b866f6989176"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="797762a4-6634-4705-b9ad-18365ee05aa4"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="8884b6d5-0a49-40d5-8491-34ae460d933c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="db218075-43f3-427c-bf5b-acdd8c98489d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
	testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[1].token)
} else {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
	testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="794d0dd3-d3dc-473e-afe6-81de5915952f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="67883d4e-7153-48cd-b909-736614504943"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="28cc5f0f-5cc7-470b-baf2-e30e4daacccb"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="2d2f305e-4d6d-4a19-aa08-8e2c85f79813"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
          	"otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates Response" id="5bb2a135-d9e1-4c4b-bbbd-0fa8ee8db1bb"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="7b072a9b-4b8c-4d98-a33d-efc2f0490445"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")
</script></con:config></con:testStep><con:testStep type="httprequest" name="Introspection" id="f6d37dbb-aef8-497f-8f7d-5c69c0307529" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Introspection" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8089/introspection</con:endpoint><con:request>{
	"token": "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNVlo2WE9qT2hML1YxS3VlbC9lenN4eTJKazRYM1o5Z1M5a2MwZ2M3MDJsQkNnR0l3VEJFQjlUODcrdnNKM0V5WHFPekpzalZZNHRxZFg5NjBQZG92bll3RlVaWlVXOHcyV2NzUnVHVTlLNGJoamt0aUNycVBIbXhYSWNOcTdGSzBHV1dtSzdLVW50eXl2NVRTTU9DU3ZqY3R1NC92ajQrNEhSYk0xSWNaSGRYc0FWLys3akVoOTUxbVRCbnVtcWNmM1h4eGR6RDl2clhUZmh1VjJIV1M0eHIzd2FCNC9EaXU4NGJnNHhpN2VZcHBrZlUvTGZkVnlRQUJmaHV5QkxHNS9lTlBJaXZzY2xPVzVrRmFWOGNsWGlzdUtBR21ZVkJHUzF1cTFvNDlPSGVpSEljbEx6My85NGdLZmhtRjJZUVVFSTR3QzU1UHM0SURkSFdxNVVTcmp4dU1rYTZzQTZJVGp1VmtrNUw3S3dDc281THZoVVNZclZnRVdZQlNUazFGVVIzNlI0bFhCS1BxcGgzangzUmtLMk5kUy9qa3hHL1E5Y3I2OEpWYkppa1pYekVVQ1l4dUdlMFpQMDEwanRjVnVDS3ZWSjhlYUNJOWhzRDRNWEdPWXo4d3dJRkJkbGhXbk5vbGNRN29VZkwvaXM4djBzcUZJZVF6ZWNEQi9ENmtUdXV6Ly84L2ZmLy80RDcxMmZGVHphLytEancreTdQNytJQ25TK1FieEpTcE1IR0traDlIK0sxdWZOWGUvdEJHVWQ3NXlsYWI1QzdqZnBwVGdHMThZa3VBaWlIODM3MFdBamRwc1Y2WjZCVnRFeTdsVkZRVml3L1FGR2ZIUFJDWUtzWXVVcmJGcG5Kb01zNGxWWjdHWDhBNzNQQ3pnZVZMeGFyYlBpTmZuZ204ejZjQkorN1FIZ0djOHFNRnZob040NjVNYkxpcC92d0Mva3dkcUxvL0JjS3Z5T1JQeHRaK1daVzg5SS9sbUN1ZTE3cVBlTEV1MGhGOWlZVWxJZVhmTjczUHlZUGxZbitlUDNRSG1aTVg1UzFIMm00aDZFa1prMU43WFhGSUIvVkhoT0Q5a1BWOGtrTFB4WjZuejJCUEhkZlg1M2lPbjNYTlIrWVBtcFdVMnpJSUdNOHY4R3Vhdkk2a2Njc2RkZTMyQWUvc0tMakMzWisvcHhTNHBleG03akl2MU41ajg1VHI4dStFNUs1eUVHZjA4ZTQwaE13cDk1eWdsNVRlMyt0a045aUtkRDRaZ1hNZWRTL3E0YjN1T1QwcStLYnBYd1orV2ZGVlJmUFZBakZwY3hsLzdMRXR2WjRLbzVIUzRQdngvSDB5UFRtVkp0bXQ5WnF6OGNDUjQ3Q3ZpQTdZYnR3WEVxVVJCazRlU3Y5VjZ1Mng5UGwzSk8wOW1Qcmk4NmJIdnhzRklEcWZzbFgyOS8xTjJQZmMvZ3dFeDhmOVUrekcyMkp6RDQ3S1hRRXBxeUxML255eFN6UllVWE5XdkNGczhSUFZlM3huYzZQc0NjYXVERnBpS3J5cGl6dW00WWgxOEh3czY4MDd2UU94ZWRKNzFPZHgwTjF6RHI3eWZXbno1eHcxYUhxOVhOaWdRWkM3bkpwVlpiNGlhc2xTTUZyNUx4S2k3SlM3UWZ6emJCNnBiUXVmN1hZZjZwNlhVWUgxRWRCditQNHpEL0pSQUhpcUJ1aHh6Ylc0L3N5Q2FQaSsyenFlZXd5dTJUN0dyRmZYUkQ0elF1SDZadUs3YXZHcGllZEx0T21sMkFyTG1OMDNCTmIwaFJjQ3MveE1DQjdtU2hKSnRIcm1XV2tOclZaRHVPZkRXSVovRjRCSGR3bzhYajlqcytLZmhTU2YxNGREbEtGa0lnMEs0T2xZZVBocWpuYUhFN3N1QVlUb1NWYUVqZUxMQVVGWXJLdmRkSGZVMVdJSkxvblRZb1k1Y2xHNWg0c1orVXpGWWpBSFlMQVluQTlsaTJNeFUwTTVIU3RGbG43Zkc5aHVORmZHWHVVVnBwWWxCWXkrN1VTcjNNUmRxOWF5dVJMbzVFa29yTWdybGwyYUZxOWNFTUQ3eUJQK3oyM0FRZ1BXbktFSFZUQ3k1MmdaMUxFNW5PdE4xNE1GTWpUVWVoNkNOTk5KZVI2anBlb2tFREloYklVRUN1WmJlZ251UUdsTW83UHkzTFFCMEkzbkJzMklreUQwU2dHMnErUldLNERTMnZJSll1UTJlODFKaW5FcnR0QTRldXNBTGlpVlNLZ2RYVkFHeHYvYjR5d2ZZWWttUlRoQ0ppSnUxYUlhZlVVUjZITzhNQ3V5Z3lFcVFaREtYYUlHL1pEdUN5MndwUm85WlUxb3ZBMGRlbUJLWlFhT1d6Z1FKQmlselRBaVljUmh0Z2xyM1Foc1YwQjNSTmFnMmdzMmhpR3l4eDBxNHdNandvZDRmYWtrNk5RU25ickt2cVlpNTVLZkpNTlpwcnpoaTdWamZDYWRiQ0xHdGFVSk53NmcxTnRTMkhsR3BlUW9lR1FEZlcwdE44Qk9aNm1rZmNCeVBkb2lPLzE4Nkpta3NCUTAzWGJoV0dIRTBzNmxsV0NyQ1ZiaUtEZ3NoMWtCRkNPakdWM0xYZ1pta25JWnpaU2s5TDhxa0Y5VzI0VktyWk1JcHR4RFZuWVl2YnAyZjJRUTZrZk9xSjBZUWdSZkVTUmVEMmlnUExvSVlVS29qUnJpYTErM3BDSnhPSlc5UHlCcmFpN1FLVVNSQU43a043UFBMWTRoNExUY21UakltV29sNlkwcW0zOUZTUGFqc3NLaUllZXBHK0hGYzhGaXBqMTJXYWdPNE1wN04ycmZEU2dLdDdBRVVLNFdidFNtaHJ5WXBxeXA3aDA5eUc2Z1pqRmJiZ01uU01BVmdCQkdMK0dYczJnaTVzejRFYUpjanBsb2FVeUM3eitwb0FHUGNWRHh5eGdqWVlCVXRYTU9VdW04aDVaQTdXZ2lZYmtnV2pTYkNFOTY3c1NXQ2diMDBwTDl6bDR0NVBoSHRMaUdRRGRYVnQ2Tm00NzIwOUlWcURwUkpCMWRqNEE3UXkrb2FDK3BGZ0tUbDFXWGZvSWpBTG1DdTZpUmRaTzNlSElEOWp3N0VGbmU2ZElkS3hRZk1CMklXT0w0MkhsaFgyOVczSk5SbDNrWXhXaUxvYnBBQU5iTnN5V05LbW40UkwzNEZybk5JTTJTVUxiR05qV3U0MmhCSDFwVUN3VXlQRERsS3hOSklSVTh5cEhFNjROMVEzVGNUWndHMXBsaUo1c0wzeDdGWWFRS09uTFNOamhqbzdIUzd1RVZWS3ZLVFlzOEZrSWxJVk9hRmpLMVQxV1poNDhHcUhiYStuV1YwSHlORTZrS2h0TFkyMUprUkRWMWF3SnVmTFVHaEJqWVU3UXNQMXpCNVBmUVd0Q0FTWktaUlJTRU9ES01EeGQ1M3RSTXdCWW5sZnMwTVpKRjZHVWlPRlN4NXJEbkNRcUxkMEZ1eDRuS21USGVqWHVXekVoSGVic3BlTjVXV2xHNzFlSEdYcHJabUtpdWtQTGtPdDUwMVlLbDdLdDJMWk43cGFjOWRPTG0wRjBXcEtndHVXay9hbTh6c0F5Wld6MldtcVAzeDdHMFpERDAycTlyMWV2Nk40VVEwYWtpQmV2UlhrdDFMTEVsdlhUZWxhYXIrN3ZKTC9WZDhTR2kvcXhKRzQrVlpxbmlVK1YwRk8zdnQ4U3huNTJLRFpJbVkzdHhUWFJieFpRM2hXUHhxMUlHVTA2dGZYQ2JsWmorbzd5RjVhWGNySnd4V0tMemMrOC9ybHV3dlQvcFhPL3dBVmV6QWc0Qm9BQUE9PSJ9.Lpc_0KMqrfpbD32f5Ko28RI8XfXL5eGPdgpgfDjmbspnRcFXlpCxEmfYy2gAo2JZ-Ap4kL6MDx1DxwM6HyQWAw"
}
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4b235137-cdd5-4149-8376-df5fc4ab3d21" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Anonymous Updates - Customer Onboarding - Any LMN" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="54905547-9c76-4855-9c5b-3d38652690c6"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="72e3ba44-d922-4660-9e7d-1088b0eb8d72"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="449c0b68-f9c9-48c8-ad64-684273ef945f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="6508cc73-ebde-4d30-93e0-ee755cf58b42"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="9249d5cc-f0ce-4a9e-8067-8485539a2bed"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="a414aa54-d63c-4e9e-9f02-bbed8cd251c6"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="48e8051d-edff-4ee8-af3d-8f42c6854385"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous Updates - Customer Onboarding - Any LMN" id="6aeaf542-7bd9-41b4-beea-8e935b10cfed"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous Updates - Customer Onboarding - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Anonymous Updates",
    "identity": {
      "identity_name": "Owner of OTP Data",
      "authentications": [
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
          	"otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Customer Onboarding"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Updates Response" id="b3c34a28-bfb7-41f7-bafb-41b60b6150c9"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="34a95615-493e-474d-a1a5-5a4401800e4f"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

run_service("AccountCreation", "POST", ", \"PhoneNumber\": \"+971559307088\"")
return
run_service("ValidateIDDocument", "POST", null)
run_service("CheckIDDocumentValidation", "GET", null)
run_service("GetFee", "GET", null)
run_service("FXRateSearch", "GET", , null)
run_service("ValidateLoad", "POST", null)
run_service("FundingAmountInquiry", "POST", null)
run_service("CreateEEPaymentRequest", "POST", null)
run_service("UpdateEEPaymentResponse", "POST", null)</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="322d110c-ebed-49ba-bd08-f441afd91cd0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Any LMN - Missing JWT" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="13df39f6-02ff-4a97-9f8e-c5ffb1ea3bcc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="19255cc9-1f99-4511-865d-eaf9c11126a6"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="d278be4f-6f34-43d0-8cb8-533946f90607"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="e12a8227-e7a9-4e2b-a6c8-74f547f6275e"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",null)//l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="948d7a2a-c18d-4f1e-8ec4-4f5bcd91dff2"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService - No JWT'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}
log.info("Known issue exists (key fields):")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d15e0994-ae5b-494f-928b-54efe108d22f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="6cfe90f4-bbd2-4fe7-ad46-2d5741cef35a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="e8dc1042-da0e-4101-8f69-1fc6440833b4"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="e893ab5f-c1d5-4197-973e-013ebd8a9102"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="f0706261-85a5-4957-b4d6-610667846337"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="84843244-b343-41a4-aa7f-56ce4a0c619b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="e833e681-0b14-46b0-b688-435a88927cb8"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
	testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
	testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
	testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="7083fe75-abef-4a04-9fcb-f5a0d0254dfe"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="226e69df-7253-44b0-9868-48e29ac7ecd6"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="8c77dbc3-a4f9-4e43-af63-8393b3ac460f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
          	"DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="a1a2a0b9-ea4b-4f66-a6d3-5e42cca3a3ab"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="5e6912c2-16a0-42f2-9deb-bf39ae4d3dbd"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
          	"DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="9a4bb787-5086-4af2-b3e5-ac430c3889a1"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="d3e263c1-121b-4d76-95bb-e08fbae46809"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="2b86036e-858f-4145-a123-7db5317318ea"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="ced3cacf-20c3-46f2-a9cf-dc01149d6d3a"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="10604c28-85b2-49db-ae5c-b8f34f191901"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
          	"otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
    	 "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="970c83ea-744b-4aab-b8a5-e077db293ca9"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="33551876-b24b-4c9d-9699-ef80e6b906a1"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="1e11a76b-0ffb-4a86-8d0c-0f8086ea8275" name="Services - Generic"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5c6b11c7-71f8-4f9e-a8aa-88f6a2b4d8c9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="491c462f-ba07-4283-b144-b4cee16cec21"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="75da7149-e115-4e62-8e01-9a7dd65b1b3e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7d1b38a1-4da4-482d-988d-3efb7d0499c8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService - No JWT" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="c4473601-465d-4356-941f-ad36cea5e6ab"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="c0f0aa74-832e-415c-8657-84c9161a32fd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>InfiniteAuthURL</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property><con:property><con:name>ResourceURL</con:name><con:value>https://wp1.wirecard.com/emea/middleware_validation</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI</con:name><con:value>https://10.10.99.190:8443/middleware_security</con:value></con:property><con:property><con:name>InfiniteAuthURL_orig</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI2</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI_EMEA</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property><con:property><con:name>fiid</con:name><con:value>1340</con:value></con:property><con:property><con:name>granting_url</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>resource_url</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>expired_token</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlZXVS9iUUJEK0s5WSt0U3BFUGppQzN5d3VSVzFJd0xRdkZiSVdleEsyMkx2dUhpRXU0cjkzTm5aTTRsb3F0QkJGeXU0YzM4ek9UT1o3Sk5Ub095SFpMNnFaNEFtbkJaQ1FSRnp3cWhCR2taMk9BY3RJNkEzZHdIZTlJRGowQTgvemR3akxnR3VtS3hJK3R1YzExT1NCZzNURXpJblNGSlFTMGptaG1qYTQxalJkQVNzU2ZuL3N5TnBzR3M4azYvT3NwUmk1TkxjNVM5c3JYWHMxS0YvR0Y4N1k1Sm81eDBaSzRHbmxYQ0RBQWo1Y1JoOHRhc21TZ3Y1QWh3VkloY0RvNHcrV2d5WHFWQWtwbTIyQWo4YW5JOVFmSGJuNEdSNzRlNGZlY0g4UExRdkt6WXltMmtpUU52V3l6TUdLUlFhNXZYdjd3d1B5WktPVkczSGNnWWRmdE1zcG54czZ0L2tDbjZPZ3pLbWVDVm1nZ0UxaUZKeU5SaWQ0OFlJOTErS1VraTJvaGlZeGJ2SWNoVXBUamIwTFNXeFdSWmlabkR6ZFdFVXFTckQ1cnc1L2ROdUpRUzRZZXRnbjE4ZWtjY0htRklDRGdPMG41NmZYR3dZTnlEbm9HRklKK2pOVXFEWFNWbFBkb3dadk5ydGtlNUR1b2JJWlhrVDRpcjlobndrNUYvb3JTa2ZaTjVxemJBVXhwUkxWR290NHl1OG9UeUY3bjdoVHF0U0RrSDJSM3lEd2RCTDNSSTZCWjVQcmFUeU9Yd0g5Z2hmWkdsN0JuQ2t0VjY3dlZNMytSeDFUbVVXcHRnT0x2dkZybnZheUFKdHo4dGF6MEZRSy9yTXIvWWwzMi9KT2xWbFA4bHZYWnJ1eFBUTVZ4Lzg0VkRlTlFidTQycTF1aWFoaGh0Q0plT1dzTlgxYmRNTnJPNWJGMkx6WFVFZ1ZIU2NwakdZSUZaS3IrbFFiUnRQbzJMbU1XbTdyZURWWms5aitQa00vNFNiT1ROM3BSRUVxZUtaV3JPcmFmUTRTZmhxbUdDNzFUcXAydSs4UTNMRXQ3MWx3Wk9MaHJodnMrdTYxZXhRR2g2RWZERHd2K0dTWkNmT0JaY2xrMVdQc3VhSGJOZDd1ZzY3S1ovcTFqVk5ZMHlSbkJkUHJaR2FHcDlhVzVpMDFkZ2lxajR1UUQ3T0hQQUVwTFQyYjR0WnlaUTI0b2RDd2JPTm9jUTk4OVdmNkRTWWhseU95Q0FBQSJ9.qWQARZyVgO-UJhLOgvxciSc2C3Dk7-rVIQd-OU-v9UBWVdrnA887LROzVFAbunsGn58NBSabiS4nEpTdn_9xcQ</con:value></con:property><con:property><con:name>revoked_token</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlYyMDdiUUJEOUZXdWZXaFVpSnpFUS9HWnhVOVNHQkV6N1VpRnJzU2RoaTczcjdpWEVJUDY5czdGakhOZFNvU0pScE96TzVjenN6R1RPTTZGRzN3dkpucWhtZ2tlY1prQjhFbkRCaTB3WVJmWmFCaXdoZm4va0RnZHVmemc4OHJ5RHdXaVBzQVM0WnJvZy9uTjkza0JOSHpsSVI4eWRJSTVCS1NHZFU2cHBoV3RONHpXd0l2N1A1NWFzenFieWpKSXV6MUtLa1hOemw3SzR2dEtOVjRYeWJYTHBURXlxbVhOaXBBUWVGODRsQWl6aDAxWHcyYUxtTE1yb0wzUllnbFFJakQ2RDNxcTNRcDNLSVdiekJ2aDRjalpHL2ZHeGk1L1I0Y0E3Nm84T1BMVE1LRGR6R21zalFkclU4endGS3hZSnBQYmVQeGdka2hjYkxXL0VjWHQ5L0tKZFN2bkMwSVhORi9nQ0JYbEs5VnpJREFWc0dxTGdmRHcreFV0LzZMa1dKNWRzU1RWVWlYR1RwaWhVbW1yc25VOUNzeTdDM0tUazVkWXFZcEdEelg5OStLdmJUZ2h5eWRERFByazhScFVMTmljREhBUnNQN2s0dTJrWVZDQVhvRU9JSmVpdlVLRFdTRnROOVlBYXZObnNvdTFCZW9EQ1puZ1o0Q3YraFgwdTVFTG83eWdkSno5b3lwSTF4SXhLVkdzczRobS9wenlHWkRkeFoxU3BSeUc3SW45QTROazA3SWdjQWsrbU43TndFcjREK2kzQUoxUW1RYXp0MEtCbitCNzRONVhNTnVrYUZreHB1WGJlVWJ1Nkg5ZWNrNDkrV1BVUTJFbFgybFhiVVdVMmsvelJ0ZGtlcW82V2grRi85dnkyTXFnWFY3M1ZMUkZWek9BN0FTK2NqYVpyaXphOHRtTlpqT2E5aEVLcWFEbEpZVFJES0o5Y2w2ZlNNSmdGSjg1VlVITmJ5NnZLbW9UMjl4WDZCVGR4WXNwT1J3cGl3Uk8xWmxYWDduT1E4TnN3eFhDcHQxSzEyMzJQNEk2dGVjK0NJeE9QOXQzaC9zQzljWS85NFpIdmVUMWs1UytXbVRBZldPVk1GaDNHZmRkMzI4YmJmZEJGL2txL3RuRUtheHFsTEdONms4emM4TmphMHJTbXhoWkJkWEVSOG1IeW1FWWdwYVZuazkxWnJpd0JHd29OcXpxT0ZnL0ExMyttUC83N0dRMnlDQUFBIn0.KK5UUNMQ-6B0a_EC-LClfeuLfe2lSy01RKKtMOim92Vg1lpfrmiv9Nq2EWJ1CWVTNlHk4-LBlmOADdMIJ_ynpw</con:value></con:property><con:property><con:name>username</con:name><con:value>daniyalmobile@wirecard.com</con:value></con:property><con:property><con:name>password</con:name><con:value>Wdp@01234</con:value></con:property><con:property><con:name>DOB</con:name><con:value>1991-01-01T00:00:00</con:value></con:property><con:property><con:name>current_token</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWk9iT0xiK0s2bitlbWVtQkJoUE81OXUweUJzYk9SR1NBSzB0WlVDeERRMkFoTWIyNWlwK2UvM09KMWtrdXpNYnUzdHFpNGpvWmZ6K3B5SDgvdERmaDdxdzNFMzVjUHUwSDNvOHJaNmVQOFFWK1g1dUJ0dTczaXY4cUU2UGZ6MHc3cWRlbmh2UENMTC9OV3c3Smxwb3Zuc3A0ZWRxcm9CZGoyOC8vM3I4NWNUdDlldU9yNDcvUGFPbitEWHpZZjhYZDZwZCs3VytUVDRmTUY5VC9ucGh0UEQrMy84L3NQY2w3UHVSM3hRZjdYcmJSYXU3OCtGM3BWZmgyZlk4WG16eXJ2ZExkZnRvZGpwNm4rdnUyTlY1a2YxUzNsb0gvNzQ2YUUvN2k2ZzhPZU4zVmxybUR3TitYQSszYzF5THN2cWRQcnRyR0h0MzBrSEt2MTN3dlhId3doMk9yZEZkWVQ5eHErUGl6bXkwY3l5ckYvL081bitlWDlSSHZycWZ1eW5oeTlDUGRkNTkxcTkrK3JYcCs1MHJZNTN2NEpsTHJ1eSt2QjVIeGk5cmNEVDROK0hsMjNNdmxueHhmcWZRdUxMU2RHNU90MlZlenNRVnNQc2h6WS9OYkFTUm5lWlAzd2ZPazExdTh2OWoyY3dPL21rOUUvdlh1NG1lQnY4RTlUNHZPK3JLbmxaSHM3ZDhJMk5FTExRTjMvMnI5YmQzSjhzY1RoK2lzNkhwMCtqOTZEcTdkMlhOM2Y1N3NIem4yUGhidmFET3BmRDIyRjNwN3pOL2IycmZuclFZT1J6L25vL3V1cGV2NWZvZXl2YzVmdDIvQ2JtSmlRL2JEb2V6c01Pam5yL1FOK2UzaFkrdlR3OXY0dWUzajM5cWRlM3V6NGI3aUcrLy81NTlCOFFIdXA4ZkhQRHFTb1BuUUpQV09pdVYzV3NQcDUzcHgzRTJRK0MvdjZYRUhFUHc3OENoYmY1UDVIZ2JmeFpvTGZCdjRyd052L3ZoSGhiVVI2cnI1bjA5YmhxN0hmSDIzZFQzNHMxM1A2OCszd0M5M3pRdTNZM2ZKbjY3ZHlWOTNXNS9pYkR2a2t3VWwzQnZLMjY2Zy9WOFFnRy91TCt0M1hmdkJpcThldXB3NkdwN2w2dWJrRmQrT1Z1dXd0V2ZPSmp1QXNXdjhBa0tzeEJGN3ZWZk5XOG9oSnBKK0w0eXo4UnVrOFQ3UFFjQmVFYURSYnhHNk1RNVUweHZJK1g1Qkltc2lrbjV5QU5iVkcrR0VzdXRxeXhuemthTGhVWGZXRkdZOEdsRS92WkpEdHFDYXhuaFp1WjRlNWtWUzZsMGd6R0VwTmtiWXFFdDBaZDdCMUVSTDhyc0ZobXlhc2wydUJRSklNdFhHMGxLYlZKZ2w4SzNjZGtyMThFN20zYTRTeHI2Smw2NkNpWFpGZHBuSmRUN1l1bC9DZzRPZEJtWVpjTjNTc3ZOTmNUeWRhM1IxUTFmUjVyMm0wTVVtK0ZReW5ubC9XMHNrcFhuZk1weUxrcjB5eWhjTnJ3b3RyZ1NPQWRjVjl2cGJmZ3BSdlVaVXZEV0t0YTZOV1ZQUy9hd3JkakdpOU11dFE0Uk9TalNHVWZjanpGdTRXeFhlSTU4MnFUcEtKbi9teVdwWkZGbUs2RnNiSWt6Q1crV0lWTE5mSlVIQW9oZHFVL3hweVhZOTRZdDlBa0NXMUpRblEwYmd4bFZwM0MyK1ZoNGg1dFpSY01kUGxrNVg2OUwvZ1ZNWlBJdUFtRU5LOFR3YzJ4NkxoZExuRVNwL1cxTlBISHVEVlEzSGdYaHJDTVhWMHJTNGdRUjJQc2o2ZVFvNmwwOFZRcys0dnlBbHkyZXAxM3RjbHdOdVVUL2JobFRsOVlUaHk2ZUIrWkpBcU5mcGw3ZE0vMk9OeE1BYWZKeWk3M21DbGRXN21SWFVOTHg4V1N2dkNHbkVKTUxqa0xQa2E3NGFqYW9TbVRIaFdZM01MR2lFanF6QmdhSkhOSnp2REJrS2FCU1dNRUZRKzZndmRhYURJclFHL2UxWnk1eWw1UGRNTzlreDN5eDB1ZUdFZVc5cXdRdmFGdUFQNU1uZVJ1WVZiNmFRcHZqNWUxVmRyaGxGMkt5Ymx1K2VzeDJudVRhdWx0TTcwZVJXTUwwZ2xSZGZXelluUkxUZTBRalBQbzluZ045MDVVTUdXQXYrd0MxL01NN2k1OHFKMitNblBET1phVzNHZWk1NW5HODNJU1oyS1Z0N0xyVFlwcEhsc0JZdXgxeXB1ZXh1YTRvWlprcFhiMmt2ZG1zaVRMT0psZHlWSzA0bmxBdVNVRDJ0aER1TlJINHRJc0VYSlZDRFVyZGd2S2JvdVBVU3BsNG1JV05rT1NkTjRsYmxhejdiSXhLNWRzMXlpejJWSjVySVVjNmNTNk1Pb2IyenM2ZHZFcVh6NWRsTll2R3lTT01nbENOVkZhbXBRUlhNN0FsNFpzNlVrazFJRFVEa2thVUs2ajI4YWtIWm40bFU4SzF0VnBOTkdENHJaTkpqRnduN1R4L3ZXWUo0dG82OWFjYW53dUVrellubzZrZVIyRlQ4N0M4Mllzd1pwTzlUWG00U3htOWFiYURiancrU1FNNmNXZDdwU0x3Nkt0NTVMcnMyS0toeVlrcWdWNm1BdFRvS3ZCVE5GTEF3ZFpLNHlrSmJKMFEwUzVPTExuUjFPMWVsQVdTY285ZVFrVDI4M2FFR1VNVHhzck9NZStZRVE0TjhhYjJjYlNwaktleHJVNXM2WEZqOUtrTHlScFp0UndiSXBFa2dzZGxjMUNoRXdkQ2xkenhRQUVMWndKajVxUWxmdlFvM1loWG1jbFI2YlN6aFJhVGl2NXNKT216ZVh6a0VKdWo2VXZzektwWTVvNk12Zkg5cDdYa3VGTGhtaWFtWFFDcVdkck5FT1NLMEcwR0F0NHJpRHV0Z25kYjFQVmhseFkwc1dISXRWTjFwSTE0R1RPVzYyWktUc09jWlQ3Nk1LOW1oYWVmTW5TNWhoYUhsSUMyNkh1NTVuaHBBWEhXKzR0V09KR3M0MXBHRVZUTitBUEsyRjFMUk03azI2ZzE1YmNSckNIdEh4V0lNM2pUcDdYQm8xSWE0UVFtNWVpMFJuRnlzalErRXo4WHBkcGJjamJ5VmFXbEl5SlJHRjh6cDhYbTlBYmpwQnZac21IRTVsS1MzbkVYWnMyUER1Y21ETE1wL29JTVc2RmZHYXBTYVd3MTJSb1pjdFdtaUVmUGRFRk4yRmlmNXZVRVdVNExrMklsOGE0Vkw3OWtpVll4R1pqVVE5UXVzbU96T3B2YXhNYlNSUE1DTzViRlQvZVlsODNjaW5NSk9GWGNWdFlHMU52dzlzd0J6OU5zZUhNb0s3Y1lsUHVRT2M1WUFCSTJIdFNPQ2gzbFJlYi9aNHZ5YWc0ZVNtUytrV1pmVmZDaWl3Vlk2aURIVXZHV2NXTmwyS1NRNHpKVlhJaFdGTnZtSkNENUdoV0xuVzlSaUdLa21qS2tQSm82bDFVSi9La2N3NVJGMTZJRzEwelU2empSUEljSFl5b1VhTXk1REdlT01ndkRaYThHb2tuK2kza1I4SmtIN1dDVkoyektkRnFKcG5JcEVsWTBnd3BUV3dTYzBIS3p1bWpDUVBXekZDNUZIM3BqVDdjdFJYTjZoWXl1Ukhkd2VRTmphRStBL1lPYzRVV1Vjd0RJcGVyU2V5Zzd2cVVsTzBpcHUwVnBLN1IxbDJCREhWUE9GMUJqVEtpVmprOHhTdW8wWEtEN0pkSUErL25neURtNlJaYnF1R0cwc1J3Z2xLSHQ3SVZicmpFeXlRSnZLd1prVEJFSjFObkpaTndGaTdGTHZSRVhxWk9tUENBVjk0Z2txNzJ3d1p2SWlSNnFGTWE4TlFVSEZ1RjM4OG9WMzJVRWtFeDhZU3ByTkszbDh5a045WlNuRGVCbGdpdjh6Mk5LRko5MW81WHVuUSt4Z2g3WlJmTWdSL2NtT3RjT1ZkZXZnUXM0M2dWTC9FK3hIaTNYZGJIMkZNNzNnUithWTR6MlNBemFvMGRFUUxucG5RWjFBT2VMSkxTcGNmY2Z6UkZSODVFOXdlWkFMNjJyd2hpZEJWYk5PVjhqTmVRKzZWQm5jb05sdVMyNkF2UFBsT0x6Q0xBTHBVWXFZTGFIUHY5VUxSaXFscHNsd2hpdWVsUHNkRm4waE1SczVvYkZjS2ltb1J4RzlReHhwdllCLzJiQVVVZFRhSUUwQlVaTE52WGRkTDF0UUoreEpxRkpJMmFNeDNJc0NXRFdBYTBRQkFqdUYrcnRobFZZOFRVQjRhZzlWWHdFWlc3NFVTdHA2T0U5eEt2RU1UcEdtSVlLNFNiQ0trell5V2lEYllGeXlheTFMbEVZaCttZW96RVlRS1FOMGpEN1lJUEh6T2o3NW5HVWhuNHdveWd5ZmdBTVNQUFd5RmdXUjhucmhNTHBFa0YxRVF5NENoQ1hjRi9HOUtRUXl6ME1UU0RvREFSMUdBc3loYVAyNVRZSWF1dnhkSzVrR1J4U3dDejRyUUIzRE9DeUtCamFBakF0enM2a3FNQyt3cVRyS1hYUSs3VEMvQk9GS1g5TmNHMUVRbEtxZkN1RWhNbjlzWm53T1JZZXZVRmF2Qkh1bFRMb3NrbTRDVmlZNDQ5Y0NLSXdvWGtYS1RDRElCWk91c005YmxrSkE1OVBhNE4wcFdBaWRJUHB0Z1BrRWg3d2RBNEFpYXRWREttZk8vc3RrSy9SRTB0aTZXYVI0WnpBa3lYb1ZrZlJDT0Ezd2E4YUlPcjhBNTI3Q3BNRGJ5TUVpTys4K1JJcXd0Zzc1VHoxeHZEdWdFK3VCWm9HS1ZXQVdsMEJ6ekJvOW9KOGltNkNuK3NwWTg1eUdIa3BqMHlSaWZtRzNuQzdqTGhKbHc2ckRESWMySFJEYkVnOXRyZ09iSXdWaVk1UlExd3JFbGZtQ1VtcnFIRytxOGpsS3UwYUNTTjBYV0syM3BIdllWUGZSdERsSzRwVU1xSTE1dU1pVHB2aHhueEZ6emorTUNiK2liZEp4UDhzOHRheUdjVStBb1RFamIydVRDQW0ySWFBbzlMYzk5WXF3VE44a1EzVy85MGpSdTlDczN4VmlCMHpEUkJwU1d1TkJrYXdBU2JnZzZBaDdmY2RXeVprQm5nV2tPYllaVWhiZ3NUWWh3ZnhxenAvU1RGSWtOa1M0MDZ5VG5vZzhaWlpvVmp4blJJWEp3SXhFMjVENEM3eVc3TFJCZWExeGxwYktmeWUyQTN3RFVBZDNOWGU0UmpuZXNJZUFVMUUyOVlKcDBLWTk2dlNYbzRTdmppanBNK3lZRW5BYlpQd0RnZ2pJUkxsMVFEdmg2QWt3dzhyVk9GaFM0c2FYT3Jua3JoekJNdkFHNGFYSm51OThCQnBrb0lML2Z0UEVlTHJzU0NRN1c3MFVhMmtJYzFoVzhDeG1WRHhlcENqWjZYcVRKQzBRL1NnNFEzZWovcUZNVDFhRUxObUljTnJRbDg4NFR3TFZGNXdTUXR6WlBkNDVnSXVxT0pqSUVUcjR1bGZBYmVOSUNQYmpsWFVtSHRoY2w0cVlUZVI0YnVZcXUrdzlpOE5OUWFiRFZTRkRUY0ZEWHJITUFqMVlSN2dzUnRhS0FlYjVPMGh4RkpnWU4yRzh1WjA4UVFsQUVQaDVvUytxTVZ1bElRenhpQU14RHc0YVpvakxiYzE0QUhCSEh0ckFGSHJ3VFFPcjR0Q05FQmt0MlRBZGdQbURCZ3VhYzdrdmFua25sWHhiSVo0TmZIeU5TQjhIQXJtWnpIVUQvRHRPWlpzNkRBQzRaNGNyTGlOcHdoaDhOcW54bFZDNmc2NFUzU1JjZTFvVTV4ZTY4L2h0NU1NaWM0c2l2ZDI1a0dMZ28yVTU3eHZPV0M1MjJkaFc3UWhsNTk1V2gwU05Pbk1zR3VaTURqbDBGUWRRU1l0RXkzcm5PTE96cExJTTdDUnRpcTA3a1NmSmI0Z1pmd2ZzVmF6RVdubjJsVFg4SkpjZkc4OEJUdWtXQk9JRHA2RURnRWJLRHpFSXRXTGcrbU1yTTdiN2x0WFlxeWZYbWhMc1NwaFdmTWg5c1FkbFlkK3FVYkh4ZnV5MGNUbVd4LytCbDQrSWV6dE1QVndicXc4eDU5S0Y5NmJFeS9SYk9USGVteEQ1VVcvSG54YzVPeDFYTjlPanBCanlyeE9PK3E0RXJtS2xiN2MzMm9Uay8zdnRvUDNZUUhFeG1QUHlQclovTlhoaGJ2N2RsNzAvd0Z6V2YvYzI4d1BmelFaL2pYeGZaM2kvK3FBL0c1SS9Yd1F4ZkMrSXNXeE84UCt2QzY2ejc4cHZONzcyZDJ2LzY3M3NQRC9SSzhXcm4zTHBRMXU0L3VyYXRQTjkwN1FQQ1ZsWGRsOWFsMTlmQTM3Y0wvZjFQajRZLy9Bd3BzSTNnNEZnQUEifQ.Ec3TetVTCD6xHi38GEdBcw6MjEbF10MdlOQk-gpdrYhbv5hgkt0_-jSBuvhYF733Faupe-DrlbOsqfW2L2-ZHA</con:value></con:property><con:property><con:name>proxy_number</con:name><con:value>1789605043337</con:value></con:property><con:property><con:name>product_id</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1789</con:value></con:property><con:property><con:name>accessor_id</con:name><con:value>Access: Any accessor</con:value></con:property><con:property><con:name>otp_id</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>otp</con:name><con:value>1</con:value></con:property><con:property><con:name>current_service</con:name><con:value>UpdateProfileWithPhone</con:value></con:property><con:property><con:name>params</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">, "ProxyNumber": "1789605043337", "PhoneNumber": "+971559307088"</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNVlkyMjdqTmhEOUZVSEF2bXlkMU5lVjQ1ZFdzRGVwMFkzaldya1UyQTBFaGhvN1JDalNTNUdicUlIL3ZVTkp2a0pONDZ4ajV5RVdxYmtjbmhrT3FYbDJpZEgzVXJGL2lHWlNoSUxFNEhiY0VZd1ZKUGR1WmVNMWk5eE9yVjF0MUwxYW8rVTF2WGF6VlhGWkJFSXpuYnFkNThYejNOREZvd0RseUxGemxlQnZqMmhTMkxSaU5ET2F1SjJ2enh0emMzV3JGVVpsV3Zrc2VweWFPODdvWW1oUW8xQ09pR0FwNGJHOFl4eCtmMlFLS0ZIUk1aV3hPNnU0VThWK0VBMkZvakNjNDJTaWlUWUl5QTBNcFpBa1k4UGQyYTE5UWVVVXJQM3NZUTd2bkREaEJGUUJDQVNJbm44d0NtRWhpNHVLQWNsRHl0eXp6NWNyQW9YMkdlaWhrcEdoZWtnVVRtbFF5V2R4VHdTRkNLV05ZbUZNa2dlVXhKR0ZHYTRINHdGU0MvVnJZYVRmdThWMXJUZ2RYZ1FsWHErWjBvYndMbExSVllBTWJPUEthZzFNZkFlcTRxRGJwelFmYkRndVhlMnBWQk9waC8zQk5lRXN5c3d1bDcwbkREMUpUWXc1RktJWUtkSnF4ZS94eDkrK2ZmdjFBOGxDTHhWbSt3Y2M1N1BISDE5RU5mQmY0VDRBSFdDQ2dZWFFleGZteTBOdWRYMnFiYjZqeVNEWXd1K3Ixblg2OXdoWEV3QlI5SDdYdGhlRTljVllxamd6Y0c2NFpsMmpGQWlhN29ERWl1TlRLbzNRVzNCcUs5TUlKaXpSS3ZQeEUrc3VkMURzRjVJa2oxSnRVdzllUmV0OEoreDNBMkRGdTFSRUpJUmExVCtRUEtuZVA0QXZsQ01ieFg1VVZwSGVVSWhmdDFmV3dscmkrYjBjSS9mZDYrNmVDbTFlQzI0STU2Q0wwQndtekl2eWthelVqd09WakNMWWNIRTVETTYzS2NJL0U0bk5PdlZPdWY1U0RjczMyYzZOQnlDaXZWSnBkeEJxOS9EdXdQaGJMbXE3ektYbExlNXFHdTM1THZGRjBvY3J3ZkgvQ0w0YlNIYXh0N2ZkUWZ0eWVWTy95WTZzTWFpdUZHT200c01Vc3ZXak04L0JRMTE5c29UTGkvdFFNZlNsRDNTSUl5a0I0T2VYL2hPMlFiRFZCYXcvMkZlcW5RRitLeDhzdS91Q2FZYmU5MWJZU2lOcUxlV1hoOFBqV0g0eWxSeWFRZkRHVS9PMkVGaDBGRWlPTFJRWk9KU3FWYXVONnNwZnkydlk5c2Z5VW80eWZqYnFPTDVJbmZrYkM4VDJTLzYvL1dHN0gxblBJRGRXODlvbitkeFR1Z0lEWno5Vlc5Vm1vOUh3OERVblltTEl4Sm9HTVZsSHRMNWNpMjkxbk1QOGNqN1lVRkxTYUlhbU91NG9mOG9GL2FIZmRmN3lIWCs1cmxXdGdqZzNzTDlMMDdNWkVtdnlTMDZZQUpVaVFzcnJyWk02VW1nWEJ3b1BLNVl3RFp0b2JmT240bExiRFNrNlM5Wit2VnBySDFVYlIzWHZzbnJTYVhtZHBuZmNiclorc1NGQlNQQTBaU3BkRjI0ZTFUK1ZDcTluZzA2bjYwMDJreUN2SVdjeDAzTTBZeU95U2svNG9yWEY1WVNKY015SlpheHBJU2lGbEN3Q1poMmQ5dnM5Rzd0RzA0NXN3RE52bGplWTV5dStkditqMTFWeDQraVJoK3VHYzBBckx6UThMWEJxK1FBRmhiTi9BYW1DQWZWTkZBQUEifQ.uSmRCJRjFq-R4dTROzbfwjFzDmRCtxgAjt4fFf178zXfT1RIcH6zdMisojFvUx3JDAqTQGvIeBSddBQzYYEplw</con:value></con:property><con:property><con:name>Anonymous - Anonymous Services</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlZXMi9hTUJUK0s1R2ZOcTFGQ1pkQzh4YjFKclJSYU5QdFphb2lOemxRcjRtZCtVTEpLdjc3amlHa0lZczBUUU9FaEgwdTMvbnNZODczUnFqUnowS3lYMVF6d1NOT015QStDYmpnUlNhTUlpZU5BSllRM3h1NXZlN1E2dzJHL1dHM2YzWkNXQUpjTTEwUS82MWE3NkNtcnh5a0krWk9FTWVnbEpET0pkVzB4TFdoOFFaWUVmLzdXOE5Xc1Nrem82UXRjMnZGeXJsNVNsbGNiZWt1cTBUNU1ybDFKaWJWekxrd1VnS1BDK2NXQVpidzRTNzRhRkZ6Rm1YMEJ5WXNRU29FeHB4dVo5VlpvVS9sRUxONURYdzh1UnFqLy96Y3hjL29yTnNmZXFOQkh5TXp5czJjeHRwSWtKWjZucWRnelNLQjFPNjl3ZWlNckcyMXZGYkg3WGo0eGJpVThvV2hDOHNYK0FJTmVVcjFYTWdNRFd3YW91RjZQTDdFamRmcnV4WW5sMnhKTlpURXVFbFROQ3BOTmZiT0o2SFpYTUxjcEdUOWFCMnh5TUh5M3l6KzZMWVRnbHd5ekxCSDNpNmpNZ1dia3dFK0JHdy91Ymw2cUFXVUlEZWdRNGdsNk05UW9OZEllNXZxQlQyNHMreWkvWWYwQW9WbGVCdmdLZjZHZlMza1F1aXZhQjBuMzJqS2tnM0VqRXAwYTd6RUsvNU1lUXpKY2VyT3FGS3ZRclpWUGxaaGU5UjdXRENsNVNiNVNJZWVUY09XNGhkVUprR3M3YnZDM0RBOGVJRjZPdzhPWGw0VlRCOW00ZVR3M0p1ZE9YaUJFSGp5Mzl4Ykg5VitYMXVlVkJnZTdVM3QvNVArRWY2eERLaW1WelhhclJxVjh1QTdBUytjbmFkdGxOYXk5bXRaalBwK0M0VjYwVWlTd21pR1VENjUzNjYyZ2NFc3VIRHVna3JnR2xrbGF4TGEzM2ZvTlk3anhHd2ZVYVFnRmp4UkcybDE3VkFIQ1Q4TlV3d25lNE9xSGZFbkJBZHRKWDRXdk90Nm8xTzNkOW9kUHJqbi9tRG85NGNkbE9aUFZwNlFENnh5Sm91V1lNLzF1ODNnL1Q3b0luL1hZTnM0aFhjYXBTeGpla2RtYm5oc1kybGE2V05EcGRvRUNVVXhlVTBqa05KcXRNbWVyR0J1QVdzT0RhdXFqaFl2WUp0RjFyOEJwNnpYcExjSUFBQT0ifQ.YaYopXZWru-dTeaLXeWmkjfiycydBIT258slhNjh77mQ_Dc4HNWcIuRPgamB6wXx8pf1rgerX72hqwYuicSFBg</con:value></con:property><con:property><con:name>Read - Main Screen</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNVlpXWFBiT0JMK0t5NVZ6Y3RzeHN0RHRDeS83Rm9XU1YyRUxKQUVqNW1VQ3lKZzh3QVA4N0NPVlA3N2dwSjhyamNiWnhMYlZiSUVzSThQM1kzdVZ1dExCemQxbUpmUkZ0ZFJubDFsT0tXZHN3NmttSFErdlhnV2tjNlplQ3JJVWsrVWxWNjNkOXJ0ZnVwRWhHWjFWRzg2WjE4ZVB0OUxtYTh5V2g3bDEwZDJ4ZCtIdU1ZSG1TMVpzQk5hZGM3Ky9QSmk3NTY5NWJvaXIzSHRkN25Hb2xteUtIaFlOcHpqd0V4d0ZtMHdTL05seE9pL1YxRkpBMXlTNHlCUE8xOC9kWW95dXNNMVBUQm1EV044czZweDNYQkFIYk1KQWxwVjF3M3JmUDNjUGdqeWdyYnlkeC91NFJrNHlvN01vS1EwNHdDNTVyc29vRmNIV242b2xITGpjWk4xZE5WNlFuRGcxbWw5V2Vha0NlcExYUEt0bXBhVm1vVTRDMmhyK2FhTXJsSmNKWnlTcjFxWVY4K2RrZEJOQy9YUGc1RHg4RE0vMXhPbGwzUHpGYTBvS3VzR3N3dHVpb3VTY2d1OFJWWExCWnAwU2N0UFIxenRlck5mdkZEODZtbTF2THpKNjhzeFFKaEZaQ2YyOGRqdmhHR1lCMDNLWStpS2srRkRXRDNSZS96N3YvNzY2NSsvNFozcjg1SkgrMjk4dmQ4OS92MmJxTUQ1ZDZnM2FXM3lBS010aE9FdnNmenJMbTk1ejRPNmpYY3UwalRmb1BlN3pxVzVrSi9HcExnTXdwOHQrOEZnNCt3Nkw5T2RBS05oZFhUUmxDWE5nczFQTU9Lbm8vTWd5SnVzZm9OTjI4d0U2VTFVMWVWT3g5ODQ5K3NLRHZjRlY5VXFMOStTRDc3THJQYzM0WDB2QU05NFZvbXpDZ2N0NjRnYkx5OS92UU8va1k1YUw0N0pheG5wQnhMeDk5MlZaMjU5UmZPdlVzeHRmNEV1M2luUjduT0JneG1qOWNFMUgrUG1oL1JSUGNrZkg1UXlEczZtYyt2U05ONlNoUCtPSjE3bXFWOFU2OS9LWWZ0TDl0T0ZtelFqNzJySzlnWng3aUh2SFNMMkk0M2F6NHlseHk3T0xzZzc5eEt6UEVqc2pQSC9rTjQydFBvWmQvdXROK2k5VkRxU3N5dFoxN1M4eUxQcnFFdy9KcEU5TDUzN0dQeW8xbWNYY1B2a2ZsbEdYRmY5UVVXY0c4V2svT3RYUGFWdlFmQ21CbXdNM2l2VWRNcS9LMzlZZEkrenFJNjQ5bmRMYks5NnRKVzBieDQrSHNmalY2WlhpcVpwL21EVi9Id2dlSmdvNEQyMnEyd0hqbE9KZ2lBTFQvNlVudHlPUHg2YmNrNXp2bHVkSFoxbm02UDdKeTJRZGw3eS84Y2Y3ZlJqTnpQWUN4TjdwLzM5M25yekJBYmZQUkVVb1N2TGNvOC9aamk3YWZCTks1cG1OODhSUFQ5dWkrL3BlZzl6Wm9BWFRHWGUxQkVYZGRhQiswOTd3dlBMODR1anhmblIrZU81bm5JZEROY3gyL2RIMFYrL2NzTTIreWJucXFKQm5wRnFONndTMnBQUmtsZXFxSXBxK2hMcWwxZkhYKzA4NkxYaDEzNy9jZUsxWHg4ZzdSZi9EV0svL3kwUWU0cWduY2NjWmxzUDR1aTZpTXJOczYzbnNPck5vKzZtNGc2NllsRWExZmRiMTAyMkt4bVlQUmwxUFpsMEFicmlCazdKaWwzUnN1UW12ZytBUGQyVEJ6VmRQMGl0ODRTMmZxYWJTYmpVZzJnZVRjYjIxbDRiMGFSL3pEZUZwVlN6WlRRK0dTYzNRaUN3d2NMVzdsOEdZcjVyUlAzUXNpZjJWS2hFS1BuendOTDBoVmdraTIzWTlXSnRHckNKNmRuS2dtaEZ1SlRZbktackdNU3c5aTlxWktuRmpNU0JqRk0yd2dMemcrM0F0dTIraHRXYkZiR011MlVHL1BrdzJOcVpkbXRuK2NxVW1XY2c3WVNJWUc0Sm9ySXc2NkdYRnBuTkFNZkFDdDlXQmlaajBKQkRFYmcrQTZJcWtlMWtOQlBKeUpDOHJaTUFkMkVYc1dXcEs5czhsUXhIbFVFQzZpQUxGU3drcFpQME5jdEIyVkl0VkVzb0VyUWRkQzJONUhOTnc0Nk4wdG1XdUhOVmNRTVJsRFE5bFd3WHhrYm02OVNkVkFDQmFxbUR5SGRxTWJBR05yREZ6WEtvVGJFemNXaXlMb21JTWxNY0RLY1N4NENLaUd5aEJiWXdoSWwvQWxQUk05U0o0cmdBMmxKZm82TkJsNkJjUWF5NFEyYS9ndlo2RG16b2tXMG90cmFZYmZvbm5oekdNNm0vc1RLUStxNDJYeVNoWXJtRkVtd25NUjNCbGVuVVV5ZjJtOENCR1dWZ3RvaTFTeEF6MlhjWUNKSmdZN2krN2lVM3NxUG5BdFVuQmJMQ095U0Z3L2tJZUZOQm0xZ3BRa0dzZVpaREFOU0k3RGw5RWNiK3dob1NEYWN3RFRMVWRSeWxNckp3YXJIQ2hpN1NsaHFjTCtUQjNFcjl5Qkp5eWRRS3o3TFhjYUFTZSs1b0Y1eFdzZXhRTVdSMk10MzZob05ndGh3Umhkdm53aHlDQXFRRjhFVVNZWmxvVTJFeUlwdSs2S1VyS2JBMUY5bE05UjBDZ1U0cWtBaUs3ZlRudnNvWTkvTjZ3UlliTURKSzZpUjNqdU90Rms3Zldlcm9ncVJrNXNmK3lHZkdGb3VhaUYwL1hNU0R4dGhPYmsycHpnd0IzVUwzZk9WWjVBVGExUjMzR2JQZFl1cEphR1BKbW03S1BneFk0ZGo2R21QZFZ1eVl1RkFGcmE4ai9wcjREckk5b2U4Q1BVeVFYWlJRTm1Rdjg0ZUdBQWR6SFUyNHZTNjV6eTRkZlNVZ0JpL21qaUQ0aUZNSmhlaXJmUS9iRTgzVUM4WFlzaTczaFlLaTJqTmN4RkF5eVh5TElFTmUzQUYwWGtMSGs2Z0taOWdSSGNyQ2tOK3BOWXBEY1dHUmdiMnA0MldxSlVSZnp6MDNVWll1eEpnTlZsT0JueTcyVnNoaEZwSEVBb3BJQmJHOUJiRzM4U1dnQlRJYXd4SEtzRHpKb0xRdWw3cld0WFIxYTBqK25jVVNHV2ZoaUVnKzhwQ1d3YlRvMmp4bWxrTlZSb2syWG9pTHJzV1FUQ1NGQWJXL05uVmZXeWFUZ1QrQ1UyY0lYWkwwQlpDZXJxMHRTT1pPUDdGSGs5dGwxSytoZnFvQUhTUkx0WTl0elY4QnBxbUF4NFNaOWtVazhpRGRhdUo4Q0xLWnVKQ1hBbXRtWXVoYjNFdFlDMlBQSFZoVUx4aVdZTzJsU2g2SXlXYXBxeElTRkRYUTRSMjBBVUp1eUpBMXVNV0NNZzFjQ0pZTzJrQmhJaTRRMlZvQ0RJbXIzV0tOU1k1ZENERFdObk4xc2dKWjRRWHFPamJibkdZSjBmWGkyTU5lWHJpK1V6Wi9FSXZpbVV1ZE5JbXZvMDJ3SVlPeEpTbW5GUXRCSFBaNjZlSnFHSFJId0FuR0RieTh3ZW5nWk9XdVQ0dHJzYnlocGR1VHd0dVYxMFNCcVExdTJ0OHFYaFNHamlTSXAzOEk4aDlTenhMNlowcnZyTnM3UHUxMi85RjJDNTBYSmVNcHNTaWNTUytKWHlzbWgvYWk4MzBGNVV1SDVUZFJkblhOY0Z2THV5MkNaNVdrMCtyUnh1TmgyMVhJM1hiVnRpSTdaVzFGcC9lZEZIL2MrUisvd3Z4NGllcDgvUTkrUmJoVzRob0FBQT09In0.7eExZWthbsfRC2AB-lskk_h0S8aDMALNJsmgdAGzb02gsJY-ZwE05pyHF7VY6gSAGG-5s_vkqnHp0Sp4l4_16w</con:value></con:property><con:property><con:name>Demographic Updates - Update Profile</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVlhNU9iT0pmK0s2bit1ak5UWEV5bm5VL2J0QkVZRzdrUnVvRGVlaXNGaURFWGdXbU1iV0JxL3Z2SzZVd215Yzd1Vm0ycVVtMkpvNk5INS9MbzZQenhrRjdHOGpSVVN6cFdwKzV6bDdiRnc2ZUhUZEdlamtQYWwxWCtnZlFpSFl2end5OC9pVmJpNFpQK3BKbkdSOTIwUHE2ZVZ0YnFsNGRLRk4xWWpmUERweisrL2Y1TDZlSFdGY09IMCs4ZnlGbjkzYVJqK2xYblhTei9vdlQ4OE9sZmYvdzA5OWZ5KzZyUDRwOVd2YytxSGZ0TEpxdjgyL0NpVm54ZExOS3VtbFBabnJKS0Z2OTVxNFlpVHdmeFczNXFILzc4NWFFZnFxczY0OWVGM1VWS05Ya2UwL0dpQUQxRWx6d3Z6dWZmTC9MaHozL2ZQK1NudnJqci8vTGpHN3d2WnZyd09weCtWMXNvakdyemE1VVhuNytLcTNPMWhiS2ZzdHJENnlIQzMwbjhvT0dyQWxZcDJjdjRXcDY2dTdMTFVIMXUwM09qeE5Ub2p2UHpqOTVvaXZtTzlWOHY2bGp3MG1iRjhNc2R5elMvRC82dG9IOWQ5dzErbXVlblN6ZCs3cjVJcU1XNnBwbmFkLytzaitiZDFsOU9meHErT1B6aCtjdm8wNGZuYnY3dzE1Yzd2cnR6L205YjMwMTlFcGQ4ZkZlbWYzeGF2ODlOODNjdzFPeWpabWtyMHpRL3FzOHk3WTZYOUhoWFhYVEhIeEg5YUlVN3Z1L0g3ekQzQWZ4cDBhQXNXeWxWbng3USs2OTN3ZWZYNTVjUDRmT0g1Ny9QOWYycXI0WjdpTzUvLzFiOXB3b0pjUm5lM1hBdThsTW5sQ2RNN1g2dVlpamVMdFc1VXJIMUU5QS8vakh4N3FIM1QzbjJQdjkzY3IyUHZ3SjZIL3gzQ08vei94dUlkNGw4S0w2bDBUZDF4ZFJYdy96RDFJK3d4dm52dlM5bjVaN1BzbXFyOGErcDN5OWRmcGRMNVhkWjlWMVN3ZUttek51S20veGNESU15OEYvdWY1Zjc3c05ZVE4rMGpxZW11SHU1bVAweWMvUHFVUGxic3BBcHFQejFiMnBTeTR4Ulp0WDJjZHNjdFZ5VGRrakFYLzhobFgzTWdGMWh6UTkyMm1oQnloOFRFeTJGQnpYa29VMFJQWm1vWGNkRVQyWkVwbDFJNkJ0a09nMU51ZU5MYVliMGVRVTErRXJsc3drTmNZdnFjazViV0xHdURCTEpxNGpRSmNKbEdPak5JaWpYaFRPOUZHMDRaYVJ2U2NNMUR2eEx0Z0ZuckkweDk2QUoyM0dNZ0RNSVdYYlVHR3NvZXhtYXZrL1plYUJzWXJDR3pTSDJOZDdSRzJLbHgyckEwSEkwV08yc09MVzFBNW5HQkpjV05ZNW10bkZ1Zk9PditNdTRGVVRua2F2amdQWkwyRmdsZHdOek42L0RxRzFNaUJNTE12K2F4dHNsOGxBRERjdkxqR2tzeUxoTmdUemtYdjhtTkxvU0doOERUK0M5WnAwTFo5M3Y5V1JDVFc4SHNjVFFreS9FZVpvT0wrdUdzYlVsWWdnRGFwT3cxUjJxclZiNXdtL0ZCaVpoQTdaSm8rOUNOdDFvRGN6QTlGdXlnVFZ4eFZ2QnhKeDBzaWxlMWpvRS9xQjBYcUdtWHlQZHVVRlBiQ0NtYzI2c3I2aUZXMnFzRElWeGk5MitaczFxNG83Rm9BUVg1T1pUeG03cS9MUk1OU2h6WjBxSU0ycFpiSmUwMWE4VW8wM1FsdlBPQUNXTy9YUFV3aDNySk01ck1ER2FySFlHR3Jqakg4SjVuUkEzMTVGM1hDRkh1d1p4K1pxNXQ0VjR2WnRnK3hxWmRFRW1OSVZIKzh5a09ER0VmZ0ErWThxL3JIdStFUU5xQkd5bm9rTXliNnhXTk53NWJQaVlZV0JncjkvQnVsd0tBSGFwdzlQUVNPYURpOTVFVzNwSWx5L0JCdTVaTlBhUmNSNVFnMkswZ1JHUDFvL1FUSzV3U1F3WW5hOFFuSmE4UHVwUmN4eUN1bG1KTmx3ZG9yVVJ0UDZFU2FqekRlOENBOFNCS2UxSTA3WFVXUVBSd2Jiby9DRERqVjdVNkJXMmZaS1k1SlpLMUdhNkxhSFpUM1NoUTFTdFBXVzNEc2ZpZHZEQzRlRHdEcjZNSm14dUZqYVEwbWVkT0NnSmFhY05jNnd1WDBDSXlYcWZ0VTlYeklRVmRYVGg3ZnFBNjYyS0dXSlFER2pBS01QbTBUcHNRbXRud2ozeWVJMWtZdEVZQklkb1ZGN0pUZXo1WWJJRUd0dllSa2cwQ3dKK3plSit3NVV0WVkyNnBKbXMreGtKZWJxbWVxTW41S1pCclM4TDE3cUZLdCtLVFdNRmtxZEJUU3pTOGxjaHFjcGpGUzBPMVFORFhrZ3RMaXJQdThMVjN3NE1nb0FjQitMcXA3M3VSOFNGQTIrT09vbWxvMkoxVE9iUlVCQU9VTUlUZVJsZm85b3hzeGl3QXlDR3dyQm5qR3Q0SXpXc2NxS1E0QTB1L2h3dHNtUGQwVXhKYVVRQUJrSFRhTW9IanlxT3o0WFhtRmliRnI3a1Z1R01qOFNoYjduUmg5SExlc0IxT0F0Z1gxa2JYa1dNRGp1anNXaURKbUpDUzREVEJQVmdWWkFwekRzQXhMemU1UTZ4OElZc1VCTmh3WjVVdk1NazBXMGpOZmc1YzBTQzJzUWlsTWFKbHErb2NiNWlFNmxZQmt4STBJYUcvcExGQWlwN0dKUWhtS3V6Qkl2azNHbUdvZ00rckVNcmExR1FOR2NMZG1oSEY3c3FOdUVRZWJCTlpXSXdXZlk1N1c5N1ErVjF0ZDRLUThpb0ZWZm9oSFBRT2JQUXlyZk1XZSs0SVcwTXdpdVU5Q0k4K1VxOG81RzBjSUJ4YjJRZWJTSjFycXpWRExJUnV3TDdpTHMzVTNIdEtqRVNrMHYvRFhkOXlBaGM0VnJjOWt0Z0JZWTFGNDF2SnkwUFNVTnBwa01EdS9DcStDWk5GWWNsakwvZzVxem5ybjQ0Yk1xSWdOQVNyQm4ycGkzNUloOVp1N1laUUI1emxTRWJtbkFYbFdGMXZoMndNSVcwZzhNRzZXbFh0cG5jRHB3ODZWbHIrZHhCaDhROHpuc0RiUU9RREhzRExoaHZoNEw1bHp3R3U3QzFicWdEQjlnSkhIVHFPbW5ITTQvQkZNWDJ0RFBLSUdlM2lUZGxzbHZVSGRGTVNicHhGaml2YTA3T0UxTzh3aGNSOFdxdCtQRjgzWnZOalRDaTVVeGNWSWJYckowV2NzZUVlYTk0NnBBdnlaSjE4RlZ4eVhXbjRoTzZ1UUdsUENORk9MeEZWWUNmNTZBWlZ4bVZDc2R0SXFBL0J3Nm84bGErcEl2WXBVeHhWd2Qxd25TRHo2Tk4zSENtanY5SVd4UUdydFRVK1hIUThpbGhQazdhbnZMRjd6aEZkVkp2cDJ5ajlMc2cycHU5d3dtL1VRa2ZtVVJvcHdtY0xCQ2xSUEdnb2VoK0VlZURJM2hlMDVuSTU0WEVzT2UxenlLakJKRnVYNHBPSFBER1B0RldEQ25lTGd6TE9PcVFsemR3QjF0MGlRd3hLajdVSTRsNDFveHAzZ2hJek54S3NaeFlNMTVRMjBPaStXK28wV1lWZDBIUjVrT2dBWVZpTzZRZWlwT0dWMGpUOVVCU2I2L2JnMWlVM1dqZlpERzY3QXc0VWFiSGlaR2JqRUtma1Z5TDJ2VWN4Y3FPamNxWnpyN2dCa0RlZ0kzWXlEaHNaWnJXOWk1c0VFalVQaUhtZnM1R0diRHhFRXA3VjVCK2MvRDhGQlBRQkNxZWNsM0V1WE8yOHFVOGs3amNab0NDY09GOVNDYVhtR0xJUVI4R2psVUxaenZUUm1xMG9VdW1LVHN4MUlRS0p5VGxBWGU1QnB2VlRiaDZMTlNZdGhCaDZwOFJjS3dNQ0pONTVaQ29uRGxRMkZDRk0yeUJxaU9RRmJsb3dzeTNrV2JOeU9HUHpCbXYxUFZCMGNJNGpXV1FHYnFQMlFRVERlMFRIYTZnQS9jcEVWYnErQldMeFNsaXQ2dTZqMVZlYVJiUlRscmVDanRvcHgxdm53emMrR2ZZK0RWaFFQR3hNeWZSdWhQeVpDQlhmMVIxVlJ5NGF5VVB1TXJMcThxWlU2RjhCbHZ0cW03T1BZbkdDVzc4cEtEd3hHSi9SQTBkaFdGQlVzT1h6S1VYU3FtbDRtTThPUEFGNllKeEUxMVRESERoZ01kQWxyWEsvNTNpRmc2TlpvQ0dwSUVKSitKYXRnRDBFclorRUdwcmhaZWJlMlAwVlZ3ZXdsYWJ1R21qVkJNTHAzMktISEFnV21NaTkyWWhCcXVkS1U2S041eUVRUk1CRkNqK2l3cGxsN3pwelNUMnQ2RlI5bENINTlRRE5YNFpTVmhEa05mU0NwdmVLaGhDa1hreU1TanJoQURNbzdPZWFZbGVBTFZYWENvL2lTaG9kQzFZK0NuVHJFNjRwVW5hc2hHdFphYWUzSVF4UUtndUFhV1FxOXhXZFlqeUQ1RTNFWjJOU0tkelpQaDJRQklyYzVRUGFudkQ5VHNYakhaS3pvb1AwVVhkM1ZlR215dXV1VW1rckRCQnUwakZsN0xsbXlCckRiVjNPU0h6ZHQzbFZOVk9NV3gzcHZSNEkxeFZuNVFwU1c1N3ZWVDVnMVlLMjJ2U25tZFYxM1ZDMnk2VTNCYmVyQm1ycVUxZFp5SjFzQ0RERHptUWV1NzBKZEx0WGNZMFUrVndWNEJHNDY3eXY2R3I3MXd2cU5SUkE5eThkVlpwdGI3bE5YTHlwckV5ZzZ4QzNhWUZCUW1UUHNLdGprUjkxRGdSZHNqUVl3VElERDJPWVUwZkM0d2FMbFhscmZtOXVsZmVVaEpxS2VFd2FrdVp4cW8rak5ZVndrZUZNMWd4SUpjVTU0dXFTL2NwVnZkRUMxZHFmNnVncFlVZENYQkxsbENkbGJsakVMbG5nMnRqZW1BaWlsdzRoOFo0MkpuMmdjVzJrK2pDSTYyb2d1NVpDNlNZSWtrajN2V1BxdmFpVEVxOWNQb09TNjdxY3Y5UzRIeW1IVHdwYnJwRkRyVXowL1pWL0hrSDRsZG9DVlpFRjEwb2taL0VZaFU1NDRKVWZaZHBFeExzWnVaU2FFelZnYXBtZk5zWlZxMzg3MUdEbjFKQ3U5MVMza0pkbUlsRTE2RHRWeG1iQnJWbmxCbm5tYm5yWHRWREM5V0JxdWFnR3pJL1ZuWDNoYlk4TGhnZ1hBK0hVQ2R6b3NtRU5iZGJLRldkRlB0VDRDR005ZjVWM2F1dU9yOGwzTnNVemVPSmQrQWFraEtUWnRJVTcycUZURlpoWnl2K0FDc0lvTExSU05PbDdKRzZGd1U1clVKdDJyT083a0s5dEJWL2ppeW1wMFRsZ3dCeUU2Z25WQVQ0aVpKcGxWTEI4ZUtmaVhFMG9sakdpYnI3Q2tjcWo2cWFBNk1vcUcyYmtsNVhmS25lQ1JSU0RVSytnRHJVK3Z1NklXeExSYUlJcWJydEdtckl6OVFiaEdyamdhajZqanZRUVVBY01sWGY1NGJZc1JvaDVvSFh0UFdyckJFOHF1Mld1YzJNaVNXWjUvYzduVDZ5YWcyaW1QY1pwV3E5cGZUeGE3RHh6WWpLVitWVG5ESExKVEY2aVlDZHdwckxxQU5lQlB5dDBOVGJRVU5WZ1V1VE02dGp6VG9XTk5TRThvRjZrNXh5RituVUU1cWd5UlFBK0pKVFp4TFkxdzRlU0ZJQXZiU1ZPSXFmbDRQVHJOS054SVdxUjZFODNmS096N2dMVE9MZEg2UlBGcXA5OVk2eGs2aWxNUGNnVGhuRVpCNTN6Sk5MeG81WDVjeFZzTmd1VlBpakRTWHFmZGhrc2p3a0dsZnZCbW9GRFV3aEZVUHdNczZrSzNYY0h1ZUFsbjZnbHhYdFVCOWhrZEpGNWVQTFduS0hiL2RHTUpEcWZCVW1YMEZYeW54enZCTGNES1QxVCtvRm83aEt2WU94dHQ1MjJtOGZDMVZMc0xITXpyK2pGK1BaL2xXZW0rWnpxVVZQNlNaNDNrUC8zQjdGczZ2dUxlTjQ5cE5mK1UyUlZUOTc0Q05OSG8vUnMrdithcDAvWDV1M3p1dTFxRi9KMVdmOThYYnZwZjNVVFhnd05QM3BWODM4MWZpb3R2NWtmZnkwZXZwdFphMys0OTVnZXZpcHovQ3o4Tk1uL1FmaGYrcEFmTzFJUGZ6VWhkRC9vUVh4eDRNOEhhdnU4Kzh5dmZkK1Z2ZnRmK2c5UE53M0FkdnQ1dDZGTWxmMzBiMTE5V1duZXdkSWVUcnQ4dUpMNityaGYyZ1IvditiR2c5Ly9oYzRrM0VpamhVQUFBPT0ifQ.RNi3q14bmyeEjGy9phHo7wGGaFrtsbRHG0WjKh1BwkjoYqqb4W2yKu4M-TySim15Is0bXNHTZxFMcquP0o2diA</con:value></con:property><con:property><con:name>Security Updates - Change Password</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWk9idUpiK0s2bit1ak5UQWt5bm5VL2J0QkVZRzdrUmVnSGR1cFVDeEJpRHdMVEJObWJxL3ZlVjA4bE1rcDI3Vzd0ZDFXWDBkdlRvdkR3Nk9uODhaT2V4T3A0T2N6WWVqdDNuTG12TGgwOFBjVm1jVDRmeDlvSDJNaHZMNGVHWG4rWWQ1TU1uNHdsWTVrZkRzajh1bG9zbjg1ZUhneXk3VWE5NitQVEhuOS9mSk82dVhYbjZjUHo5QXgzMDd5b2JzdzlaSnorc2RzNlh4dGNON211S0x6c01ENS8rOGNkUGZkOWs2VVdmNWQ4dGV1L1Z1L2ZuWEIyS3Y1cW40NlNSbk51OFBPbjF4c2VuNVNPd3djS3lySThQLy9wRmp4OHUrcGhmNTNkbnBYVG5NR2JqZWJncjQxd1U1VEQ4ZmxaNjdyL0RkRC9XL3czVVdhLzR1bGhtM2VHV3FmYVlIMVQ1bjlmRHFTeXlrL3l0T0xiL04zVC92QThVeDc2OHkvL3k4UTNlUzVWMSsvTERhellNMStOSmFwQjY5OHVoS0Q5L25hK1YzWmJhd3RxdUQ2KzdtSHczNHdjUjMwblFIdks1ellaR2orbldIZDNuSDUya0tXOTNoUDk0MFlkQlg1VC95NGZYdXluZUcvL1VnTCt1K3hOMFZoVEhjemQrWnlzQUxQRGRuLzNSdW12NHk1bVBweTkrK1BEOHBmWHB3M04zKy9CdDVJN3ZicEwvWGNOM0JSL2x1UmpmaGQyZDQ3M3YzN3ZNTHc5SzYrS2M3ZStpeTI3L0k2SWZ0WERIOTMzN0hlWTJSRDh0T2gzUDQwR0wrdlNBMzcvZUp6Ni9Qcjk4aUo0L1BQOTFydTlYZlZYY1Ezei8vVXYwdjdRanlQUHAzUXhEV1J3N3FTMWhnZnU1eWxQNWRqNE1CKzFSUHdIOTQyL0o0TzV3ZnhmKzcvMS94Zng3K3l1Zzk4Wi9oL0RlL3orQmVKOVJuTW8vZytkUGNlWFVIMDYzSDdwK2hEWGUvdHI3UEdqemZGYUg5akIrNi9yOTNCWDNlWm42THBhK0N5VlVYclY2VzNsVm44dlRTU3Y0bS9uZjUzMDNNSmJUbjFMSFkxUGVyVnplZ2lyM2lzUHVFS3pwVEtmd0VDeC8wNTBnTjBlVkg5YVA2MllQQ3FDY2lNSnYvNGlwUHVIUU9SQVFoQnN3Mm9pSng5VENjK2tqZ0gyOEt1TW5DN2ZMaEJycERkTnBFMUgyaHJqQklrdHR4RnhaRVh0ZUlJQmVtWHEya0NtdmNWM2RzaFlkZUZlRnFSS0htTEk1SmxVVUdzMHNtVENrTzcyVWJUVGx0RzlwSTRDQXdUbGZ3WUdBTVJFK3NsQTdqakYwVDFKVkhUUEhHcWxlUlZZUU1ENmNHSjg0cWxHelN3SWdPbmJGdlBKNURUbWU5eWF2M1lWZ0R0alJhVXhKWlROemIrVXI5eXBXd1VLOGpHdEpEUkY3QmdsWlAwZU5YUWt2dERhM1pSUzNqWVZJYWlNZVhMSmtQY2MrYnBCcCs3azVqU1VkMXhsVXU4THYzeVJnQ3duRUdQcVNiSUU5bE82eTN4cnBoSnZlQ1JORmtLOWVxUHMwN1Y2V0RlZExXeVlJaGN5aFVXdTREQ3dXeFN5dTVRcWxVUVBYYVdOc0lqNWRXUTJ0MEFwYXVrSTE5ZVJieWVVdDdWUlR2aXdOQklPVGxubEJ3TGpFaG50RnZsd2h3bTZGdWJ6Z0ZxMlp1VEExeGpYeCtwbzNpMG00TmtjS25yRlhURG0vNnZPektnTklGZTZVVW5jRWVlSlVyRFV1ak9CVjJGYTNqUWtya2dSRDNLSU43eFFwYWpoeGxpNDJKajRKTjloRnQyVkt2Y0xBL242QlhYQUprK28xOTY0ejlYc3ZKYzRsdHRpTUxXUkpuL1c1eFVocVNtTUhBODYxZlhuM2ZLVW1BaFN1cDdMRHFtanNWamJDM2EzRW1CTm9Fci9mb0xxYVN3ZzNtU3V5eUV4dk93Ky95YmJ5c2FGZXdoWGE4bmpzWTNNNDRRWW5lSVZpRVM4ZmtaVmUwSnlhS0I0dUNCN25vdDRiY2JNL2hYV3prRzIwMk1WTE0yeURpZERJRUN2UmhTWk1Ra3M1TVRCQTVpNmg3RkJiZGtHWWs4WW9hL3lLMmo1TkxYck5GRzV6dzFISTZpYzJzMU44V1BwYWJ4MUo1SFhuUjZlZEt6cjBNbHFvdWRyRXhGcWVmUlN3b3JTZFZ0eTF1MktHRWFITGJkNCtYUWlYZHR5eFdiVExIYW5YMm1lb3lRaGtJV2VjV0h0N3Q0cnNqWVcyMkJjMVZxbk5FaGp1NGxGYnBiQ0lIMFRwSEFLK2NzeUlBaHRCY2NtVGZpVzBMbEdOdTdTWjdQc1pLWDI2WkVaanBQUUtFT2lyMHJPdmtZNjNjdFhZb1JKWldGT2J0dUpWS3FialdIdUx5NHpRVkdkYXk3T084NjcwakxjZFJ6Q2sreFAxak9QV0NHTHFvWk5vOWdaTmxLdDlkVXh2bzZraDdKQkNSL295dnNhMWErVUo1RHRJVFkxaHk3a0FaS1VBMFRGUkt2aUc1dUFXejZyajNkN0thR1hHRUlWaDB3QnRnMGZ0eDBQcE54WUIweXptd2k3ZDhaRzY3SzB3K3loK1daNUlIZDBrZEM2OGpTNHl3YnVOMmRpc3dSTzFrQzNoY1VKR3VDanBGQlVkaFBLMjNCUXV0Y21LemdqSXFPUlAydDlSbWhxT21abGl5RjJaNGphMUtXTkpDb29GTTRjTHNiRDJaY2lsZ20xa0dpOTVJcEhXaDhrNFJvVStTemdySWR6bVZIWXdRSFZrNXkwTzAyYXdVWWMzYkhZTzVTbzZ4VDVxTTVXYVhGVjl3ZnJyMXRSeGZWaXVwU2xWM01vTGNxTmIyTGszQ2FxMzNGMXVoS2tjQXFNTFV1d3NmZlZLL2IyWnR1aUVrdDdNZmRiRStseDVDMHk2a3B1U0JGaDRWMHR6N1NJMVUwdW80STEwZmNRcFdwQmFYcmR6YUllbWZTdWJ3RWxiRWRHR3NkeEFKdkhRUmZOTmxta09TN2w0SWMxZ0ZKNngyNjJxbU1MSWxydzViUzFIaVZrOThuYnBjSWg5N21sRk5pd1ZIcTZpdzNEZEVXbEo1WVM3RlRheXJtcHp0VDRKK21Ua3JSMElGKzlTYTMvYm1uZ2R3dlMwTmRGTXlQcFU4dUJjSkhBVHRmWVZkM0NIT2tuQ1RsOG43VGlJQkU1eDRrd2Jzd29MZnAxRVU2V2JXZDhSelpSbUszZEd0MlV0NkRCeHpTdGlsckU0TERVL0RwZXQxVndwcDZEZzhxd2p2T2J0Tk5NN0ppSjZ6Vk83WWs3bnZFT3Zta3N1RysyZnlDdE1wTlNBTmVHSUZoOUM4bndMbTNHUk02VnhYQ2NLK3lGMDRhRm8xVXMyeTAzR05YZDF5S0RjTU1WdGRLZ1gzWmdiUExJV1I2R25nRDQvQ1ZzeHBUd2dhZHN6TVFlZFlMaE82L1dVcjdSOEQ4WmJxM2NGRlZlbTBDTlhHRytBSk9tTWNFWTFENXFhN21jNTdGd3BpcHJkcUhxZWFZSjZVUWM4TmlzWUc4NjU3T1NPckp3amErVXBJK3VaRTVYRUhmYUxCbTFRaTgreEtVZk5oMGFzc01pYk1Tc2FpYWhWMkJsUkUyL0dNMjU3UkVId2hodHcwMzRYbG0xeENnSFVLTmFuek1kSjJvZ0RCb1lSS3VadkRlY2taNjAzMWpkNWdzOGJFMDJNRzBscUZoWm5LT0MwQUhHN3ZNV0oxbU9qWTZaenpxU0JTRFJ3SlZjcWlWcVZaYld6aVJvTVU3MVBSRVJROEZHRmZOeEZ5dG1VdEYvdC9DQWpGRGFoOXFmQ2tFbmhEbll4VndOTnFuVU9HWXhtMFVkMDhxZ2xUd1hzbzlDMWErbXViNnhSZ0RWc3pvSFdFOGROcEhFaVd1MUlWd0RVTEs3U014S3AyNnhGbUxCZ3dOQzFjeWd0N2xlblZNZk1qcUdHYVp4UkMzVWVnZTNZd3hQaGdZT0JmY091ZU9UdWVHRmVBTXNXSlZtaXd0dzBBc0lubEFLOFRRMjBRQzdhWmxUYW1Sc2NlQ0tQTWI5ZTlIMnM0d3JZRkJ4QjBVb25iS2VOYUo5TTBnUURhb0thY3FqNTJMMmw4YktUNm1oaXozalVlVlVTZWtzOUh3b2RseGNkTThkUzJ3eTE0S0p2emkyTnh3bXRnclJrNk1pVFlNUU5HNlZwSTFxamw5eGpaOGFZcmYxajNMbm9CUnVTQ3d0Zk1nSko2Y0xIVUZXMWp2K041aGFCek9hRVRNVkNDMDNVc3gwSjJUbHFnekFDUzQxWFdGdHpETFJmN3FJV1RNSnljQWJrTEZpZllSZnVLR2dzN0YxdHpORmhZOG1qNWcwMzVjakNFSWVhLytKUzY2Vm9laXROZ25Wa1ZqMHkwSkQ1c0NZdkk0MXFCSXRhMlZIVDJ5WEhPTGFPRm9GVm5WSklSRHdZT1VpTkV1cTlra3JiU2NaaFk0QndGc2NjMkozMEtvdTJWU05iMjhwOHRZb1NpSEZkUWNhUTBMR3Q4eEJ0SDZxdU1oN00yR0MzMkF5Y2tLWjI3bW9iMU01S0dIY3VHSjJNRHBvUDhWbmYzUmRPbWd1cGhVV1ZPaENLTjdIMkw2M0xOMG1YQUxmM2VWSVY3YklybU02ZEV0UnVMT1dMUm5vNlA2a3ltbDYzUnFYakJ5ODB0dGUwSFc0NnIrc2tXTStNWG1mUkxEbXZtY004ZDZKMU9HTXppQVJVUnVIMkZUYWNUYzZCcFdPNEsyRURoS2Z0YnhwNlhCZ2xVd1p1b0ZlMDdpSTdMSzlGamQyaWFlemNwSXZJY0ZqSllNcFZnRWxyWUZudmdhRFNpVGgrakNHOUlWOFFWTFBIa3VCR0tKMTVnNkRYOThwYlJpT1FVWUhpdGxKWm92UERlSG5BWks5eGhnc08xWnlSWXRaNTZUWWorcDVvMFVMdmI1ZXNzb21ySUducEhPbXpjbThNWTI4d0JSaXpIWmR4N0tGYlpJNjdqZVhzZU9LNHFTRjkyc3BEMkQyRFVNa3BWaXdXWGYrb2N5L0dsVEpLdCsrSUVqb3ZEODRsS1c2c1EwZk5UZGZZWlU1dU9ZSDJQMzlIZ3dPZXd3VTFaQmNwSEtTSlhNVHVPR09kMytWZ3dwSmZyVUpKd0hVZXFIUEd0NDFwMTlyK1BqUEZNYU9zMjh6Vk5US2tsU3A4Q2R0K2tmUHBwUGVNYzNPNGNXL1o2M3hvWmdiVTJSenlJaDRrT3U4K3MxWWtKWWRVR05FcE11Z3RCU3JsemZVYUtaMG5KY0VVK3BnUW8zL1Y5NnFuejI5TDd6ckZ0L0VvT25pSmFFVm9Nd0hOdTZCVTZTTHFITTBmY0lFZzBqb2FXVFpYUGRiM29xVEhSUVNtTGUvWUpqSXFSL1BueUJOMlRIVThTS2hXb1g1Q3hWQWNHWjBXR1pPQ3pNRkF6YjBaSnlwSjlkMVh1a3BiVk9jY0JNZGg3VGlNOW9ibVMvMU9ZSWdCaE1RTTZ3ajA5M1ducUswMGlXS3M4N1pMQkhDUTZ6Y0lBK09PNnZ4T3VNakZVTzV5bmQ4WHB0endHbVB1dzllc0RRNTVJMFZjT3kzM21odWh0dUorMEc4TTlzZ1BTeGdub3M4WjArdHRMVTljd2xWZ3hVeTlhcHVTbk5zZVRmQkxESjBNMVVMRkhmUmpHS3dsMEc4SGdBOGxxU3pCN1k0M3kwU3lDRWh0QS8wbU9SWWVOcGd2Z1dUcEZFTDBVakIza2lRQU94K21HVVIrMWlvU0o4L3p6bTBXMlVxUlV1ZWpTQjJ2UlNkdXBBc3Q2dDhmcEU4MnJnUDlqbkhTdUdXbzhCSEpPQ0wwTm02NHIrYWM3eS9hbUl0d2RqeWs4Y2NyUnZYN3NNbFZ0VXVCME84R1pvY055aENUcC9CbHZOR3VNa2k3djRXc0NrS2pPckFPOXpHUkdadDFQTDRzbFhERmVtdUdKM29ZTHRJU0MrUXBWYXoyRjBxYUUyMkRvMzdCYUs3UzcyQUNsdXNPL1BheDFMa0VINnQ4K0IyL21NL09yMnBvbXM4VmlKK3lWZmk4UmNIUTd1V3pwKzh0Y3o4RTZhL2lxc21xdi9ud0kwc2Y5L0d6NS8xcUQ1OHZ6VnZuOXlEdUYycngyWGk4M2l0b1AxVVRIa3hnUFAwS3JGL05qM3JyVC9iSFQ0dmxiNHNuOHovdUJhYUhuK29NUDA5KyttVDhNUG52S2hCZksxSVBQMVVoakw4cFFmenhvSTc3US9mNWQ1WGRheitMKy9ZLzFCNGU3cHZBOVhwMXIwSlppM3ZyWHJyNnN0TzlBcVF0blhWRithVjA5ZkJ2Q29QLy82TEd3Ny8rQzBmbU1pQWlGZ0FBIn0.NuTTFwkUr6RfjJFynnQXOxAlcDVIEx5lPp-PfYs7njactFA1X7imUBbFTqVSf0vVtUqtGzGPFS0PrOBL2Lho5A</con:value></con:property><con:property><con:name>Security Updates - Change Security Answers</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWk9idUpiK0s2bit1ak5UQWt5bm5VL2J0QkVZRzdrUmVnSGR1cFVDeEJpRHdMVEJObWJxL3ZlVjA4bE1rcDI3Vzd1cFNyVWxwS1BudkQwNk9uODhaT2V4T3A0T2N6WWVqdDNuTG12TGgwOFBjVm1jVDRmeDlvSDJNaHZMNGVHWG45WWQ1TU1uNHdsWTVrZkRzai9hWUxINCtNdkRRWmJkcUhjOWZQcmp6OS9mSk82dVhYbjZjUHo5QXgzMDMxVTJaaCt5VG41WTdad3ZnNjhIM1BjVVgwNFlIajc5NDQrZjVyN0owcHMreTcvYjlENnJUKy9QdVRvVWZ3MVB4MGtqT2JkNWVkTDdqWTlQeTBlZ1FWdVc5ZkhoWDcvbzc0ZUxWdlByK3U2c2xKNGN4bXc4RDNkam5JdWlISWJmejBxdi9YZVk3bXI5MzBDZDlZNnZtMlhXSFc2WmFvLzVRWlgvZVQyY3lpSTd5ZCtLWS90L1EvZlArNGZpMkpkMytWOStmSVAzVW1YZHZ2endwMStmdStGYW51NSsxU2d1aDZMOC9IV2ZObnBiYWs5ci96Njg3bUx5M1lwdm1uNEppVytTb25NNTNMVjhGNmhYNjluUGJUWTBlcVVlM1RGLy9qRjBtdkoyeC8yUEY2MGkrdUtTWHo2ODNoMzBQdmluVnVQcnZqOVZ5WXJpZU83Rzd6d0lnQVcrKzJkL3RPNTIvMktKNCtsTGRENDhmeGw5MHFyZVBuejdjc2QzZDlUL2J2ZTcyWS95WEl6dnd1NGg4ejczN3dQcGx3ZWxqWHpPOW5mUlpiZi9FZEdQVnJqaiszNzhEbk1ib3A4Mm5ZN244YUJGZlhyQTc3L2VGejYvUHI5OGlKNC9QUCtsMS9lN3ZocnVJYjcvL1V2MHYzUjR5UFBwM1ExRFdSdzdxVDFoZ2J0ZTVhbDhPeCtHZzQ2em40RCs4YmNVY1EvRHZ5T0Y5L20vbU9COS9CWFErK0MvUTNpZi81OUF2SzhvVHVXZktmV251SExxRDZmYkQxTS93aHB2ZjUxOUhyUjdQcXREZXhpL1RmMSs3b3I3dWt4OWwySGZKUmdxcjlxOHJieXF6K1hwcEEzOHpmM3Y2Nzc3TUpiVG4xTEhZMVBldlZ6ZWdpcjNpc1B1RUt6cFRLZndFQ3gvMDVNZ04wZVZIOWFQNjJZUENxQ2NpTUp2L3hGVGZjS2hjeUFnQ0RkZ3RCRVRqNm1GNTlKSEFQdDRWY1pQRm02WENUWFNHNmJUSnFMc0RYR0RSWmJhaUxteUl2YThRQUM5TXZWc0lWTmU0N3E2WlMwNjhLNEtVeVVPTVdWelRLb29OSnBaTW1GSWQzb3AyMmpLYWQvU1JnQUJnM08rZ2dNQll5SjhaS0YySEdQb25xU3FPbWFPTlZLOWlxd2dZSHc0TVQ1eFZLTm1sd1JBZE95S2VlWHpHbkk4NzAxZXV3dkJITENqMDVpU3ltYm0zc3BYN2xXc2dvVjRHZGVTR2lMMkRCS3lmbzRhdXhKZWFHMXV5eWh1R3d1UjFFWTh1R1RKZW81OTNDRFQ5bk56R2tzNnJqT29kb1hmdjBuQUZoS0lNZlFsMlFKN0tOMWx2elhTQ1RlOUV5YUtJRis5VVBkcDJyMHNHODZYdGt3UUNwbERvOVp3bWI2emlsbGN5eFZLb3dhdTA4YllSSHk2c2hwYW9SVzBkSVZxNnNtM2tzdGIycW1tZkZrYUNBWW5MZk9DZ0hHSkRmZUtmTGxDaE4wS2MzbkJMVm96YzJGcWpHdmk5VFZ2RnBOd2JZNFVQR092bUhKKzFmcXpLZ05JRmU2VVVuY0VlZUpVckRVdWpPQlYyRmEzalFrcmtnUkQzS0lON3hRcGFqaHhsaTQySmo0Sk45aEZ0MlZLdmNMQS9uNkJYWEFKaytvMTk2NHo5WHN2SmM0bHR0aU1MV1JKbi9XNXhVaHFTbU1IQTg2MWYzbjNmS1VtQWhTdXA3TERxbWpzVmpiQzNhM0VtQk5vRXIvZm9McWFTd2czbVN1eXlFeHZPdysveWJieXNhRmV3aFhhOG5qc1kzTTQ0UVluZUlWaUVTOGZrWlZlMEp5YUtCNHVDQjdub3Q0YmNiTS9oWFd6a0cyMDJNVkxNMnlEaWRESUVDdlJoU1pNUWtzNU1UQkE1aTZoN0ZCYmRrR1lrOFlvYS95SzJqNU5MWHJORkc1encxSEk2aWMyczFOOFdQcmFiaDFKNUhYblI2ZWRLenIwTWxxb3VkckV4RnFlZlJTd29yU2RWdHkxdTJLR0VhSExiZDQrWFFpWGR0eXhXYlRMSGFuWE9tYW95UWhrSVdlY1dIdDd0NHJzallXMjJCYzFWcW5ORWhqdTRsRjdwYkNJSDBUcEhBSytjc3lJQWh0QmNjbVRmaVcwTFZHTnU3U1o3THVPbEQ1ZE1xTXhVbm9GQ1BSVjZkblhTT2RidVdyc1VJa3NyS2xOVy9FcUZkTjVyS1BGWlVab3FqT3Q1Vm5uZVZkNnh0dU9JeGpTL1lsNnhuRnJCREgxMEVrMGU0TW15dFd4T3FhMzBkUVFka2loSTMwWlgrUGF0ZklFOGgya3BzYXc1VndBc2xLQTZKd29GWHhEYzNDTFo5WHhibTlsdERKamlNS3dhWUQyd2FPTzQ2SDBHNHVBYVJaellaZnUrRWhkOWxhWWZSUy9MRStram00U09oZmVSaGVaNE4zR2JHelc0SWxheUpid09DRWpYSlIwaW9vT1FubGJiZ3FYMm1SRlp3UmtWUEluSGU4b1RRM0h6RXd4NUs1TWNadmFsTEVrQmNXQ21jT0ZXRmpITXVSU3dUWXlqWmM4a1VqYncyUWNvMExyRXM1S0NMYzVsUjBNVUIzWmVZdkR0QmxzMU9FTm01MUR1WXBPc1kvYVRLVW1WMVZmc1A2Nk5YVmVINVpyYVVvVnQvS0MzT2dXZHU1Tmd1b3RkNWNiWVNxSHdPaUNGRHRMWDcxU2YyK21MVHFocERkem56V3gxaXR2Z1VsWGNsT1NBQXZ2YW1tdVhhUm1hZ2tWdkpHdWp6aEZDMUxMNjNZTzdkQzBiMlVUT0drckl0b3dsaHZJSkI2NmFMN0pNczFoS1JjdnBCbU13ak4ydTFVVlV4alpramVucmVVb01hdEgzaTRkRHJIUFBXM0locVhDdzFWMEdLNDdJaTJwbkhDM3drYldWVzJ1MWlkQm40eTh0UVBoNGwxcTdXOWJFNjlEbUo2Mkpwb0pXWjlLSHB5TEJHNmkxcjdpRHU1UUowblk2ZXVrSFFlUndDbE9uR2xqVm1IQnI1Tm9xblF6Nnp1aW1kSnM1YzdvdHF3RkhTYXVlVVhNTWhhSHBlYkg0YksxbWl2bEZCUmNubldHMTd5ZFpuckhSRVN2ZVdwWHpPbWNkK2hWYzhsbG8rTVRlWVdKbEJxd0poelI0a05Jbm05aE15NXlwalNPNjBSaFA0UXVQQlN0ZXNsbXVjbTQ1cTRPR1pRYnByaU5EdldpRzNPRFI5YmlLUFFVMFBxVHNCVlR5Z09TdGowVGM5QUpodXUwWGsvNVNzdjNZTHkxZWxkUWNXVUtQWEtGOFFaSWtzNElaMVR6b0tucGZwYkR6cFdpcU5tTnF1ZVpKcWdYZGNCanM0S3g0WnpMVHU3SXlqbXlWcDR5c3A0NVVVbmNZYjlvMEFhMStCeWJjdFI4YU1RS2k3d1pzNktSaUZxRm5SRTE4V1k4NDdaSEZBUnZ1QUUzSFhkaDJSYW5FRUNOWW4zS2ZKeWtqVGhnWUJpaFl2N1djRTV5MW5aamZaTW4rTHd4MGNTNGthUm1ZWEdHQWs0TEVMZkxXNXhvT3pZNlp6cm5UQnFJUkFOWGNxV1NxRlZaVmp1YnFNRXcxZWRFUkFRRkgxWEl4MTJrbkUxSis5WE9EekpDWVJQcWVDb01tUlR1WUJkek5kQ2tXdWVRd1dnV2ZVUW5qMXJ5Vk1BK0NsMjdsdTc2eGhvRldNUG1IR2c3Y2R4RUdpZWkxWTUwQlVETjRpbzlJNUY2ekZxRUNRc0dERjA3aDlMaWZuVktkYzdzR0dxWXhobTFVTmNSMkk0OVBCRWVPQmpZTit5S1IrNk9GK1lGc0d4UmtpVXF6RTBqSUh4Q0tjRGIxRUFMNUtKdFJxV2R1Y0dCSi9JWTgrdEYzOGM2cjRCTndSRVVyWFRDZHRxSTlza2tUVENnSnFncGg1cVAzVnNhTHp1cGppYjJqRWRkVnlXaHQ5VHJvZEI1ZWRFNWN5eTF6MUFMTHZybTNOSjRuTkFxU0V1R2pqd0pSdHl3VVpvMm9qVjZ5VDEyWm96Wk9qN0duWXRlc0NHNXNQQWxJNUNVTG53TVZWWHIvTjlvYmhISWJFN0lWQ3kwMEVROTI1R1FuYU0yQ0NPdzFIaUZ0VFhIUU1mbExtckJKQ3dIWjBET2d2VVpkdUdPZ3NiQzN0WEdIQjAybGp4cTNuQlRqaXdNY2FqNUx5NjFYWXFtdDlJa1dFZG0xU01ERFprUGEvSXkwcWhHc0tpVkhUVzlYWEtNWSt0b0VWalZLWVZFeElPUmc5UW9vVDRycWJTZlpCdzJCZ2huY2N5QjNVbXZzbWhiTmJLMXJjeFhxeWlCR05jVlpBd0puZHU2RHRIK29lb3E0OEdNRFhhTHpjQUphV3JucnZaQjdheUVjZWVDMGNub29Qa1FuL1hkZmVHa3VaQmFXRlNwQTZGNEUrdjQwclo4azNRSmNIdGZKMVhSTHJ1QzZkb3BRZTNHVXI1b3BLZnJreXFqNlhWclZEcC84RUpqZTAzYjRhYnJ1azZDOWN6b2RSYk5rdk9hT2N4ekoxcUhNemFEU0VCbEZHNWZZY1BaNUJ4WU9vZTdFalpBZU5yL3BxRy9DNk5reXNBTjlJcldYV1NINWJXb3NWczBqWjJiZEJFWkRpc1pUTGtLTUdrTkxPczlFRlE2RWNlUE1hUTM1QXVDYXZaWUV0d0lwU3R2RVBUNlhubkxhQVF5S2xEY1ZpcExkSDBZTHcrWTdEWE9jTUdobWpOU3pMb3UzV1pFM3hNdFd1ano3WkpWTm5FVkpDMmRJNjByOThZdzlnWlRnREhiY1JuSEhycEY1cmpiV002T0o0NmJHdEtuclR5RTNUTUlsWnhpeFdMUjlZKzY5bUpjS2FOMCs0NG9vZXZ5NEZ5UzRzWTZkTlRjZEkxZDV1U1dFK2o0ODNjME9PQTVYRkJEZHBIQ1FacklSZXlPTTliMVhRNG1MUG5WS3BRRVhOZUJ1bVo4MjVoMnJmM3ZNMU1jTThxNnpWeGRJME5hcWNLWHNPMFhPWjlPK3N3NE40Y2I5NWE5cm9kbVprQmR6U0V2NGtHaTYrNHphMFZTY2tpRkVaMGlnOTVTb0ZMZVhLK1IwblZTRWt5aGp3a3grbGQ5cjNwYWYxdDYxeW0ralVmUndVdEVLMEtiQ1dqZUJhVktGMUhuYVA2QUN3U1J0dEhJc3JucXNiNFhKVDB1SWpCdGVjYzJrVkU1bWo5SG5yQmpxdk5CUXJVSzlSTXFodUxJNkxUSW1CUmtEZ1pxN3MwNFVVbXE3NzdTVmRxanV1WWdPQTVyeDJHME56UmY2bmNDUXd3Z0pHWllSNkMvN3p0RmJhVkpGR05kdDEwaWdJTmN2MEVZR0hkVTEzZkNSUzZHY3BmcityNHc1WWJYR0hNZnZtWnRjTWdiS2VMYWFiblgzQWkxRmZlRGZtT3dSMzVZd2pnUmZjNlkzbTlyZWVJU3JnSXJadXBWKzVUazNQWm9nbDlpNkdTb0ZpcnVvQi9EWUMyQmZqc0FmQ2hKWlFsdWQ3eFpKcEpGUUdvZjZEZkpzZkN3d1h3SkpFdW5FS0tYZ3JtVEpBSFkrVEROSVBLelZwRTRlWjUzYnJQSVZvcVV1aDVGNm5ndE9uRWpYV2hSLy80Z2ZiSnhIZWgzakpQR0xVT0ZqMGpHRWFHM2NjTjlOZWQ4ZjlIT1hJU3o0eUdOUDE0eHF0K0hUYTZxWFFxRWZqY3dPMnhRaHBnOGhTL2pqWGFWUWRyOUxXUlZFQnJWZ1hXNGo0bk0yS3p6OFdXcGhDdldXek04MGNOd2taWllJRStwWXJXL1VOS2NhQnNjOVF0R2M1VitCeE93WEhmZ3Q0K2xyaVg0V09YRDcvakZmSForVlVQVGZLNUEvSlN0d3VjdENvWjJMNTg5ZlcrWit5RklmeFZYVFZiOXpZY2ZXZnE0ajU4OTcxZDcrSHhwM2pxL0IzRy9VSXZQeHVQMTNsZjdxWnZ3WUFMajZWZGcvV3ArMUVkL3NqOStzc0Z2aThYSC83ZzNtQjUrNmpQOHZQanBrL25ENHIvclFIenRTRDM4MUlVdy9xWUY4Y2VET3U0UDNlZmZWWGJ2L1N6dXgvL1FlM2k0SHdMWDY5VzlDMlV0N3FONzYrckxTZmNPa1BaMDFoWGxsOWJWdzc5cEYvNy9teG9QLy9vdlBEbVpRVGdXQUFBPSJ9.hLjkptB1qv5AVMlzBVHeuv9j1xFXbiFV5GdlzMD5ZncvA2sXcMePlEnrNJDd4D08JLDOfbCLJp2eaphLUx18Lw</con:value></con:property><con:property><con:name>Secured Demographic Updates - Update Phone</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWk9iT0xiK0s2bitlbWVtQkJoUE81OXUweUJzYk9SR1NBSzB0WlVDeERRMkFoTWIyNWlwK2UvM09KMWtrdXpNYnUzdHFpNGpvWmZ6K3B5SDgvdERmaDdxdzNFMzVjUHUwSDNvOHJaNmVQOFFWK1g1dUJ0dTczaXY4cUU2UGZ6MHc3cWRlbmh2UENMTC9OV3c3Smxwb3Zuc3A0ZWRxcm9CZGoyOC8vM3I4NWNUdDlldU9yNDcvUGFPbitEWHpZZjhYZDZwZCs3VytUVDRmTUY5VC9ucGh0UEQrMy84L3NQY2w3UHVSM3hRZjdYcmJSYXU3OCtGM3BWZmgyZlk4WG16eXJ2ZExkZnRvZGpwNm4rdnUyTlY1a2YxUzNsb0gvNzQ2YUUvN2k2ZzhPZU4zVmxybUR3TitYQSszYzF5THN2cWRQcnRyR0h0MzBrSEt2MTN3dlhId3doMk9yZEZkWVQ5eHErUGl6bXkwY3l5ckYvL081bitlWDlSSHZycWZ1eW5oeTlDUGRkNTkxcTkrK3JYcCs1MHJZNTN2NEpsTHJ1eSt2QjVIeGk5cmNEVDROK0hsMjNNdmxueHhmcWZRdUxMU2RHNU90MlZlenNRVnNQc2h6WS9OYkFTUm5lWlAzd2ZPazExdTh2OWoyY3dPL21rOUUvdlh1NG1lQnY4RTlUNHZPK3JLbmxaSHM3ZDhJMk5FTExRTjMvMnI5YmQzSjhzY1RoK2lzNkhwMCtqOTZEcTdkMlhOM2Y1N3NIem4yUGhidmFET3BmRDIyRjNwN3pOL2IycmZuclFZT1J6L25vL3V1cGV2NWZvZXl2YzVmdDIvQ2JtSmlRL2JEb2V6c01Pam5yL1FOK2UzaFkrdlR3OXY0dWUzajM5cWRlM3V6NGI3aUcrLy81NTlCOFFIdXA4ZkhQRHFTb1BuUUpQV09pdVYzV3NQcDUzcHgzRTJRK0MvdjZYRUhFUHc3OENoYmY1UDVIZ2JmeFpvTGZCdjRyd052L3ZoSGhiVVI2cnI1bjA5YmhxN0hmSDIzZFQzNHMxM1A2OCszd0M5M3pRdTNZM2ZKbjY3ZHlWOTNXNS9pYkR2a2t3VWwzQnZLMjY2Zy9WOFFnRy91TCt0M1hmdkJpcThldXB3NkdwN2w2dWJrRmQrT1Z1dXd0V2ZPSmp1QXNXdjhBa0tzeEJGN3ZWZk5XOG9oSnBKK0w0eXo4UnVrOFQ3UFFjQmVFYURSYnhHNk1RNVUweHZJK1g1Qkltc2lrbjV5QU5iVkcrR0VzdXRxeXhuemthTGhVWGZXRkdZOEdsRS92WkpEdHFDYXhuaFp1WjRlNWtWUzZsMGd6R0VwTmtiWXFFdDBaZDdCMUVSTDhyc0ZobXlhc2wydUJRSklNdFhHMGxLYlZKZ2w4SzNjZGtyMThFN20zYTRTeHI2Smw2NkNpWFpGZHBuSmRUN1l1bC9DZzRPZEJtWVpjTjNTc3ZOTmNUeWRhM1IxUTFmUjVyMm0wTVVtK0ZReW5ubC9XMHNrcFhuZk1weUxrcjB5eWhjTnJ3b3RyZ1NPQWRjVjl2cGJmZ3BSdlVaVXZEV0t0YTZOV1ZQUy9hd3JkakdpOU11dFE0Uk9TalNHVWZjanpGdTRXeFhlSTU4MnFUcEtKbi9teVdwWkZGbUs2RnNiSWt6Q1crV0lWTE5mSlVIQW9oZHFVL3hweVhZOTRZdDlBa0NXMUpRblEwYmd4bFZwM0MyK1ZoNGg1dFpSY01kUGxrNVg2OUwvZ1ZNWlBJdUFtRU5LOFR3YzJ4NkxoZExuRVNwL1cxTlBISHVEVlEzSGdYaHJDTVhWMHJTNGdRUjJQc2o2ZVFvNmwwOFZRcys0dnlBbHkyZXAxM3RjbHdOdVVUL2JobFRsOVlUaHk2ZUIrWkpBcU5mcGw3ZE0vMk9OeE1BYWZKeWk3M21DbGRXN21SWFVOTHg4V1N2dkNHbkVKTUxqa0xQa2E3NGFqYW9TbVRIaFdZM01MR2lFanF6QmdhSkhOSnp2REJrS2FCU1dNRUZRKzZndmRhYURJclFHL2UxWnk1eWw1UGRNTzlreDN5eDB1ZUdFZVc5cXdRdmFGdUFQNU1uZVJ1WVZiNmFRcHZqNWUxVmRyaGxGMkt5Ymx1K2VzeDJudVRhdWx0TTcwZVJXTUwwZ2xSZGZXelluUkxUZTBRalBQbzluZ045MDVVTUdXQXYrd0MxL01NN2k1OHFKMitNblBET1phVzNHZWk1NW5HODNJU1oyS1Z0N0xyVFlwcEhsc0JZdXgxeXB1ZXh1YTRvWlprcFhiMmt2ZG1zaVRMT0psZHlWSzA0bmxBdVNVRDJ0aER1TlJINHRJc0VYSlZDRFVyZGd2S2JvdVBVU3BsNG1JV05rT1NkTjRsYmxhejdiSXhLNWRzMXlpejJWSjVySVVjNmNTNk1Pb2IyenM2ZHZFcVh6NWRsTll2R3lTT01nbENOVkZhbXBRUlhNN0FsNFpzNlVrazFJRFVEa2thVUs2ajI4YWtIWm40bFU4SzF0VnBOTkdENHJaTkpqRnduN1R4L3ZXWUo0dG82OWFjYW53dUVrellubzZrZVIyRlQ4N0M4Mllzd1pwTzlUWG00U3htOWFiYURiancrU1FNNmNXZDdwU0x3Nkt0NTVMcnMyS0toeVlrcWdWNm1BdFRvS3ZCVE5GTEF3ZFpLNHlrSmJKMFEwUzVPTExuUjFPMWVsQVdTY285ZVFrVDI4M2FFR1VNVHhzck9NZStZRVE0TjhhYjJjYlNwaktleHJVNXM2WEZqOUtrTHlScFp0UndiSXBFa2dzZGxjMUNoRXdkQ2xkenhRQUVMWndKajVxUWxmdlFvM1loWG1jbFI2YlN6aFJhVGl2NXNKT216ZVh6a0VKdWo2VXZzektwWTVvNk12Zkg5cDdYa3VGTGhtaWFtWFFDcVdkck5FT1NLMEcwR0F0NHJpRHV0Z25kYjFQVmhseFkwc1dISXRWTjFwSTE0R1RPVzYyWktUc09jWlQ3Nk1LOW1oYWVmTW5TNWhoYUhsSUMyNkh1NTVuaHBBWEhXKzR0V09KR3M0MXBHRVZUTitBUEsyRjFMUk03azI2ZzE1YmNSckNIdEh4V0lNM2pUcDdYQm8xSWE0UVFtNWVpMFJuRnlzalErRXo4WHBkcGJjamJ5VmFXbEl5SlJHRjh6cDhYbTlBYmpwQnZac21IRTVsS1MzbkVYWnMyUER1Y21ETE1wL29JTVc2RmZHYXBTYVd3MTJSb1pjdFdtaUVmUGRFRk4yRmlmNXZVRVdVNExrMklsOGE0Vkw3OWtpVll4R1pqVVE5UXVzbU96T3B2YXhNYlNSUE1DTzViRlQvZVlsODNjaW5NSk9GWGNWdFlHMU52dzlzd0J6OU5zZUhNb0s3Y1lsUHVRT2M1WUFCSTJIdFNPQ2gzbFJlYi9aNHZ5YWc0ZVNtUytrV1pmVmZDaWl3Vlk2aURIVXZHV2NXTmwyS1NRNHpKVlhJaFdGTnZtSkNENUdoV0xuVzlSaUdLa21qS2tQSm82bDFVSi9La2N3NVJGMTZJRzEwelU2empSUEljSFl5b1VhTXk1REdlT01ndkRaYThHb2tuK2kza1I4SmtIN1dDVkoyektkRnFKcG5JcEVsWTBnd3BUV3dTYzBIS3p1bWpDUVBXekZDNUZIM3BqVDdjdFJYTjZoWXl1Ukhkd2VRTmphRStBL1lPYzRVV1Vjd0RJcGVyU2V5Zzd2cVVsTzBpcHUwVnBLN1IxbDJCREhWUE9GMUJqVEtpVmprOHhTdW8wWEtEN0pkSUErL25neURtNlJaYnF1R0cwc1J3Z2xLSHQ3SVZicmpFeXlRSnZLd1prVEJFSjFObkpaTndGaTdGTHZSRVhxWk9tUENBVjk0Z2txNzJ3d1p2SWlSNnFGTWE4TlFVSEZ1RjM4OG9WMzJVRWtFeDhZU3ByTkszbDh5a045WlNuRGVCbGdpdjh6Mk5LRko5MW81WHVuUSt4Z2g3WlJmTWdSL2NtT3RjT1ZkZXZnUXM0M2dWTC9FK3hIaTNYZGJIMkZNNzNnUithWTR6MlNBemFvMGRFUUxucG5RWjFBT2VMSkxTcGNmY2Z6UkZSODVFOXdlWkFMNjJyd2hpZEJWYk5PVjhqTmVRKzZWQm5jb05sdVMyNkF2UFBsT0x6Q0xBTHBVWXFZTGFIUHY5VUxSaXFscHNsd2hpdWVsUHNkRm4waE1SczVvYkZjS2ltb1J4RzlReHhwdllCLzJiQVVVZFRhSUUwQlVaTE52WGRkTDF0UUoreEpxRkpJMmFNeDNJc0NXRFdBYTBRQkFqdUYrcnRobFZZOFRVQjRhZzlWWHdFWlc3NFVTdHA2T0U5eEt2RU1UcEdtSVlLNFNiQ0trell5V2lEYllGeXlheTFMbEVZaCttZW96RVlRS1FOMGpEN1lJUEh6T2o3NW5HVWhuNHdveWd5ZmdBTVNQUFd5RmdXUjhucmhNTHBFa0YxRVF5NENoQ1hjRi9HOUtRUXl6ME1UU0RvREFSMUdBc3loYVAyNVRZSWF1dnhkSzVrR1J4U3dDejRyUUIzRE9DeUtCamFBakF0enM2a3FNQyt3cVRyS1hYUSs3VEMvQk9GS1g5TmNHMUVRbEtxZkN1RWhNbjlzWm53T1JZZXZVRmF2Qkh1bFRMb3NrbTRDVmlZNDQ5Y0NLSXdvWGtYS1RDRElCWk91c005YmxrSkE1OVBhNE4wcFdBaWRJUHB0Z1BrRWg3d2RBNEFpYXRWREttZk8vc3RrSy9SRTB0aTZXYVI0WnpBa3lYb1ZrZlJDT0Ezd2E4YUlPcjhBNTI3Q3BNRGJ5TUVpTys4K1JJcXd0Zzc1VHoxeHZEdWdFK3VCWm9HS1ZXQVdsMEJ6ekJvOW9KOGltNkNuK3NwWTg1eUdIa3BqMHlSaWZtRzNuQzdqTGhKbHc2ckRESWMySFJEYkVnOXRyZ09iSXdWaVk1UlExd3JFbGZtQ1VtcnFIRytxOGpsS3UwYUNTTjBYV0syM3BIdllWUGZSdERsSzRwVU1xSTE1dU1pVHB2aHhueEZ6emorTUNiK2liZEp4UDhzOHRheUdjVStBb1RFamIydVRDQW0ySWFBbzlMYzk5WXF3VE44a1EzVy85MGpSdTlDczN4VmlCMHpEUkJwU1d1TkJrYXdBU2JnZzZBaDdmY2RXeVprQm5nV2tPYllaVWhiZ3NUWWh3ZnhxenAvU1RGSWtOa1M0MDZ5VG5vZzhaWlpvVmp4blJJWEp3SXhFMjVENEM3eVc3TFJCZWExeGxwYktmeWUyQTN3RFVBZDNOWGU0UmpuZXNJZUFVMUUyOVlKcDBLWTk2dlNYbzRTdmppanBNK3lZRW5BYlpQd0RnZ2pJUkxsMVFEdmg2QWt3dzhyVk9GaFM0c2FYT3Jua3JoekJNdkFHNGFYSm51OThCQnBrb0lML2Z0UEVlTHJzU0NRN1c3MFVhMmtJYzFoVzhDeG1WRHhlcENqWjZYcVRKQzBRL1NnNFEzZWovcUZNVDFhRUxObUljTnJRbDg4NFR3TFZGNXdTUXR6WlBkNDVnSXVxT0pqSUVUcjR1bGZBYmVOSUNQYmpsWFVtSHRoY2w0cVlUZVI0YnVZcXUrdzlpOE5OUWFiRFZTRkRUY0ZEWHJITUFqMVlSN2dzUnRhS0FlYjVPMGh4RkpnWU4yRzh1WjA4UVFsQUVQaDVvUytxTVZ1bElRenhpQU14RHc0YVpvakxiYzE0QUhCSEh0ckFGSHJ3VFFPcjR0Q05FQmt0MlRBZGdQbURCZ3VhYzdrdmFua25sWHhiSVo0TmZIeU5TQjhIQXJtWnpIVUQvRHRPWlpzNkRBQzRaNGNyTGlOcHdoaDhOcW54bFZDNmc2NFUzU1JjZTFvVTV4ZTY4L2h0NU1NaWM0c2l2ZDI1a0dMZ28yVTU3eHZPV0M1MjJkaFc3UWhsNTk1V2gwU05Pbk1zR3VaTURqbDBGUWRRU1l0RXkzcm5PTE96cExJTTdDUnRpcTA3a1NmSmI0Z1pmd2ZzVmF6RVdubjJsVFg4SkpjZkc4OEJUdWtXQk9JRHA2RURnRWJLRHpFSXRXTGcrbU1yTTdiN2x0WFlxeWZYbWhMc1NwaFdmTWg5c1FkbFlkK3FVYkh4ZnV5MGNUbVd4LytCbDQrSWV6dE1QVndicXc4eDU5S0Y5NmJFeS9SYk9USGVteEQ1VVcvSG54YzVPeDFYTjlPanBCanlyeE9PK3E0RXJtS2xiN2MzMm9Uay8zdnRvUDNZUUhFeG1QUHlQclovTlhoaGJ2N2RsNzAvd0Z6V2YvYzI4d1BmelFaL2pYeGZaM2kvK3FBL0c1SS9Yd1F4ZkMrSXNXeE84UCt2QzY2ejc4cHZONzcyZDJ2LzY3M3NQRC9SSzhXcm4zTHBRMXU0L3VyYXRQTjkwN1FQQ1ZsWGRsOWFsMTlmQTM3Y0wvZjFQajRZLy9Bd3BzSTNnNEZnQUEifQ.Ec3TetVTCD6xHi38GEdBcw6MjEbF10MdlOQk-gpdrYhbv5hgkt0_-jSBuvhYF733Faupe-DrlbOsqfW2L2-ZHA</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>