<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7a797db4-9d5d-436f-9e27-919d62fcad7f" activeEnvironment="Default" name="Infinite Auth" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite id="beed602b-191a-4d5d-9443-0c1af9470544" name="Infinite Auth"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4c69d69e-616a-4b39-892a-9af793c3467d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Infinite Auth" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Init Data" id="70edc71c-71e4-43c6-b2a4-7ecc4f5c4b1f"><con:settings/><con:config><script>//context.username = "Daniyal@wirecard.com"
//context.password = "Test@678"
//context.username = "mobileapp6@wirecard.com"
//context.password = "Wdp@12345"
//context.fiid = 1150
//context.fiid = 1150
context.fiid=1340
context.username="daniyalmobile@wirecard.com"
context.password="Wdp@01234"
context.DOB = "1991-01-01T00:00:00"</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous" id="ceca378a-b04b-44d9-b090-c9a2b90461d6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="740682bb-f197-42b3-a012-3b1ad1a60a1b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
context.anonymous_token = l_slurped_json[0].token
assert l_slurped_json[0].token !=""</script></con:config></con:testStep><con:testStep type="httprequest" name="Read" id="4b750057-4ded-402f-83ed-8cb3b06bf5c4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Read" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=context.anonymous_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="a5881d30-881f-4e8d-9c65-871f5d1213d2"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
if (l_slurped_json[0].authorization_name=="Refresh") {
  context.refresh_token = l_slurped_json[0].token
  context.read_token = l_slurped_json[1].token
} else {
  context.refresh_token = l_slurped_json[1].token
  context.read_token = l_slurped_json[0].token
}
context.proxy_number = l_slurped_json[0].scope.data_scope.proxy_number</script></con:config></con:testStep><con:testStep type="httprequest" name="Read Refresh" id="a2ffcf0a-119f-4962-b58a-2c280c211acb"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Read Refresh" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of Refresh Data",
      "authentications": [
        {
          "authentication_name": "Refresh_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "old_access_token": "${=context.read_token}"
          },
          "private_data": {
            "refresh_token": "${=context.refresh_token}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=context.anonymous_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Refresh Response" id="fa90b706-cfee-49c8-a52a-4f055a0ab7d5"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
if (l_slurped_json[0].authorization_name=="Refresh") {
  context.refresh_token = l_slurped_json[0].token
  context.read_token = l_slurped_json[1].token
} else {
  context.refresh_token = l_slurped_json[1].token
  context.read_token = l_slurped_json[0].token
}
assert context.refresh_token != ""
assert context.read_token != ""</script></con:config></con:testStep><con:testStep type="groovy" name="Prepare Provisioned User Data Usage" id="91ccae96-0552-4f32-af01-55aece405cc2"><con:settings/><con:config><script>package authentication_modules

import sun.misc.BASE64Decoder
import sun.misc.BASE64Encoder

import java.security.Signature;
import java.security.GeneralSecurityException
import java.security.KeyFactory
import java.security.KeyPair
import java.security.KeyPairGenerator
import java.security.PrivateKey
import java.security.PublicKey
import java.security.spec.PKCS8EncodedKeySpec
import java.security.spec.X509EncodedKeySpec
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;

import javax.crypto.Cipher;


public static PrivateKey loadPrivateKey(String key64) throws GeneralSecurityException {
    byte[] clear = new BASE64Decoder().decodeBuffer(key64);
    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(clear);
    KeyFactory fact = KeyFactory.getInstance("RSA");
    PrivateKey priv = fact.generatePrivate(keySpec);
    Arrays.fill(clear, (byte) 0);
    return priv;
}


public static PublicKey loadPublicKey(String stored) throws GeneralSecurityException {
    byte[] data = new BASE64Decoder().decodeBuffer(stored);
    X509EncodedKeySpec spec = new X509EncodedKeySpec(data);
    KeyFactory fact = KeyFactory.getInstance("RSA");
    return fact.generatePublic(spec);
}

public static String savePrivateKey(PrivateKey priv) throws GeneralSecurityException {
    KeyFactory fact = KeyFactory.getInstance("RSA");
    PKCS8EncodedKeySpec spec = fact.getKeySpec(priv,
            PKCS8EncodedKeySpec.class);
    byte[] packed = spec.getEncoded();
    String key64 = new BASE64Encoder().encode(packed);

    Arrays.fill(packed, (byte) 0);
    return key64;
}


public static String savePublicKey(PublicKey publ) throws GeneralSecurityException {
    KeyFactory fact = KeyFactory.getInstance("RSA");
    X509EncodedKeySpec spec = fact.getKeySpec(publ,
            X509EncodedKeySpec.class);
    return new BASE64Encoder().encode(spec.getEncoded());
}


public static void main(String[] args) throws Exception {
    KeyPairGenerator gen = KeyPairGenerator.getInstance("RSA");
    KeyPair pair = gen.generateKeyPair();

    String pubKey = savePublicKey(pair.getPublic());
    PublicKey pubSaved = loadPublicKey(pubKey);
    System.out.println(pair.getPublic()+"\n"+pubSaved);

    String privKey = savePrivateKey(pair.getPrivate());
    PrivateKey privSaved = loadPrivateKey(privKey);
    System.out.println(pair.getPrivate()+"\n"+privSaved);
}

public static KeyPair buildKeyPair() throws NoSuchAlgorithmException {
    final int keySize = 2048;
    KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
    keyPairGenerator.initialize(keySize);
    return keyPairGenerator.genKeyPair();
}

public static byte[] encrypt(PrivateKey privateKey, String message) throws Exception {
    Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
    cipher.init(Cipher.ENCRYPT_MODE, privateKey);

    return cipher.doFinal(message.getBytes());
}

public static byte[] sign(PrivateKey privateKey, String message) throws Exception {
    Signature signature = Signature.getInstance("SHA512withRSA");
    signature.initSign(privateKey);
    signature.update(message.getBytes("US-ASCII"))
    return signature.sign()
}

public static byte[] decrypt(PublicKey publicKey, byte [] encrypted) throws Exception {
    Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
    cipher.init(Cipher.DECRYPT_MODE, publicKey);

    return cipher.doFinal(encrypted);
}
public static Boolean verify(PublicKey publicKey, byte[] bytes, String data) throws Exception {
    Signature signature = Signature.getInstance("SHA512withRSA");
    signature.initVerify(publicKey);
    signature.update(data.getBytes("US-ASCII"))
    return signature.verify(bytes)
}
def l_key_pair = buildKeyPair()
def l_private_key = l_key_pair.getPrivate()
def l_public_key = l_key_pair.getPublic()
context.private_key = savePrivateKey(l_private_key).replaceAll("(?:\\r\\n|\\n\\r|\\n|\\r)", "")
context.public_key = savePublicKey(l_key_pair.getPublic()).replaceAll("(?:\\r\\n|\\n\\r|\\n|\\r)", "")
context.provisioning_unique_id = "MDWL"+new Date().format("yyMMddHHmmssSSS")
def bytes = sign(l_private_key, (context.proxy_number + context.provisioning_unique_id))
log.info(new String(bytes))
String l_signature = new BASE64Encoder().encode(bytes).replaceAll("(?:\\r\\n|\\n\\r|\\n|\\r)", "")
context.provisioned_data_signature = l_signature
log.info(context.provisioned_data_signature)
log.info(verify(l_public_key, new BASE64Decoder().decodeBuffer(l_signature), (context.proxy_number + context.provisioning_unique_id)))</script></con:config></con:testStep><con:testStep type="httprequest" name="Provisioned User Data Usage" id="6b5b6d62-d8f2-4e51-8fdb-e61140ab6a20"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Provisioned User Data Usage" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Provisioned User Data Usage",
    "identity": {
      "identity_name": "Owner of User Data and Provisioning Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "Provisioning_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "provisioning_public_key": "${=context.public_key}"
          },
          "private_data": null}
        }
      ]
    },
    "scope": {
      "scope_name": "Prerequisite Usage Only"
    },
    "prerequisite_authorization": {
       "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Provisioned User Data Usage Response" id="06372060-c748-4d9b-8b65-9ba4c082ea64"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != ""
context.provisioned_user_data_usage_authorization = l_slurped_json[0].token</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="9b981b6f-f694-4e09-862a-08fd20671523"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=context.read_token}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#ResourceURL}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=context.proxy_number}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="c0512b4d-f039-42ae-9d6f-a1e31370b5d2"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
context.otp_id = l_slurped_json.SendOTPSMSResponse.SendOTPSMSResult.OTPUniqueId
assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="60c0dde6-eee1-4e91-aa2c-e4085292fcb0"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
context.otp = alert.prompt("Enter OTP","Enter OTP")</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates" id="05729bb2-e443-4c32-a18e-754d31c84ac2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Secured Demographic Updates" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "otp_id": "${=context.otp_id}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=context.otp}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates Response" id="e2667957-b3a6-48a4-8246-e02d9ca70123"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != "" </script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Provisioned User Data" id="d7abeac2-b666-4fd5-a499-aa88fccb6278"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Secured Demographic Updates - Provisioned User Data" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and Provisioned User Data",
      "authentications": [
        {
          "authentication_name": "Provisioned_user_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "provisioned_data_unique_id": "${=context.provisioning_unique_id}",
            "provisioned_user_data_usage_authorization": "${=context.provisioned_user_data_usage_authorization}"
          },
          "private_data": {
            "provisioned_data_signature": "${=context.provisioned_data_signature}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "otp_id": "${=context.otp_id}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=context.otp}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Provisioned User Data Response" id="1a477bd6-567f-4755-9013-40a1c46d0f5c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != "" </script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates" id="c49ba5cb-b1ab-4e9c-a577-dac1820c65b9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Security Updates" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}"
          },
          "private_data": {
            "DOB": "${=context.DOB}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=context.read_token}"
    }
  }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="967f8ba9-2256-4778-aa23-801fa6dd19f7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Init Data" searchProperties="true" disabled="true"><con:settings/><con:testStep type="groovy" name="Init Data" id="1fd443e3-cb3e-4ba5-8fde-7ffc48f29061"><con:settings/><con:config><script>//context.username = "Daniyal@wirecard.com"
//context.password = "Test@678"
//context.username = "mobileapp6@wirecard.com"
//context.password = "Wdp@12345"
//context.fiid = 1150
//context.fiid = 1150
context.fiid=1340
class GlobalContext {
    def static global_context = [:]
}
class WorkingConfiguration {
    String fiid
    String granting_url
    String resource_url
    String expired_token
    String revoked_token
    String expired_anonymous_anonymous_services
    String expired_read_main_screen
    String expired_demographic_updates_update_profile
    String expired_security_updates_change_password
    String expired_security_updates_change_security_answers
    String expired_secured_demographic_updates_update_phone
}
Object.mixin GlobalContext
WorkingConfiguration wdi_configuration = new WorkingConfiguration(fiid: 1340, granting_url: "https://wp1.wirecard.com/emea/middleware_security", resource_url: "https://wp1.wirecard.com/emea/middleware_validation"
        , expired_token: "5cIHYraGRoz/eDoy8gdAIKJprmDaVIyE4mKF7qFJJF+3Q5bG10iXZMONl5zhHsaKes/bqirRm/NVs+dXnJam3yPBh/sbBtrw6BjezMfogix385xkVa2PmtRuLeW7pQzAEowE3Ngw+ZYfVnt93MNTv4Jp813Germ7v2Y/2Oj0qzybwuP4jLZ/Wf4gfxDcwSBh1yi5LbbjFS4TJ/PpAvbUfR0Cplm8gGd6IiSji8QWuie7VwUFNP7oYSZbyB2wbUbpAprjMkOl4CD4FySO8yikJAWyefQwHmqO+x4hU5slzPg+BOM12nYRJgr/t5veQ74MR9JrUl7iFghGlJPKM1oTgRxTDGFrVgzxRW72/DJt8XuuJQ7bVHDZKQwfy5NASCzREiNacGNv2elmDJ6boZX2PWN+3aPNCgpFeRDy7S3I+yPRE6SDnxc/jZLE79epT0zdgsa8MDAUAW/uRFFvmMbPHTb1CbBU2VjEAwdOc1TmWEEZCT+Qbdoecn85PHwr+B6SbZ+rGeMlnqojQC7gw/L51Nxuj92Bv25Rm7AbudnDNP3ZtH+277uPFzicJvgmXc6Boofp1dozYIUJ5eVk3i9LyQShZoX0TxiLynyuxj8BHN521DYaExXNXYntDL5iN9KM8Ea4iHxPYJzKt8dqpVpIwNoMMGrBAEdcO3prpWeabS0emAkYLnJBf5pigsKOy3l8wxIvpLR4NuC5GO+D4SX01T5BJFS3s8mewFGSmTOdlv4jgYFWNTKFLRmsfPM9uHyQefiC6F+RM8UXzNoy2s+AxSF+2l/fu9Wwk6jzAoOSdG8GUYOk1SJqST+X79XzbtMc+mqOSF76CSLVJjFye4Y88Lk9m3Ps9oEEbo173j2l9rgBoej9eV6tax4+y8WQakYab4MAV668LCCSvfhFSGwXk2YWqvsjBLR9QLHFCkd3LOVrMpGDog7X951mfOeTwU0FXCcM072gmmfLl5AJ8UYwySr+ieaRWAuw86SnJWpQLPYQSBeMWpuawCGNum0hrFEnC2ygCGI7+WgcoFUEsdAN2DGUGiSjSWexam0yJ3zj+b2RJLdLdolc96VenIa7EiaBwT5yZggnkYfa5rg+eVuy8ROldc6vCsRG+jyMKTyrkq2KpWebSzQPdxZSlDFpV77Mg8F9uRpDBIV26W38ibZ+eOwGrPVNglHi8OAQgjvh1RZBoWYLZITI/4989xuWl96/c9J2BGEyja8QYltUZoi3OpqnWjMWW1IrYJT4730tPo5OEpqdM44BxlcnswgaNgkgBkV/uc6QuOymwZ0OeBOW39VLjuw7BWTwmRNKxeYsgSr50uRMDkWpGCQaHEZEAjoR8KMntns+rHL2In5r/k6JmR0Zy6daJPPKFTe9DMnT3VisJsJMpMmj0PhjGtrz8em07Z0Q4x4M3KR3sCBzcDfoYNp1f+HYaFLqNxipo0ZA97WxygEnzhqi1uLWDiUqkjTr+aeNR+s7j1C+FhRtAr/TjGRF6RobxA/PM0Zcx+WBr3252EUx5oWWFmNypHJRGw9bDXnXcIGNTSB/qeAxNN70D6BwvdS2nH0EqM0/Rb8bsw4so+bm6ILDHB6hJly0yMFc6xYBkEJs5RxB+Qo2072Q0a5+UBf7qz6kbmY8cVa34Ua5YKKDL0T9HU65yQYPX8Z+s2h8IIgQkqZ60YfJEV/KdalFtBlsxk06LxXgurswlKPRp7dtABd+QwxdAD1veJXEbheyNivn+TLoEBdsb7OhDDgWll2DLK3jQMl3v/Pk+aPjJCM3BLcCcSxumyMzQ6dWrR/l7Jqdc7BRGigB4ZWkrH+zSv7dk7IP79NJ26JutTpSnWWr9IcnOD4dVDe2Z34cg9wzHceEj4UI6dAkuWvmanwGGCgsoX0xr0yZRYfMlnSFHh/3b8zKhbnhN4oxERR9uLU0K4rL6iD1W1ZjkNRNcBk0wjmm8n1OAAjM2jAVr1NAx9OmvWffbASE0DNQFIijqft11XLAe3L2utOm1gpgwd84TYqWzJ7d2JRYG85nZfm+wN1Vm8eRT+MdUuMHZxtR4jZySF7bN11IOlOMCzZRxvoOt6B/Cpu5pljPUvlO1SNEBR5hP6V4AzSZwrHPOyPP+FWAAvVk8d+aD2d1N9aO+IFOZ1ViSN5IdPQYD0pmAMCyjIv94ZRTssGkIujz7DGqb+ISMG+2L5rIH0mWx7OkfXu26PFts/03Nhe450DyoZvY2ZfKUI/zEYNsAJlEBGWQWmzFKd5RP1UTNCFqFh4rI60JlQe9uwwmEmsi3SfS294exBTgRe3e/c6kXbkqjKIW3Ns3FHpGIhatvwwqaIRZ5aRQ6Leuwp8QFxdpWr2PQbfKh+pzSKEr0yXqsI2K5XMIwTzwDsI7IF9RyFPCOZff7HEN86SrzHL8Xe4iQ+dO0NlUBTAI94qMEoPz3/2qpr/SEkXLbMqSpZe90VsNpfx7qUbuqUa7EkVJ1cVInxUvX9xw+VvTxl5WRWHWAvZ7ue1nMqt0Q7plaMYI08cT5X6uGONzRfNc9R6PZ6ViVneInRLZGvpOq0rdr+0dqJzPIxJyaTKk1XeVz1yiC7icVb3VE9M6zb6mlUET8g8sApx1ikk="
        , revoked_token: ""
        , expired_anonymous_anonymous_services: "I9gDY7NsbqvzecwpW9Fy/4LOrDqw3KG6EhE/ADFT1WHnfAphnMcEI5h5TSv+3KxHhaGU4z6AlXLmWxxuG6iSqo5OAU+a1i8eC1Drn4HaUqDgl7Zcpb6LoXck7hZJcrULgEQvPuhhIELhdtsEEXNSV6yDrr5rU5MYvme4WPLgbogZ0Nc53Ux00W40WiX/Kvub/XoPBaIsIn5mrrKselLYq14/YteYB7CnZUeHQFoQ2zPzsSTMyzYg/5Wl3sMob14l8JdC6AtOZGhqKAHchaxqZPF05iDpuxRJbQJmYEgTrCIvVTaqfkyJ+nAppLiS2q/gPQ+wGZo619TiWoDdjWXIP2SqhqttrkHMeteC4A2qf5vbGrwhFmzXhplSvXcXdjyEOTwpUWrWaipHQA/z9CO82yQO4PU6xImxdoIpdmgKmGBfY7f8q78wVLgz1ncvaQFMNIKGckXF9iTTxyfqwptHQcPPWUYxOj6f/Iycx8SO6GC9859tV0dLnr6+jSbadwh9DyXAg5UZl86oLlfJU6HdDHwRrsKczQb3DCpIJCP9gS+IHPme8xT5iBhc/bYRwT/a9q9BGN2Q1x9GincWEqM4U56Y7HiwGMdi2DV/m5PVwxw6/ZIP8ehqn9dfRHSp00L/xfSQes9IjlKsZ59DbfT2C9EMyCPXqgVqphhot+qpS6IjdzFXawPgL5RdG7htNeCqQ9gqyqePIx495kdIZCxb96Gfa71AtcFppgL6SeG8ZyZMOxkRxVHvBoC1fkbLLDq6zTU7dT6kiAuF6/fLMXXVB93nyCKQb3IdRp+D6S4Ph0hx8d+eqBuE6FKL1s9u6zKm2d6aeeFPomuLbF+KSl61juZN7FDLYAu75cfaN78Mqo2JvFoqYoqJo5TCx89USV9JbztCUSkNWhzDRwPTmNlNBYmbFVCluDZ9NXjZuvNhbxO2Ojr5FiSguAg/+7Mpc6mZOfg+2ebClUD+yiJorxrrGmPqXMA2nlH+hq3RyupTkoQe2WBDePMW4iHGKaRYdAoEF5YIx9OSn4xXNgdO2klGdI7gFBIhRDfUzfY2KOme70P1KfRJYNfG3e7GoDVZZ3emJdeG9v5vUNXHEArw+/NngP0mo84CFfq5NZ9tjKnn4+qj1vIqhqZ+ApOFW9dPTV9QvUd0FfW5X9J815N45jgH8Dwy/KeJLag27/5Hdkc8YjlShx4ZI+qV7GI5CRXY29PZ4d3tTQGIkap/AfmcTbJMpg3dTVZYJ+yDdOmHv9snMIiHKRnbwdy4MG1W6hrRsg+VdSxyk7oJ+MLHwq7lUG+7GLJKSHMvvAC59148mAjJj9XRlJTOR28pDX09nZYxVcbvfHilmKguwL/q+of8gVAm9/8uAUFOTvdhb/V5L8MbyNaoau560yDZ0HMqRccj7U5L3IMuZ/rAX8pmbAzWbmSjjdfn0eR48f3c6vdFRL+9ixlYTtatCuWJ+gJ6wrUMJUl2VCYGA8G+sfKi8r5zAPxUC0iSBj3IrWx+Okgwtp2fT/Hkf26W9Un7sxnC/oYTDleFTuqa7YpfpkMNlFCRYayfjQv2n46FBT+8igR2SV9qP8zUTcbhvrkIaGrCFHuoape7afaIlLq+v9gIpipBpPlzdhTJvL6Ksyc7Ube2/c188r3o/qajn8570zP4RTLnGmKw7eeiiQBgbFh0Cco5Gn8spO+ReoNMkAwIbMNzwIxk4lMr7b+XYGgzZ7rhxcovNqsRa3ux9t8yoJvHdUIqvdXf1sYge+DC1KNoZWNW3rFRDVQydZQxj9jARQ7N/XjMtnhvJnlllZUuOKvUaHq5wpzGBq3/iQDQEGRYuYL9EtoR1YLQfOPl+30L0yRiD6CqPSpgyWGINTtTvdzsBc6rJCiqaxh2i5zqFd+x2AtNn6laA7vhHrg/o2eNLXaMY68zjEUJy06U1uGK0BKI5OdKt0HWnkq5sJNPZVtN3nX1ncRoE1I54P9cHwSB/BBmSVW0WWDTac9xDzp1wVTSows2QWHlyHA7Tb14/mdv5uFTl1ct/hiQ8zzJyDxhQ3IGYyPbjyIb+WBx+L+NqmFVBxu38sW1beXxRnjzNszgcPI3b1gM76d/8kB5HaAKETS1L4W371dLLc8WPCFTv8H/DPOj7FN1SbTxQDTzPeBViovoeoM0NsOmD1vxbWW/svW1y7eCxKJHPb60hxucDpH3RLm0865stsrmrwalR5c8b11Ywjwp3lQvDoRiEzXcJDyKEgpQpVTXE3bFObjeW0uiVRmhAnjzqbqUEltErYiBtE5RZEwt5VDgPpxRatLifTNSO5VO9w2nslwtM3j4DfoP8pR/P6gFjPBl/uxpC+tP2dueWFH8T1mrnFvG30J2sclqP+7XfcxxeQIcW8xlCL6HIzxhMA63hshasp9kxZnqfJ2oKTJrfLl7wltUjGHgPN0DFrewW8uuFljfy3dPVN0iXdB93gdkJ2P3NYGzsMlU+boku/YRCLrld9MmjMPUJidCm8R4K+Y51Ih/JTTWoaEqnFt2pf2LR+LOuTKyLSqONH0bvZB8M/SRaG/0XceTrSkYrY24K1t5UrWpA8QacZgCw1w8cjCQnAavG/dmKoq8ikSRb0Kwi/zClixYPe4UGPzvqLeJcEDJDQZHKn1XWCUIIfF32aTL3svgpLmnSTsoVSCbBWd3SWA="
        , expired_read_main_screen: "mPUp05+LOUjQ+4rwqzboKsoKJoNwKGR+kf++pPxI/pd9s9aFqdb+d8a/ORYid73ilLsgq/x6U8MoJMyMx4IPzvCvfRiRog0Fhpn30sTYKMvZ+I1pQO6zNG+8hxMKKY5tX13i37u2S97Y6RMqeKQxgd5IkQhfg/mmNSdDNXzt7X/HUjSuBCINStj39HZvUU4une8Tq/z8BQvZJAOA+uStU7noxku5SV2CGbePZFTSsFivTd3KNWNsKD4+APnVWZfgpW73aBoL+KgC9yTyM87RLQ9c0keQLx5hbdpNj3nZnxDLl1is0VfqZn+bYZ5NLyi0TEVhZ1jshwJkLT9RkSX6iDtE+jHsm3aPRp8P3D5LTpHEtQxPejW0CT/Aa04ZNb+P6rT3lleQzH0+idrkzLPIBkwngfCAHRNweTspF1h90rGwYQ8L4121xPvWqzzz5Ct3QS9IoS7oN1JNaOMKPL6RS/4ZYMneoingGO3uUAK5Xpeuw/wPnxkyBGVGXPQLXkpRUKEKyjhowvl5sH7tQq06QJexD6jZMXi5FxvRqQ9Zv33Fq+fuzzE2Fsq5balqn/IOZXIV/Dqdx4s370sCS6CLnqjq1YHQhhCZcgHpcyK1clb3RHUV64pOnE3VVf+dnk0DGWKQFiqfcXWRt6JZiyUlKwVXWgd9ibBa5WVYFkZH0lKTKC59agOEpzDfKzSIOvI5ZeXjHZCxUAwjHMpFnNa1doQhjyHNs16mPNfr9sa1Wob3S+C+KWUgjAS/WNXrzBbv1IBvz/iVJbARXIJoRvNfBHA+Eb0/j3lWIaPKM5hNxBBZydZ48CuW2aNrqO2vjCtc1BPFYmFgpor+6sMdgVazKiC7aIbGE8zd+15MerymHfBRQOOXxt+X8DqWk/0D71h2rvVy+Qe5WzNEKKVxPscTrWeySAMfwX1OXVlHQscltmAGXj4rxZVfpOvRatGCMtrslRH8pQzV+JdRs1qh7LVbPS4HRDp1nTeGzoGlrR7yaQjWnSZuTpYhM/xMKQdXb2n2ArTeIN6XpEQZCEWESjmDdLpAzXpNVnbpJFUE+/7xhAuKaL2JNCm0L4I2hfhthsiEEGUIzHtAh8B3h1OqTbMCMyLg5612BeNlesxXZskHnU18+nRh3HoC2trdHAMWgm82ngUnuMwUtn+tlUsJWPCE8ELnYs+Z3jToWQGhM1+32lXnZJB1bXjezCTrAuT0NYEAXS2GNPijXQL2eD0KzTYV0sHF/+vJwu0vIRpfvwcaWD2U7plzjadlIbBmWm33SycFJsbBNtquDuqYQUNPqESy88aO12s/KJHdSgfSvAY9C4d6qRGn1i+cwoPKXb9lsK5/9J74a+DxOVLf2/ndM9xcpqUTkZgfJ5wUWIq0cL04pS9MDdJHqtMUK5QGD2HNw+Srnz5EowLh7OK2WYerHMnj323Eldy/eeo2ZceyHtTZ0+8jb4e01MuWSHni+F7aobbmLXLjb4bBMDxNhgU4P/Lynan62TAP24IZkQXxJW5bOZjOJ9qEFHkRkaCCDVo+JJqLCKF7JHMT880riZZcO971odK6DmaQx3c2LDoNjJJa2eejwXJ0GcQY4MZjphhlZGotI23Ybps2J1xcMKSmuz9sDsYSqW7r/0hGj+PdMtk6D05EuCoOs8QPUOfRhqRe8STW1qOgyjoK6EHoDQGCUg1mIY+N1qzUFRCgU5Z548/kChYMVOTlFB/mB7hACsnsneI/jHvg9kA4RIJGE9En7nUE1Hv2Peoe9jyWig1jacjH9IQjr5q+5oB6K2JDz1dYAue+P+zaoYQMN5Rhwa24E5LtG/oPtIUh3ci0zSkpzE2fePe4ajLOrly5bFBN58ZfYqlK6tW3nLcGbaZcF7Qy5BFA4+If3BC33+kzXviFt/oYzCy3qA9+BNtX6XuQm6J8ELfp5aoSDZFY+UlECuDve1ZJvVaTsAd7bDx3nLkacaHR5qBSA1/IR62N5wlYgwdykxfTHqv5Kj3CAXcFCt7cf6osBL+6U8DeIL0N8KRKC2GCa7CcZgrOytlWr19jTYg2i4Q4Fw8FWF76CJiWkdANtLeZIIUQhTNGoecvMbBgWs1AyKN0OXtUX4qzEW+CODOLb8A3UsLyiskKRB63v0payb/tZXvubXdPYkgJzJx2GS54JzTzb+yz1I7fK/FwQakbdZ4p/WrIrxeXPCyJNvUoZizPOhjRzh38hH3cTAV/kxTQD/qJHBavEhBQqX09SyzbvkNolo3YQakXxJpxYv+Sf7eZFPhIlCo5xHDDUAFOP66Uj7oYLJFOs6lPRSdRBlNb17TVrrkcd4hLp+xMPxHuvtBp5vtrfFyYj51Ag3HKp+EZ+2FowK6rYDpsGxHfcGeMbK5B8euHp6opUbAbJbQ3bLIGxLWO9Ib/jLRwhUKc5LkY2Ecb44HsF/rlLgUc8tRsD3VTKZGQtOGFgXc9SHe0nLG9yPIyQz1Aw0aB+vZj6ZKhdTGg4CJ1VvFLNtXcY2mYDTnUX3xzl0JSY8PtgdwmyJK5pWlgt4OZ1fQZNjJKKorjwxKMIf0eRdvkXh9sc6JFgTgQYjsTTPjHHiqz5RIgRlXjFLT/roeryeJMsBTV93pVc3Th8cBCyx6O+kD9wc5K0t33N4/3/LRbGp5ixupmcA4KqVIpAva9rlHstV+TDpQ4ysf184R0Zf2kIJKyJMnbKNktfyVQ6ZSu2Ax3QvD7Yut4iCb5GCDGPltccwIYRiihjRVH8pIWySJXsFsh3jd20ij99W99dXKGWmITlsoQcF+slEFoRM2/k7ua5978CVefbYevoDk3o7z+6v3gRFlHqeYNDrRhQSMWSPrND9gcRgR6h4LPkduHdWTohI+F01006iK+dKApalSQpe5Or+/TGZhKul+YgwjbCrQDuhpfELxFwnOEO6KIQGl2RD+KgpraqQthU+IPpgGvKWHnoiXqBNK9SWdu5s/lS/zigAftXfcRKPgLv+W9Yfuln2BQjjBAdG7/GZUIvahcpfbNLrql89pVX4ajlKFZ8vaDbpcY31ta0pSICZVNj48XBFWSpf7z+dNFtHXtAHnh7tF4+6jTrDIoLRUs5UCcqpp+6M2N/4GVmpy/kbs83gnKpVbymDr4+Q1F36hc+X5TY7M3ccYuESqmIEi+h+qZE77W9DCiBCHUtK6TxTQW/yy9OefOXevV7CkYRaZ2PgP3Ih2abUnpc35LBuSx6IxIbgaH/D80nfd76WwUb+4jj6Fu+z7xbnNEfx3Bp4FdbEoUs4zvdbu3dia6K7cawNVLd0uY7h+84kyTrcPcQ52FRlj1kZ6aUCCYTMTVoXSfQorVhwSini7i7ERk6UxrxQaMurEsufxjOwuHNsHBS58yw48RZAx3WSzEJPKg7yL4X5OPeL2JnehXuxRH9ad87zt9qtGbsXO6EXBZDig5yXj//zhfRoUEOIAGD2rh2PvMiUQzS4g/Qmhe3QwAcRQ5RIEFYztXNIzJiMS5xXr/xLj+cjcPmV6BeXZF7NtQvAMIzJT+nhbQe8BLS4SJM7c0PA4CoxfYVshMePRgRg=="
        , expired_demographic_updates_update_profile: "AnT8A+FqYexP8kVT0cuE017Pox3RGGWoKmqAXVPJr9m5ASWXyilIaG3dmu2xWwMyrJ6WdQERAhGug0kAiMdYmJLYGpzJwZDdkdrRLPjKRag7e9DsMncTLymd8zhIbmwgCAvHwZYF8dw55272PxQN0tLmlEFrNtEQmrQbsoIsrFVllgeIeaoOoOlhSmxLsXe6pXp3RDCv0NU3+da+PujAqI40U2XWJexZ/KwHjNdikClw40bCk25Tf0hWtw3U4tICIdJ2uiVrxt3jzcfW33TZEgj/xjDN4FN4GUyFOOgPFeM3dEhMw1fBTJnXSEeiY7tsGjB4Mqq6BmpSLSNVEQOuetrjuCp7Fq1uXS2yzofTIZCdq/xRm0gXuPNk0N6u6XIyQWpkQ9lak8/n5rQKVJtkOkwzok/pYFnWQokY32SM6tm2HkZHF/M1els7aRQ7WrK3B7obWKg2EKNwK+pt/9BA6KH++V8amcRxNKhX1vLJRGjaYPTvNJPtPMoveqPYKPeNs24xm1/sgY1S4V22dRT3Z/tCXNiNZ87n/hLn6dpX4MZ4coDJi89o01ULLTNHR6cIDxsFVWR2KhOgxKPOdrhNVDN/goxyqpKVhomX/VIv3ycicOjH+95tbuDF0SGHnNq6nuPE0G1O7Qrzf7heBoEVzXlVOENvuKXlVrStCBSX9eir5pw2tR8du+ZsbV2xm+ZcFbQC04p+2PrWLd96j0T6wIYzu21AVPKGdArYbuHQ1+wzVMUIMvf/IvZmccJKczfpf7Ib5n/l+yhzPS+P6b0Yza+Bp45MvfwfPMchy0t6xaejRwsT1sMUXthnJs62oKIqpGZQgntcWHKAAx35GPfuyNO5QbjFrufQmGObMVenQThk5CtYgMRDIS3/WPr8MsiWtBLQjdf+8R2/BluRErmD0QQwPadj/GPINVRhZ7B41ri7JrA0q9dmJRZPD8qVshTDkx/4rkkn5bo63fOxo5+xBAzzATFgvDsaJChdKd20/vbAveMI5OCcoeQAzd6pzbwG0M8YWB4jExCEXmSX9iKcU1cZct4Ztiypsm9O6JiFPUTmU4cWO1HXaEhHcdtYjYoFc8H2CQn3ZCNaSbSWxgq5ucAf4x5uVupDlAaAjp6ZWXe9QjRHAkrZN1nlVfxkWGg58KRhS/NTS7gDip56+QoHDFcfg4rXIc3Tzhp7HB0pnbDiPPqdXqJLuZiL34yPTSEzWASNdoGYOpsYqibC9NP+bVun6W4QIxLs/4F6VILXfF+W253QxOMc8d9TIeBcABP/79JsKqZ+ydWlG7KuBJvVCDgBV0RpO9CwUs9Cn4c6Ed2EdF7FciGnAaRp0HFA+hgncplbLp63hS6BLOllp49JR0KovcTKGX1BcZ6/t9fesDHOVQOM3bSb4j9Jnr4H9Zcu3wryDdu9WFIo2C1aQCHNfyetNi5Ut9krARXElKfa7xaAd3qbb5QGdrVytPs2N8Vmbm3kwt7l5V/4utPUs8maqSjRoSdJvgmTwL+G5Y7mMXWr4pe47+o5L525gs5Kdid9mKtGEwlITnCTliXLMl0gbwXwZR58/9tokc0cxkWbIwt+zsZhKuDlSMxfvC/FZvsCaBP6igAFacdM0X4J8eDXDA=="
        , expired_security_updates_change_password: "hWplCyGRa2eKUuD9r6uZjOKUmxYFn6SQA/vl4MlYaYyde+3IWdw1Lae9hZPUFlbk+LNyF8uJXVjfdvma6XYYO0J1sbW/u4l2HWXMVi6n8MeCc+HOefWsCgCmdyXKo732Iuf7+4VMEl45lO/7d69J9ZsyuIOQmvjyDmb8qgu68aN4lOlX4ct492rSSewmazWjVdgnALFM6orYYtiOiMzG2qYWAapDK0ycIH5ZUJOx/Mdc8CYIa6SmEKT1M6BiQNd6d8EL61sidGrkTqzSKuO3tNlRWAwY8biKNg+gCPs0/miNfIABx7iZH47HcfuSli9PnL/9CnKpvOlBWoIDN2Vs64Z4UYq8sEmpTc51HJeHdhAPAHpjTPYslWOui7+rw4BX4j9pfAFZo791/WiptJYgZukfFO0GgfCHBs+hNXX69i/rlWZSHYRek/NhTs4ogD/o+umf8HXAuPdy6DoK8OtNZPcwGygh7SonnIjiw38egxsezNRyjMN6qjEDRdElm7DKEA1nq/qB4ULz+2JIzt3hiGtXXofBHSDE9sqPpAWWTaIA0gAinSKcql4nR8gOo/MzKQsuf9hDm2fvwmPfkE4UA9bvEjpvOfJDg61nTOxtbDF6v252LfEuAHn9i+wm6XWM0GNcT6EJQ/apQbqLU+RfW5EfUMhoIrdhLWYvkJTc6724OL/5TqxjbjjKhhf9mnsk00iL88vomt7De1rIcifvH2XBSmf78JkJIzFqtHJI7ARsFi7jnrsmhHtHgy2wyJe2deScG39x7w3S2dC9rup7oTowjGzgLHcCWX9exm4qIORcAhLCiDMELxGRi3ytMkoiSX41jA2+lhtzZs+nP9LBZw1ciatSSFfqqDU6TWO/jWPIcRCxpj/efN0WYwUXHNgPoPZy9ZnMYa6j5Gc67OQF+iCN7J4tNe+AEUtgasa/PuPU+x5hbKKtsx2IRZ3iJ15xt6YxxAsq4vdK5P+gdXixbFpW09wYdvulCHWoEDDb93AIB13W7Ju00lsgX1JkLAo6m1en7ZuBGVR0hTy64Q6/Gr7ZR1/0RdaVANSTaDfBKs6O7OqC7PYY2E1/q7mGC1miRFUjugoltljrMTv4reASck4qujEJNNTA0W7IumwZQpag1HZDjNMWGsX9qhfMFHApiocseFkw9lc4hGtusaUr0BJ7kOv6920HF3Hfwnlwq0oYgEos1tEl5NzMPhObsVMfUDi/xBSXxOKt21Q4iPvlgUQWWcv2tjHAY4E9Q+9wm7zC167EQ7P8bQh41czNx9Z7hFlKQgaGuogscIw4FsdQ4U4XeYhcUDe+NObCXCtpdQE61kuKdcTIRRp61zjeHe/+yVzStTs/LZhiMBMXXaJLfr/dvtwpSpN5SOIAn21KAmybp69nIpeSkXCYb2BhdwUPkiUHWYQfN6DCQEYGQwaWl4k1S91qKjVKN7vOoCaSoy4GNR2/9yiw0jtFjfFXjYEhikJ8oeKFUzkGNc1+eDHTr7ESwKDLbwTSRT2AugiyLWW2sZ9TzKlf/uq8vgAp5yQol2BszGD94r3Xs43vf5DJXgG2pLYNz6QKu1lSlSMnPKZZvYhyiBW4/mzXgePqs4TN5kXH68BH/CNWB1NwuxZUbkBzC7LiIcQ4ALWr1/E/0v7Mr/Ut1qoJne8eMwIa2/s77tqIYYV2KvjAAR7Tc9MF3A=="
        , expired_security_updates_change_security_answers: "qqNS6d+cDhYg3dL7YMk5RXbCz5SeHzxPFYJVE2lxwm/uCERjlE9GJT56Y0hX73mEDHc1S4drJoQLLrEPG4oRnqpyxRAuFOcQKMB6RlgWJiYBqs6O6deiuqPuOZ+Bd2r+bh+7ZMHfTT0/9M9MVsZtERj5zrZAEN4tYGdUZ64yAeTp+ETqMaXVfAcRPLUurZz3AMBydJd3uAy+QyiszKSFSOy3iOtqUUBGYhzj5g4Cd7sZP5nIWr5t6g9rhPGP1Cs97rUdF+BNvr/pxt4P5gyIWhUJM3Ax0i6Pa6utz33Fd/Vn1X2Db0WjndErlpBe+aqaGSasbuEgF9HUsMGxEY+nJQ1SZkhQt3DTFPbY5IeoZN/odxBKfI1nxH2JqKKd/gO7ppxmHNvxjXHtQr/TrvcoCq1geCofClqORGZ8ymVBpBV5WE6p3duqS1Fbob6oyjUq2ZU8X0SskBIs/2AMIpr9vqvAWZjC5CPcnpTMiblnBEm5SbtKpgFWLnVsrdfxxYzizgBavBmAEt6tybkRebcBd3qgAC8BnjKT6ppTzvMt+bqaCGPmzjvG92xubma1xPV7o/dPiJa98YSf9UYYrqFKn0GfhuTgKp8byfrqQitVmdXwLeU+1uK1fNodXsgSeZICmbHGyf+Spq20U7zzmmi/zzPWTPgFUEYlVonSEJvWsRN5j5nWNBXA0y/G3pWuDoua02AYp1lzHuI1N1f07USaYw+SC42Hpdv25/e3N84oh4jIe6ceXVcCMRsdOqwpor3lMLSF9hmxTx6uYOtuohLDPt4NQkP9lC7bQ74a5sFR+Kw0UT/p18klvoeWVsNVtqohT4kbl/ushVqcDWljfN2d6fEyo21KsnDqPGphiFOEiyWdb7E5uqC/MFtI8PhJ97zYGI5KFn0qacZlX1v+hGgNnAu+YLk6KMUGWmtLhLoLxptiVoEEHn4CiGAi2RhNw4z1XRT1YwWbp+6jCLOaMW+SJNWfPZb8glf78cilaoKeZvWrnfKkfUJMFRebRwCop5T8cLrZfQK0fGbB0RrdsABnG5IcQkzSsmeFUjbW+3GZl3jef5LQjx8JqAzeqZaKkG7GZttHJiu1bs5wsRSSvNo1AGAwqfkKf2p/PCNWtr+abdG6Gns1jWmyuVyPOjv5ZuE8vgMD+4zmK2IabTAj69wMiZQZ5L/Fl4Fbo0fwbEZRYjNggLHt+qvkNOLUhAwzv8QP+I+ITbD9nXaE3JdcWsJ6b9NgbM3VufUQ6dGwgKqzbaQko2INJWFN1ND6RhOIVxT1y6MjRQa8+vFXk3EtTpN7LVmV6fIeeRzXXb871YfbVT/m8jJfBPp+gSB+Yeok9dmTRH4LBbfqsCy343Btg6dYCcF6Io/l0ZeGQK/7XTsQHiykJNIu6fgjv1LsIyFjXUwsACrN9mhihFHlDtFC/eTL/XCxq5y/vT8fCBTZatYKQY2/9O8LO6BZi32VpdQYmzwwMrKm4ViIKQkNIKlPQsRi3UHJ+1wSAfkWCdImn8QopHq4U5izSOWLM7Jq62/2XzhmRUK/gH05+iPN3A3R2zOvoF5JfaCcC00NHD35P5SS9D7PVj1K0uacYSGjoRVQVYN6AclxEGLGme/TAnM/+0eOOc7H+P5Oql952zugpv0uHYdp7d2mbzq4jZZbftXXKzQjpFITyu5ZQ+uTjgoSfY4Dt4fmf2LUrYPgMzfbHRhMgEI="
        , expired_secured_demographic_updates_update_phone: "hWplCyGRa2eKUuD9r6uZjI7IYZ2Z02v7TaGAAgSoU28PT/Snk1gv74V1A+tEgVQNLVDsVA/oFH1hJMGL5vDTjmUZnZmZf+IZ7sHUWYn7SjJU2MGj6O9732vppn3gaEfKvG07x0P/7JhES72TRWKwyTouqjfqpEws7qupatrQbUgec+gauIz0LzlX5koD7HJsr667qbLCNQJCMthazDVQk01B0tXS9+dA7Q64nDXxYMFIUXCloUaCCZCoPqRaK+E/W7eqdzNpKFiHvaowOJRaMxVl6SmXYnPi0UNvJPcnY8KLamo/V9mlZ04GQ0GfUTdg8dpSX9SB+eZHeuxISu98IsgZzAske8DLU/z8ljrfmoj9VlIuVNogreaNLTjly27JdGQsAGlCRPuzxoqc1KTmS9L9rYkAj6BDkOAv6ZsAx7aADSQ0QnIrvOMjdbsZT6lyaz78FHb5g9F2on2DhwMc7ytTQCQiEX5S0WU5B7Z0zn8hUB7ie6uCtMfHxvEvFTmAo7KT/9YgTo+euUD+lnya2g1YM5Xy9PbXmA3hBK9+xDoN7virQR0lSmWJvhk5jRWMRP0909HpEeeGDd5XeBNeAb3ApWfcQJgDVyFXyHq15tUwhF2KuhRjCrjRF2SaOEnnimS5OH2e95NS/DPN6XJ7HrVbyDwbffZ+BxMZ06F2dFL/MigajcojTowhvOANJckUOwUqJEEJvHmXdRNabvshd1kLaCwSFe/Pt62EejXhMl3apJVYndKjHRuO2zWQpSoBs5EmArzq3mPpFh3XKs4AyjwphnJhuvqAxG2hHdz/Js9ZhQmr/OjpMKbgqOdFWDB4sch2/VcWYuUwhUR3hJqWUCPvNQ8j6E4WFXzsYSC7VsR5PSJ3Wn4UrgmzL6L22pSVgfw7q/dN5p52nVeycgEZx0ZnyDmQgicKSPhTDENWTr4/G7jAxKGoVxgkkc3mu/b8p7S4fyfbMkKJ/r6kOc4p5an+4glhpRmphlBj23C+HOBUSfWQGAURocOiDIDaDrWvgDnz+fkoTUjHQtq/pEp1sME52Ws5x20b645Jg3wDegXwwYA/lhw2UmD2A879Yh32+vN5Bdrx1iN6x8oMlGXBCcBZ5ogdfhWm/94gChVuCeRLK4o6Msh/DUQ6sXLvevrUpHcsSTkdzghJBk72IX9D38FmcGjRd8vC5j6FOUIo0d/fp2uwYDgTWIlN0YhbF+4BmxqA8GyeUz1kBohQ9cTKeDR92jGaIrQ8cew7Oonrqu8bh+PZmemzQGQ93iYkptfOFDxNSQf37sXomI/yR8x91RwZdQlLp8qTdXkDAtsmp5YV81iDj23NVsnyK0r9mdcEop5AszYumBx8fPlGEhwSgMeC7fvNRb2v0v1iQyzTV3a/5hI8DLQcKX3ME7EggbvP66c2k4SybIu5ff+mTqdkSpfuDd42mSLxOF+bs7A+ESBGsbI8fJEYtzeCzMYQ97NYtW/9m1/kNOqZbwNv0CdsCDPLKQTcn7J9n21Om1WpesKdwEKes4+zl4qiUJb9icM1rOGgU7DS8WplhdiRnlkM6nkDno2HNaXkmyHlv3qUjMkR/OODHwft2PnxNVN0EDFrgcL6vfXY8qtmMHc1OK015Oz0CzFR1T/Cx8OnLTMpUqlmZoaO4Je+0JsSM0FjZ+O3CVKXKEPGkowfzf+RR+JAD4GUecwluGX4noFOcIyQaqh/x2PUMwI4uvPN+ah4gavC4dDabEQd6AoOi4CN+7ehxZkhfyn4CO+S6cnp0DUqauskJAl6Vlu3QIE+T8VkVKGA6GPNBL5Czv2ftaB03X+cpg=="
)
WorkingConfiguration wdp_configuration = new WorkingConfiguration(fiid: 1340, granting_url: "http://localhost:8089", resource_url: "http://localhost:8089"
        , expired_token: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlZXVS9iUUJEK0s5WSt0U3BFUGppQzN5d3VSVzFJd0xRdkZiSVdleEsyMkx2dUhpRXU0cjkzTm5aTTRsb3F0QkJGeXU0YzM4ek9UT1o3Sk5Ub095SFpMNnFaNEFtbkJaQ1FSRnp3cWhCR2taMk9BY3RJNkEzZHdIZTlJRGowQTgvemR3akxnR3VtS3hJK3R1YzExT1NCZzNURXpJblNGSlFTMGptaG1qYTQxalJkQVNzU2ZuL3N5TnBzR3M4azYvT3NwUmk1TkxjNVM5c3JYWHMxS0YvR0Y4N1k1Sm81eDBaSzRHbmxYQ0RBQWo1Y1JoOHRhc21TZ3Y1QWh3VkloY0RvNHcrV2d5WHFWQWtwbTIyQWo4YW5JOVFmSGJuNEdSNzRlNGZlY0g4UExRdkt6WXltMmtpUU52V3l6TUdLUlFhNXZYdjd3d1B5WktPVkczSGNnWWRmdE1zcG54czZ0L2tDbjZPZ3pLbWVDVm1nZ0UxaUZKeU5SaWQ0OFlJOTErS1VraTJvaGlZeGJ2SWNoVXBUamIwTFNXeFdSWmlabkR6ZFdFVXFTckQ1cnc1L2ROdUpRUzRZZXRnbjE4ZWtjY0htRklDRGdPMG41NmZYR3dZTnlEbm9HRklKK2pOVXFEWFNWbFBkb3dadk5ydGtlNUR1b2JJWlhrVDRpcjlobndrNUYvb3JTa2ZaTjVxemJBVXhwUkxWR290NHl1OG9UeUY3bjdoVHF0U0RrSDJSM3lEd2RCTDNSSTZCWjVQcmFUeU9Yd0g5Z2hmWkdsN0JuQ2t0VjY3dlZNMytSeDFUbVVXcHRnT0x2dkZybnZheUFKdHo4dGF6MEZRSy9yTXIvWWwzMi9KT2xWbFA4bHZYWnJ1eFBUTVZ4Lzg0VkRlTlFidTQycTF1aWFoaGh0Q0plT1dzTlgxYmRNTnJPNWJGMkx6WFVFZ1ZIU2NwakdZSUZaS3IrbFFiUnRQbzJMbU1XbTdyZURWWms5aitQa00vNFNiT1ROM3BSRUVxZUtaV3JPcmFmUTRTZmhxbUdDNzFUcXAydSs4UTNMRXQ3MWx3Wk9MaHJodnMrdTYxZXhRR2g2RWZERHd2K0dTWkNmT0JaY2xrMVdQc3VhSGJOZDd1ZzY3S1ovcTFqVk5ZMHlSbkJkUHJaR2FHcDlhVzVpMDFkZ2lxajR1UUQ3T0hQQUVwTFQyYjR0WnlaUTI0b2RDd2JPTm9jUTk4OVdmNkRTWWhseU95Q0FBQSJ9.qWQARZyVgO-UJhLOgvxciSc2C3Dk7-rVIQd-OU-v9UBWVdrnA887LROzVFAbunsGn58NBSabiS4nEpTdn_9xcQ"
        , revoked_token: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlYyMDdiUUJEOUZXdWZXaFVpSnpFUS9HWnhVOVNHQkV6N1VpRnJzU2RoaTczcjdpWEVJUDY5czdGakhOZFNvU0pScE96TzVjenN6R1RPTTZGRzN3dkpucWhtZ2tlY1prQjhFbkRCaTB3WVJmWmFCaXdoZm4va0RnZHVmemc4OHJ5RHdXaVBzQVM0WnJvZy9uTjkza0JOSHpsSVI4eWRJSTVCS1NHZFU2cHBoV3RONHpXd0l2N1A1NWFzenFieWpKSXV6MUtLa1hOemw3SzR2dEtOVjRYeWJYTHBURXlxbVhOaXBBUWVGODRsQWl6aDAxWHcyYUxtTE1yb0wzUllnbFFJakQ2RDNxcTNRcDNLSVdiekJ2aDRjalpHL2ZHeGk1L1I0Y0E3Nm84T1BMVE1LRGR6R21zalFkclU4endGS3hZSnBQYmVQeGdka2hjYkxXL0VjWHQ5L0tKZFN2bkMwSVhORi9nQ0JYbEs5VnpJREFWc0dxTGdmRHcreFV0LzZMa1dKNWRzU1RWVWlYR1RwaWhVbW1yc25VOUNzeTdDM0tUazVkWXFZcEdEelg5OStLdmJUZ2h5eWRERFByazhScFVMTmljREhBUnNQN2s0dTJrWVZDQVhvRU9JSmVpdlVLRFdTRnROOVlBYXZObnNvdTFCZW9EQ1puZ1o0Q3YraFgwdTVFTG83eWdkSno5b3lwSTF4SXhLVkdzczRobS9wenlHWkRkeFoxU3BSeUc3SW45QTROazA3SWdjQWsrbU43TndFcjREK2kzQUoxUW1RYXp0MEtCbitCNzRONVhNTnVrYUZreHB1WGJlVWJ1Nkg5ZWNrNDkrV1BVUTJFbFgybFhiVVdVMmsvelJ0ZGtlcW82V2grRi85dnkyTXFnWFY3M1ZMUkZWek9BN0FTK2NqYVpyaXphOHRtTlpqT2E5aEVLcWFEbEpZVFJES0o5Y2w2ZlNNSmdGSjg1VlVITmJ5NnZLbW9UMjl4WDZCVGR4WXNwT1J3cGl3Uk8xWmxYWDduT1E4TnN3eFhDcHQxSzEyMzJQNEk2dGVjK0NJeE9QOXQzaC9zQzljWS85NFpIdmVUMWs1UytXbVRBZldPVk1GaDNHZmRkMzI4YmJmZEJGL2txL3RuRUtheHFsTEdONms4emM4TmphMHJTbXhoWkJkWEVSOG1IeW1FWWdwYVZuazkxWnJpd0JHd29OcXpxT0ZnL0ExMyttUC83N0dRMnlDQUFBIn0.KK5UUNMQ-6B0a_EC-LClfeuLfe2lSy01RKKtMOim92Vg1lpfrmiv9Nq2EWJ1CWVTNlHk4-LBlmOADdMIJ_ynpw"
        , expired_anonymous_anonymous_services: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlZXMi9hTUJUK0s1R2ZOcTFEdVVCTDh4YjFKclJSYU5QdFphb2lOemxRcjRtZCtVTEpLdjc3amlHa0lVT2FOQUdLaEgwdTN6bjJaNTN2alZDam40Vmt2NmxtZ2llY0ZrQkNFbkhCcTBJWVJVNDZBU3dqb1RkMEEvL002d2NEUHdoT3ZSUENNdUNhNllxRWI4MTZDelY1NVNBZE1YT2lOQVdsaEhRdXFhWTFyZzFOMThDS2hEL2VPcmFtbXpvenlmWmxicXhZdVRSUE9VdWJMZDFtMVNoZng3Zk8yT1NhT1JkR1N1QnA1ZHdpd0FJKzNFVWZMV3JKa29MK3hJUUZTSVhBbU9QM2xyMGwrbFFKS1p1MXdFZmpxeEg2ejg5ZC9BMVAvZjZaTnh6ME1iS2czTXhvcW8wRWFWc3Z5eHlzV1dTUTI3MDNHSjZTbGExV3R1cTRQUTgvak1zcG54czZ0LzBDbjZPaHpLbWVDVm1nZ1UxaU5GeVBScGU0OFlLK2EzRkt5UlpVUTkwWU4zbU9ScVdwUnU1Q0VwdjFKY3hNVGxhUDFwR0tFbXovNjhWZmJEc3h5QVhEREh2a3pUS3BVNUNjQXZBaElQM2s1dXFoRlZDRDNJQ09JWldndjBDRlhpUHRiYW9YOU9ET2RwZnNQcVFYcUd5SHR4R2U0bC9ZMTBMT2hmNkcxbEgybmVZc1cwTk1xVVMzeGt1ODRzK1VwNUFkcCs2VUt2VXE1TDdLeHlwc2ozb1BjNmEwWENjZjZkRFRTYnluK0FXVldaUnErNjR3TjQ0UFhxQk41OEhCNjZ1Q3ljTTBIaCsrOXk0emgyWis5L0wzOEI3SFJ5Tis5N2tmSEQ0R252MFhLNDkxUURPOW10RnUxYWlXaDlDSmVPVnNQZnRHYVN0cnQ1YkZhTzgzVUtnWG5TUXBqR1lJRlpMN3pXb1RHRTJqQytjdWFnU3VrMVYzVFdMNy93Njl3bkdjbWMwalNoU2tnbWRxTGEydUhlb2c0WmRoaXVGazc3UnFSL3dKd1VIYmlKOEY5MTF2K05rTlB2dG5ENTRiQm9QUUQzb296WitzUEdFL3NDeVpyUFlGZTZIYkRkN2xRVmZsdXdaYjRoVGVhWkt6Z3VsdE16UERVeHRMODBZZk95cTFUNUJRRkxQWFBBRXByVWFiNHNrSzVnYXc1ZEN3Yk9wbzhRS1dMTEw2QTdPaCs1bTNDQUFBIn0.K2Xwu9dDebbNw3hb1g4N0QQiGDRlTaym_fX_iz5MfsdNQB_Z8iTxED9iIiJa248iv0kcxYLAQ8lnO0JVqUDXZw"
        , expired_read_main_screen: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNVlo2M09qT0JML1YxS3UyaTk3czdNODdFeWNMM2V4QWNjUDVBQ1NzTm5kY2dsSk1SZ0JIc0R4WTJyKzl4TzJremk1M094a2RpYVRxc1NXNk1kUDNhM3Vwdk9wUVZaVmxCZnhqbFJ4bnMweWt2TEdaY1BsaERYZVBYc1dzOGFsZXFIbzJnZTFxYmMwdmEycjd4b3g0MWtWVjl2RzVhZUg3L2RTeHV1TUYyZjU3UmtxNWFkQktuS1VXWlBSdmRDeWNmbkhwMmQ3OSt3MTE0eTl4SFhZbFJxWHExREU5R0c1a2h4SFprYXllRXRFbW9leDRQOVp4d1ducEdEdmFaNDJQcjlyTEl2NGpsVDh5Sml0aEpDYlpVV3FsUVRVOEZhVThySzhYWW5HNTcvcUJ6UmY4bHIrL3NzOVBKdkUyWmxIQzg0ekNWQnF2b3NwbngxcDVhRlNMbzBuVGRib21mQ0U0TWpkNDlWTmtiTVZyVzVJSWJjcVhwUm1GcEdNOHRyeXF5S2VwYVJNSktWYzFUQm5UNTJSOEcwTjlZK2prTDd4bHp6WGlkS2JzZmVDVmh3WDFZcUlyalJGdCtEU0FxOVJWWE9CVlJyeTR0MlpWTHZaSGhiUEZMOTRXaXN2NW5sMTB3ZVlpSmp0eFQ0ZSs0MHdHRGxkcFRLR1pwS01ITVBxUk8vN1gvLzk1NSsvLzBMMnJzOExHZTIveVBWaDkvMnZYMFFGcnI1Q3ZjY3JUd1lZcnlFWVA4VHlMN3U4NXIyaVZSM3ZVcVRudlVMdlY1M0xtcmp5TkI0bkJZMit0K3dIZy9XejI3eEk5d0xzbGFqaTdxb29lRWEzMzhHSTc4NnVLTTFYV2ZVS205YVp5ZVh6dUt5S3ZZNS9jTzZYRlJ6dkN5bkxkVjY4Smg5OGxWbnZiOExiWGdDWjhXQkJzcExRbXZWYUdpOHZmcndEdjVDT2FpLzIyVXNaNlJzUzhkZmRsU2R1ZlVIemoxSXNiZC9GM1RkS3RJZGM0Qk1oZUhWMHpVKzZwMGNMOHpHODhlelhaTDUvY3Z6bnllRXRBK3doWVpZbkdmTW5HZi8wa24zM0JPbnhqTDJwVitzYkpMa04yVHZFNGxzYXRlOW8yVnJVS0tjSnlvVDg2L0tQSzE1K2p5djIyaFlTTGRrYk5qSW5sL250Zkg1U3NRNnUvMGt1OXpWL0QrV1dGOTA4dTQyTDlPZFVUbWtTajh0M25tcklYMU83dis1U0grTHBVRGh1aWxoS3FYNVdoL2Z3d3ZKVzBkM2o4bDM1UjBYMzM4WlVQNHVyV0dwL3M4VDJZbkRWa2c3Tnc4L0g4ZmpLOUVMOTlyeHZMT0IvSFFrZUpncmtnRzJXN2NGSktsVlJkT1hrcC9WQnI4Y2ZqMDI1cExuYXJ5N1Byckx0MmYyVEdrZzlML243OFVjOS9kalBEQTdDMUE4WDdjUGVabnNDUSs2ZUt5MmxxZXY2Qi9sWWtHeStJdk5hTk0vbVR4RTlQVzZONzNSOWdEbXl3VE9tSWw5VnNSUjEyWEFQM3c2RVZ6ZFgzVFBuNnV6cThWeW5YRWZETmJ6NjgxSDA1OC9Tc0t0RHZ6VXJPYzB6VnU2SFZVcDlNbDdJRWhtWGNjV2ZRLzMwNHZpcm5nZTlOUHc2N0Q5T3ZBN3JJNlRENG45QkhQYS9CT0pBUWV0NXpIRzI5U0NPYjVaeHNYMnk5UlJXdFgzVXZTcWxnMllpVHVQcWZ1dDJsZTFyRnhFbm82NlRTUmZnYTJuZ2xLM0ZqQmVGTlBGOUFCem9UaDVVZlBNZ3Rjb1RYdnVaYndkUjJLUHhPQjcwMFE1dDdIalFmaTgzbFZDclJCajN6L3ZKWEtHSzZEakl1disxc1FnbWR0eU9JQnFnb1ZLcXJoYU1LYlJNaG5FWEdsRnp1ckNHVkF5OEtXbzV6RnBHb1NiR1BOMjRkT0ZXUWJmQzBGeU8ySUxxSkJYWFJCRVlhdGJZUVd4RXpQbWFRWEFlTGdZRVFLQVJFUmdrYlNvNHJUU1FicXBBRTJLcUJJV1RBQ3RNb2k2Rm5ZR1BCeGdZUVFmcDdHT291b2x0bW5jalJkR1lCa3gwelhLb0J4NHlBV0FJUkVDSWpldjNtellNREM2bUtzQ2dFNWpxRkVwOERtWWxNU09YVGF6SWg5WTIyRmxqRzBhR3AwWG1TTU0zTkxXcWNMSzg0NWxJL1hRVDAwa1VNT3hLMlczTS9JRWRHRlpsWTVBSDJWd1Brb3N0VkVFRTFVSGlxa0Ixc2lzMXVHWkxwbGlENFE1WTJBOXNyQStHUkd2YlF6MGFJQlJBRDBlZEVMVWRXOXRzN2Q2NkNDMXI2S2xMMVo0d0swaVhHMjdPTmI2WXQ0SnV1MlBqcTd0Z0VSQ1lSZWUycWNhZVJuZHdFdDFSLzJMdCtwWlA5YURGcjhVT3F3d2kyTmR0QTF4N2l3Q0dQWE9EZFZlbDBIVVFuTitSUk4zUlhxdEpkNEV5Mm5XTWNCSGNrT3ZsS1BTeGdWTTFDMVMwSWFqVjQ3amowUjVTeHBZWURUVno1eVpWQzRrbFJqQlorNmk1azdnOWl0a2FaVWgxRkx4bTB2OVRQUUs0dDRtUVlhMWRwYkxDU1g0SEZwRWZwQU9UNmxITHdaSHBtcEZHOUNYeTlBNEdDQ3ljU2RBaHBwQTJLRlhwaDl5Vi9uY05NSENVOXNBWExHT0xqdUdLYUltdTNYanF0NmRqMURhaDVxNkRERGdVVzFPS1dNdTdkcHV1aHBTdzJ3NXMyTEdoRnFVZ29adlFuRy9ERkFkVXBXdVlxQnVNN1IzdlZlclljSGRERmE4QnNoTGFMVFdNS2cxUFRCVWFiQ1J0dUtaYXZndlZ6Z0trNXRvM3dVTGFQWEV0RjA0enNSb3ExZ1FMUmxCbUZtRGg2bkRoS01pS05rN1NWTWRtMUpYVXFxT0xCWVNkUHVtV3hYaVNLRHlkYi8yNGJJMlU5VzVzOW5YUEdyU2dYQU90U2ozVFVWeXRwZGxXTkFKR3NrSEl2Um43cXVKbWFEUDF4WVFZd3ZCU2ZJUGxlWVBNdlo1aW9ORE1VYWRKRU1IZGZDZXhaMzZ2QmRHazg5RlZ4Y0FWU3h2b3k0bThGOWN1SEh4MHR0V0MrVmFHZEZ6WWVMckRGclBCdHEyRGhkRERoQzFDMzE0VEFYS2tWVm5vdXh2WU03Y01SU0xVcU9LbmJrNG11RWQyVkVlWjVZMTBObVFxN2s5VE1SeWIwNVlOTFcyb3RBb29PaHJydFV3QTNkaEoydzVDemk3VTJ1ZCtYTzJReWF5UkRneU9sMXRraVY0QWcvNDBjUk9nYlZ5Y0JpV2JNREpkdURudTRjaFBxdk5BeHlVejFYTmt1cGhmdS9iWTZBUkIwbTdKWElNQUdyaHVzbkY4cTlOeEo1MHQ5cTBZWElQQzIrRnNPcUZxWUFKOW1yVFg0UzV5UFpYWjBGeHJEbVEzMGc5cUNJRlI1N0orcHJ3ZmFwUDFxaTFmQ3NNUXJQVW9WT2ROb0RoTzNKT1JCc2sybmQxT1p2R3VaZCtXRERpZFdYQVJ3NDFwdE9OK1BDQmE4eUsrVTJSd1RVZFh6b1hJeHNvQWYwVEdKRmpYLzZCNFZnMGFtcUplL0tib3Yya2ZvS3BjNnExTFRYL2YxdFYvMVMxQzQxbWRlRUtzWGlyUGlWK3FJTWVlb3ZGMVZlUlRRK1R6T0p2ZENsSVg4R2FONEVuNWFOUjZySDdmcUZzSnZWbXY2djVqcjZ3dTQveStmWktQRy8vblh5L2ZYcGNhbi84TDM3SEJTTmNhQUFBPSJ9.-GsMiM4ljcNz7tI3Rbnix7jZHKfWpFkmLwksqYjQEqoR4g8nKYeqtXVz19Qal0SYqxYAB8IwLIYvSM9DaIvv1w"
        , expired_demographic_updates_update_profile: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWStqdUpiK0s2MzZ1ak5YNXEyNjBwOXVVV0FJRlp6QytBVjhkZFVDeklRRVE2aUVWSURSL1BkMXVucDZ1dnZPN2tvYktRS2I0K1BqOC9yNC9INVhYTWJtZU5vdnhiZy85cC83b3F2dlB0MTVkWGZjbllxaDJWY2Y2Q0NMc1Q3Zi9mSVQ2VjdlZlRJZWdHVitOR3pMTVczSHZ2L2xiaS9yZnR5UDg5Mm4zNys5LzhsMGUrM3IwNGZqYngvb1dUKzlZaXkrOHJ5UlZWK1ludTgrL2V2M24rYitYSDViOVZuKzNhcjNXYjNqY0NuVnZ2bzJ2T2dWWHhmTG90L1BoZXFPNVY3Vi83enVUM1ZWbk9RL3FtTjM5OGN2ZDhOcC82YlArSFZoZjFGS1Q1N0hZcnhvZ2U3U1MxWFY1L052RjNYM3g3OXZINnJqVU4vNGYzbjVKdDRYTlgxNE9SMS8wMXRvR2ZYbWIvdXEvdnlWWEorcnE3WCt0TmJ1WHJZcCtZN2lCdzVmR2ZDOXByMk1MODJ4dnpHN25QYWZ1K0xjYWpJOXVzbjUrVWRydFBWOGsvVmZUL3BZNk5LVjllbVhteXpUL0Q3NHR4Yjk2N3B2NGhkVmRiejA0K2YrQzRWZWJBQmdnZTkremtmcnB1c3ZweitldmhqODd2SEw2Tk9IeDM3KzhPZVhtM3czNC96ZnVyNnAraWd2MWZqT3pQajRzSHFmbStidnhOQ3o5OEFCdG1WWkgvVm5WZlM3UzdHN3NhNzczWThTL2FpRm0zemZqOS9GM01Ub3AwVW5yZG05WnZYcERyKy92Uk0rdmp3K2ZVZ2VQenorZGE3dlYzMVYzRjE2ZS83RitnL3RFdkp5ZWpmRHVhNk92ZFNXc01EdFhQV3BmcjNzejN2dFd6OEordnZmQnQ3TjlmNHV6dDduL3dxdTkvRlhnZDRIL3luQysvei9Kc1E3UlhXcXY0WFJOM2IxTk94UDh3OVRQNG8xem4vdGZUbHI4M3hXKzI0Ly9qbjEyNld2Ym5TRitpNnF2Z3NxVkYrMWVqdDVWWi9yMDBrcitFL3p2OU45OTJHc3AyOWN4Mk5iMzZ4Y3oxRlRCdFYrdTQvV2RLRlR2STlXLzlDVG9EUkhWZTdYOSt0MkJ5cWczSVRDUC8rSXFhTVpnOVVyQVZHOE1mSXB0ZWhja05hcUZvbTJub1ExUjNGc01qdmg2RUE5NWlZR1dram50TGtwejJscnBBSkU2d3BnbTVOb2ZsNlVUWmJvVkhldG9YbmFoWW1Ibk9HcE1sQ0dXcU9sSG1waWkxMWx1N3BTSmdyV1RVK2liMTVMR05sbEgxOXJQcHJFbDBWdXVPZkN4N2xnYmw0WmN0a0c4Q3d5dUM2WHFCY0VUbmtYWDJYbno5VkIycVcxQXpFZk9Uc29FeStzRVhSbmJVeE02cEFaaE9hek9GQ0xkdU9FT0d5VGRyeWtCc3U0Y2xQWllVK2ZyU3ZiNWhwM2liVk5SeXNtUHFpSnNsUFlDQzNUeEVOL3dqNTFNS2lNd216MC9IREtNNlZ3aG1ISlY2cjJjTEpsZ3kwTkhiMis5R1VIQytSRlNYVlFNL0dWaVlMaHpMekdTVHNGQ24vd2NqVXdac0V6WlpodGZkRXcwc3pwMHVTY095RWkxVnRGbzN2YTVYWVpyazhiQ3kxYjVqN0xsczY4bTliSnNnTjFpM2pTUTdPMDBMWHNkMVBsc1FZckZKZUxlMkVCM3BlbTBTV0FBc0tIRm5tS2syN2NFeVptdHJBbzVkR2hZczJWZGthZ1pVWGJFTTkxQnAzVVpOZWNSU2h0UjU0dmtDYWRReEdKMHExZlhjbEJpV2R6T0JGUDZ6a2M3bm1nMnRTTUZ0RXhqM1dOeFQwb0txcDBXb3NDK1RUNkZNQnB5eUxPL2RVVFU5RmNFd3hpTlhBU2lpSU5tajMxUmJ3bE9Dc3laQ0x1bkdQaVdvS3BJZTBHVU1NRWlQUU00bENHT0pqYUN1SU5Ob1pyQ293MVllNUUyNGMzWk96ZU5rdHJvUFNzbjI0Yzk5R3k5YWRRa1BWYnpWeGVlTzFiM0lzOGhqQ28rcldSV09LUVd4R1ZoaEpWcnlCbmp6WUxWWXdzYXFOc1BSZE1wTEdXb0dMNEloV0xwY3ExMzA1ajFRME9hZGVnYkNNUjcwZndiTW0xbUZkWmZWaGJ0ZDg2RWt4TEdjRFhnc2lwTkZjS2MzK0pseVpNU1dXam5tMElnVGt6QlV0TjRPUnNjQVJyN2lVZG5kUVNBcVdyQTFsRWpsVjBMMXZrbE8zVXNrTnVwOTNPMlFZVEwzdXgxMmZhODBCNi9OQmtTUnN0bFhiRE1oTThwM0xZaHFLcmV1MXJCK1lSRXc2YlpUMnpEQlZJUlF0ZG1sWjArRXhOYkFqRjFocXZUR21HOXVKcEZjUUdibE1MUnlLSVFkSWFSMEViSG9jRGUxN0VOUTVRdkEySGNPczFxbFpOUVR6Nmxsdml2dXkvK0xxcnozL2tiQkJsS3p1aWZWWHNINjZGYVM4eGlGNUtIYi9FaTY1c1B5NTVPOFFGc0djV0NvaUNhY2t6ckxiOFlXWjl4Rkl3SHRKZXZURnZaMjdBbUtTTGIyamZjdVJCMndFcVFnSjh5bHZuTmRWK3NURWRJTnFkUVMyRVVVL2Y0bUEwdHRuQU55QTVNVU1HVy9Kb1M1TE14Rk12QWpKYThwRVVod2JFcGpOV3JjcGorbURKL2RtZ1lIY2lvY3R3MEJnRm40NnBCWFBFNUhGakNrdGE0cGt0Ymh1YlI3djBZb01lM0R4ZVlwc3JscUNRelF6STY4YUtiZVpGK3R5WUYyWmxrYjZ5TjJCbmkyN1liQ25UdnF6bU9oUXhBZXUzRk1LVG9FTmZkV09QbCtqbTRZR09xYk9PZzVZWXphbDZXdW5ZWGR1NUtWNWpiMjFvbTE3eUxIS1E0YzVWTzRHNHkyZm15NU5ZVkx3eGJXc0wyV0dicnRwQ3VYNUNwQmRUMythZVBOQ0FGV1dQUEpxZVRhRjlLdTZtU1dTNW1leFhaODdIc0U3SFNMWk9RMXJ3VmpKc1k2SVN0b2d0V2xDNjVkSXZNMlV4ZnpXbS9PcXdIcVgwNE0vY2gwbHNWU1ptNGw3QTNjS2dlOUYrZkYrUmh0ZmN5VEVYUHVtaWUzVFlUYW4zYUd5ZlZxUUNJOENodUdkWjlKSXY3ajNycVpsQ0hVdWVRcVVuSTh5YmtRZm9vT01BYjViNGlrSXhWSjJqODdmYTByQXlFVWdjWWdrWFdWR0VGUFpSWUR0SjJ5UjV1bm9pWUhBcFp3Qmx3eG92YTRjQzlKSWZXRkdIS0kvNzFxRXF5dVJOemt5UWlrOTlySFJpRFZsU2NXRklMenJyR2pIanZvRmw5MkJxM29SMm9zOUpkQkhtdEltQmVFMDZGaERsQmxzS24rcHVSUXVQTWFGY0pDeDhLQTJjeTU0VmVhOHo3eUhhMExCNVNRN1ZOWWErNWkzWGhZSmRRWFpMQ1lWWHFlaXBPS0Q3amZZbDdvOWh1Z2kvYUpXaGZVL1hQTmlYSElPYXJpS2RzL3ZTRUpzcWk0NDVOVGE1aWxBUk9KRDc4b3o3d2FoYTdYRXRkTGIrbUpVTHU4ZTlHNVlHMm1QRDNjWUgzQklnTXNxakxsbmNvS1lQYzBxbktXMmpuTVBvQ1RQVnlDQVNsRWtiWjBOU2NxalRrUTZvUUFyTTRDWmhFYVNkUE9VS3ZhRXdvdFNBK3lwelhVeWlqYTQzRVRPd20xZ1lsV1pyNHM0UmVzK25XcStsREhhVkowTmlyb3pTbkVESm5ZUE84eTAyMUZOaDdhNDZUMnhLRU5rb1ZDNERNS0l0ODFJK0tIbEFZNjBVd241c2xuUmNFbE5DeEljSnQreTY5ZkhJK1lRb1dPVXNnUGNwM3ptY3JHZmNUYTk0Y1J0c1BWNTVZQkJDd1VMYUthczA5a2gxM1VOOGlqWkdnNW4zZUMwTWhvalZiR0pWTFNSZGFUL0RJVmJEbWVzaWtYb1JsNFo3MHZVUnNKWkJUQ0JMQXpVVllEMVZwbHJpaklXOG5hNWxvSHlrN2FreGk3dk4wSnlrWTBoYmFlWUszc2NCakJJVnVkaHpsZkJaekRqT3RobGVrSm1ZU0ZmVk9GdWJxVG5GTVRzQ0NjN1hnalZoZkpBdnBGdWJQRXRBMmpNalZ1NXJSU1FRZ0tXSm9WTEI2YXpQMGdpbWZUQ1VVSG93M1N4UnJHdm1sYXRISjZjNHFBNGFEbGpRa21ZN2t3NkRoRUFibWNwS2dFeDBQZlVGRktyMDNEVmo4RUwyWTBwYmU2R3FtYVN2YTczUGRCNXdNc0xSVXhxZ2s0NnJjMnE0Uk51UjYxcmt4U3krcGh5K3NrTmlGZDN4U2c5TTR5TlhpNFVwNjQ5R3pRYWVMUGlrTWM5cm9vNG5wUEZic2NoK3l6VnVNV0hCK0U3YmI3Skw0cHBiaGhOS3owQjZlS1RhOTJLT3IzazdlZFRZZ2RRWFY1MHJyZ2xkVWFReEN3bGxrWWJ1V1BraTNGS1VhMnpsSWw5NmlhVU91a2E1UmVoZUUrMkhXRFhYd2xNTzI2OHVPWEJRNmlPbTdlSnlYZHNKbUY0bGxadWNxbEVTbEJjOUJLakRyekhGalk3YkNiWFl4NEZrYklFdnFTR1JKTEt0TlBiVHZJbGNJZ3Rsc2NaaThvaDd5SVM1S3FTQ0Z6eXZmTnpDbG1WdUpwbWFrcDRoWkt3WHFZU3FsRHFrZ2ViWitYYlNveU1KWU15Z1JLbFpUUlRpSjhiaFBqRWlvT3Q1a1dlaTEydnVCUmhQS01OdnNTV1pwdGYyWWdBZkhrR3Q4MnRwK1pNd1lFdzExaTJwR0hHd00zVTlPV3BjTTZUQU9TRURjY0x4R0ZNTmxUTTQ2Zk0rY1laYUdyS1JXVTFlTUxUQm9XcnovY09NZ2lpS0ZYVTBubHUyT2k5VFg4N1VsTG5XTjZEbVVlZHR4dXNNWDBVd1phU0Z6OWhDcDFUalVOclpWcFd4WjUwYmZPcEJtek1vZFAxN29xYUlhREFwemx3azFWSFh5TlVXK3diTE9YN0cxRmlMUUhnaWE0cDRFV2JTNGJCWWRnNVd3czRCNU5ScU5BNXRRVW1hWU11UmtmcU5IWWNZTUJDZldBZEQ0WXQ3emxsY3RkcTNsZnNrUTMvV2RmaG1yV095YUo5Y2ZNQjhtS2VteHU2ZDh5YXp4dVFVV0Rrd1Vnb21WdEhWcHV5aUV3b01BL05rMXZHcytJSHBZdXR1U3dZblpKNGQ1aHRwemRkWGZZblpFbGpOcFlWZGpjZGVpakNhSldSV1FsQmIrTWRaTHN6VGR4S0xrY2dRVDJPdTd5aTQ1dENoTGU1MWZqN0hHVDRWTEFjSnI5NlE1eDVvdStwekpad2NSQU16STUzTGhsWlNqUkVKUGhUUW5YUjlkZXRRc2ZvQWM0MnhqU3BvT3BtdTlwd0lsN2JyYTBta3JnY0tKVlRPUmNpV3NzM3RTdGU5Mmo4YWNaZzRGZEd4NTZza1dkWW4zS09YaW9xSlUvaTg1Y2JNNEE3UWhUa1VEamsvNkh3ZlJuN0pOTDRNS3FlaUtNSnFiU0J3UEZWaFpJa09YclU5cDRKQWZZTkJpR1pSd3ZpS0V4TnZTNENQWkVIUHhJaWVLdk04bDEweUVXTXdzY1VLcllOTTIyRVFVUHNPMHpIaXdhdjBWOXRudy9VUzdmYzFQWiswcmxKcGFFUUFtL3ZTYUNKZGU5OFNubDgxUm5uRzNaQnZGdkdFb09oMXZod3JPaWlONmZhbGxjK0ZLZDVTeXoyZzNwOEl4UG5HekNjSjh6ZWRnNlprU1NaZEV4WFdkVUhmSldZYUtQNXN3WWh3cGtwTEkxTmRoYW5DK05uQTl4b0RtTUpINTVUdGJHekNyYzV4RjMySDI5S0RtRk5QZGxwblM5b0xYbXJzbzdId2EzWFFtSTRrYnhyL2RMd2RFencvdkpXcWNUVFd5NnNBTmVYK3dTWmViS1YrUkVpSG10djk5eVhWRitSZmczTzhqMjExcU5EeWNWeGJ1T3ozMDhlRENKOS80d05zdTgyMVBiL21oOFIvUFdKNzk5QS81L1hybUxIRldDV0ZBbW4rT3VXUDdzUDZ1bG5uYjJtODhvcjEyNXR4dlRYUWZtb2gzSm5BZVBnVldMK2FINGtCUGxuT0o5UCtoMlBmLzlldHEzVDNVM1BoUDRtZEg0ai9ydTN3dFExMTkxUHJ3ZmlidnNQdmQrcTQyL2VmZjFQRnJlRmozN2Ivb2VGd2Q5c0VydGZlcmZWazJiZlJyVi8xWmFkYjI2ZnVtNkt2NmkvOXFydi9vUy80Lys5azNQM3gzNlltS291REZRQUEifQ.4V1WZFpHYQKfrbC2GBOIkJb12AbWcmbnZSfEwsvwskwoYdUZO5J5CORmWLLB9AnWaunHBH--y3s36zwQW7FJLw"
        , expired_security_updates_change_password: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWk9qT0pMK0t4MzE5V1kzQkpqcWNuKzZva0JneW9oQzZBVzBzZEVCaURFMkFsTTJMZ01UODk5UDd1cWU2ZTZkdll1OWlxaXdKVXVwVk9hVG1ZL3l0N3ZpTWpiSDAzNHB4djJ4Lzl3WFhYMzM2UzZ0cTh0cFA4NGY2Q0NMc1Q3Zi9mTFR1cjI4KzJROEFNdjhhS3dzMjdSdDhQR1h1NzJzKzFIdnV2djAyeC9mdjBtTXIzMTkrbkQ4OVFNOTYwKzNHSXNQUlM4L3VMSHpaZkQxZ051ZTZzc0o1N3RQLy9qdHA3bHZzbTRpUHN1LzJ2VStxNDhmTHFYYVYzOE1MM3JIMTgyeTZQZHpvYnBqdVZmMWYxLzNwN29xVHZMdjFiRzcrLzJYdStHMGY5TVgvcnF4dnlpbEo4OWpNVjdPTjdOY3FxbytuMys5S0wzMjMybW5yL1NmS1RlY2pwTzIwNlVyNjVQZWIzeDhXTjhERzZ3c3kvcjRuK24wejlzUDFYR29iMksvZlBtbTFGTlQ5THY2dzB0eFBsK1BKNmwxMHhaNTIxZjE1Ni9ydGJHN1dudFkrL1h1SlU3SmR5dCtFUEdkQkkyUXoxMXhidlZ2ZW5UVDd2T1BJR25yK2FiaFA1NjBnZEdYNi8zeTRlVjIyZmZCUDdYQ1gvZjlvWFJSVmNkTFAzNW5EUUFzOE4yZi9kRzZHZmJMblkrbkx6aThlL3d5K3ZUaHNaOC9mUHZscHQ4Tkp2KzMxMjhHUHNwTE5iNEx1NW4vZmU3Zk8rV1hPNlZ0Y1NsMk45RjF2L3RSb3grdGNOUHYrL0c3bXRzSS9iVHBkTHlNZXkzcTB4MSsvL2ErOFBIbDhlbEQ4dmpoOGM5N2ZiL3JxK0h1MHR2bm42Si8xMENRbDlPN0c4NTFkZXlsOW9RRmJ2ZXFUL1hyWlgvZWEwVDlwT2h2ZjVrTWJvRDdxL0Ivbi84ejV0L0hYeFY2SC95ckN1L3ovNXNTN3l1cVUvMUh6UHdocnA2Ry9XbitZZXBIdGNiNXo3TXZaKzJlejJyZjdjZHZVNzllK3VxMnJsRGZ4ZEozb1lUcXF6WnZKNi9xYzMwNmFRTi9jLy83dXU5K0dPdnBENm5qc2ExdlhxN25zQ245YWgvdnd3MWQ2QlR0dy9YZjlTUW96VkdWKzgzOXB0MkJDaWdub2ZEYlAyTHFhRVpnL1VwQUdHMk5mRW90T2hla3RhcEZvdGlWc09Zb2lreTJTamc2VUpjNWlZRVcwdGx0YnNwejJocXBBT0dtQW5qRlNUZy9MMnBGbHZCVWQ2MmhaYTRLRXc4NXcxTmxvQXkxUmt0ZDFFUVd1OHAyZmFWTUZLeWJua1RmdkpZd1hKVjlkSzM1YUJKUEZybmhuQXNQNTRJNWVXWElKZmJoV1dSd1V5NWhMd2ljOGk2NnlzNmJxNE5jbGRZT1JIems3S0JNdkxCRzBKMjFOVEdwQTJZUW1zL2lRQzNhalJQaXNFM2E4WklhTE9QS1NXV0hYWDIzcm15YmE5UWxWcHlPVmtROFVCTzFTbUVqdEU0VEQ3d0plOVRHb0RJS3M5SHp3eW5QbE1JWmhpVmZxOXJGU2N5R2xUUjA5SHJTa3gwc2tCc20xVUhOeEZNbThvY3pjeHM3N1JRb3ZNSE4xY0NZQmMrVVlSWjdvbUdrbWRPbHlUbTNBMFNxdDRxRzk3VExWMld3T1cwdHRNVE1lWll0blhrM2JaSmxCK29XOGFTSFptbWhhOW52cHNwbERWWW9LaGZud255OEwwMmpTd0FGaEE4dGNoVW4zYmduVE14c1lXSEt3MFBGbWl2dERGL3JpdUlBejNVRzdkUmsxNXlGS0cxSG5pK1FKcDFORVFuVDJLdXU1S0RFc3ptY2lLdnRIQXozM0ZkdGFvYUw2SmpMdXNiaUxoUVZWVHF0aGI1OEdqMEs0QlN6a0hOdi9jUlVPTmNFZzBnTm5BU2lTUDFtVHowUnhRUm5SWVpNeE8xelJCeExNRFdrM1FCcW1BQ1Jua0VVeUFEN1UxdEJ2TVhHY0UyQnNTSE1tV2o3OElhTTNkdDJhUTJVbnZXbkUwVjl1TVRlRkFpeWVhdVp3d3UzZll0NmtVY1ErbFcvTVJKTEhISXJwTkpRb3VvVjVPeHh4UUlWSVl1dVVMYVpDeWJTU0d0UU1YeVJpa1ZTNVJxMzAxaDFnMDNhRFNqYlVFVDdFVHhiY2lQbWRWWWZObGJ0dGJZRTAxTDY4TFVnY2lyTnRjTGNXNktsQ1ZKU3JWRFB0b1RBbkptQ3BTYXdjemJZZ2pYM2tvNTJhZ21CMHZXQkxDTEhLcnlYTGJMTGRtclpJVitsM2M2Ty9ZbVh2ZGpyTysyNUwxMSthTEtrRFpkS3c3RE1CTStwSE9KQWRGV3ZzWFpnTGpIaHNGMDJNOHRRZ1ZTNDBLVnBSWWZQMU1TR1VHeFRkOGNwemRCZVBLMzl5TUJ0YXVGUStCRklXdU1vYU1PallHRFBpN2hHUG9yaVlBaGl0MUcxYWdyaTByZmNFdmRsL3dYcmpyNy9rYk5CbEszc2lNYXEyRDljQzNPMVJDQjhLWFg4RWplOHN2MjQ1TzBRRldBMXMwQkE1RTlMbm1FVjg0ZVo5U0ZMd1hoSWUvWEczSjI1QldPU0xwNmhzV1hMZy9ZRFZJVDQrSlMzOW11cWNiRTFiU0RhblVFdGhGRlAzeUovTk9KczRGdVFuSmdoL1pnOHJpUkpadUtxRndFWkxmbElpa01ESXRNZXExYmxFWDJ3NVA1c1VMQTdrY0JoMkcrTWdrL0gxSUk1WXZLNE5ZVWxMZkhNRnFlTnpPT3FkQ09ESHB3OFdxSVZWeXhCQVpzWmtOZXRGYTJZRytwN1kxNllsVVg2YXJVRnU1WG9obTFNbWNheW11dEFSQVJzM2xJSVQ0SU9mZFdOUFY3Q0c4SjlIVk5uSFFjdE1acFQ5YlRXc2J0WjVhWjRqZHlOb1gxNnliUFFSb1l6ViswRW9pNmZtU2RQWWxIUjFseFpNV1NIT0YyM2hYSzhoRWczb3Q2S3UvSkFmVmFVUFhKcGVqYUZ4bFRVVFpQSWNqUFpyOCtjajBHZGpxRnM3WWEwNEsxa2VJV0pTdGdpWXJTZ05PYlNLek5sTVc4OXB2eHFzeDZsOU9ETjNJTkpaRlVtWnVKZXdOM0NvSFBST0w2dlNNTnJidWVZQzQ5MDRUMDY3S2JVZlRUaXB6V3B3QWh3SU81WkZyN2tpM1BQZW1xbVVNZVNxMURweWhEelp1UStPdWc0d05zbHVxSkFERlZuNi95dFlocFVKZ0tKVFN6aElDc01rY0llOGxkMjBqWkpucTZmQ0JnY3lobEEyYkRCeThhbUFMM2tCMWJVQWNxanZyV3BDak41MHpNVHBPSlRIeW1kV0FPV1ZGd1kwZzNQdWtiTXVHOWcyVDJZV2phaG5laHpFbDZFT1cwaklGNlRqdmxFT1g1TTRWUGRyV25oTWlhVWc0U0ZENldCYzltekl1OTE1ajJFV3hvMEw4bWh1a2JRMDdMbHBsQ3dLOGh1S2FGd0t4VStGUWQwdjlWWTR0NFlwSXZ3aWxZWkdudTY1c0crNUJqVWRCM3FuTjJYaHRoV1dYak1xYkhOVllnSzM0YmNrMmZjRDBiVmFzUzEwSTY5TVNzWGRvOTdKeWdOdE1lR0UwY0gzQklnTXNyRExsa2N2NllQYzBxbktXM0RuTVB3Q1RQVlNEOFVsTWtWem9hazVGQ25JeDFRdmhTWXdXM0NRa2c3ZWNvVmVrTkJTS2tCOTFYbU9KaUVXMTF2UW1aZ0o3RXdLczNXeEowdDlKbFB0ZDVMR2V3cVZ3YkVYQnVsT1lHUzJ3ZWQ1MXRzcUtmQzJsMTFudGlXSUZ5aFFEa013SkMyekUzNW9PUUJqYlZTQ0h1UldkSnhTVXdKRVI4bTNMSnI3T0dSOHdsUnNNNlpEKzlUdnJNNTJjeTRtMTd4NGpUWWVyeHkzeUNFZ29XMFUxWnA3cEhxdW9mNEZHNk5CalAzOFZvWURCR3IyVWFxV2tpNjFqakRBVmJEbWVzaWtib2hsNFp6MHZVUnNKWkJUQ0JMZlRVVllETlZwbHFpakFXOG5hNmxyenlrL2FrNWl4Tm5hRTdTTWFDdE5ITUY3eU1maG9rS0hldzZTbmdzWWh4bmNZWVhaQ1ltMGxVMXlqWm1hazVSeEk1QWd2TzFZRTBRSGVRTDZUWW16eEtROXN5SWxQTmFFUWtFWUdsaXFGUndPdXU3TklKcERBWVNTaGVtMnlXTWRNMjhjdlZvNXhUNzFVSFRBUXRhMG14bjBtR1FFTGhDcHJJU0lCTmRUejBCaFNwZFo4TVl2SkQ5bU5KMnRWRFZUTkxUdGQ1ak9nL1lHZUhvS2ZYUlNjZlZPVFVjb3YzSWRTMXlJeFpkVXc1ZjJTR3hpdTU0cFFlbStaR2oxY0tVOVVlalpnTlBGbnpTbk9jMVVjY1Qwdnl0V0dRZmM4MWJURmd3dnRQK20xWWxjY3lZNFlUU001QXVIcW5HWHNUeE5XOG5seG83a0hyaXFuUEZOYUZyaWpSbklZRXMwc0FaSzA4RU1VVzU1bFlPOHFTYldPcWdhNVJUQk00MTBUakVxcmtXcnJMWmZuM0pnWTFTRHpIdEY0ZnIyazdBOUNxcDNPWlVqWktndk9naFFCMStqU2h1ZE54T3FNVWU5aVZqQzN4SkRZa2trVzJsdVorV1RlUVNXaWlMTkJlVFI5eERKc3gxSVJXODRIbnQ0UmEyTEhNeXlkU1U5QXdoWTdOSUpWU2wxQ0gxdGN6T1d5VTlPaElmUmd4S2xKclZSQ0YrWWh6dUV5TUV1cDRYZVNaNnZlZGVnUEdFTXZ3V1daTHA5ZHBmRE9EREk2aDFmaTB0YnhJR2pLam11aVVWSS9aM3BxNG5SODFyaGhUWUoyUWdUamdlSTZxcGNnWW5mZDhuemxCTEF6WXlxOGtMaHJZNFVHMitmNWlSSDRhUm9yYm1jMHVzOHpMMTVFeE5tV3Q3QTJvZWRkNW12TTd3VmZoVFJscjRqQzEwU2pVUHBkM0txakwyckhPRFIxMjQ0Z3dLWGYrZXFDbEM2aytLTXdkSmRkUTFjaDFqejJBNXg4K1lHaHZoQzFka1RSRXR3a3c2SEJUTHpzWktySElBT2JVYXpVTmJVSkxHanpreVVxOVpSUUVHREVRbjFzRkFlT0tlY3haVnJjYTJjcDVrNE0yNkR0KzhkVXdXamNuRkE4eURlV3BxN3Q3WmJ6SnJURTZCbFFNanBXQmlGVjF2eXk0OElkOHdNRTltSGMrS0g1Z3V0azVjTWpnaDgyd3p6MGhydnJucVIweE1ZRFdYRm5ZMEgzc3BnbkNXa0ZrSlFXM2hIV2U1TUZlL1NTeEdRa004amJsK28rQ2FRNXUydU5mNStSeGwrRlN3SENTOGVrT3VjNkR0dXMrVnNITVFEc3dNZFM0YldrazFSeVQ0VUVCbjB2WFZxUVBGNmdQTU5jYzJLci9wWkxyZWN5SWMybTZ1SlpHNkhpaVVVRGtYQVZ2S05sOVZ1dTdWM3RHSWdzU3VpSTQ5VHlYSnNqbmhIcjFVVkV5Y3d1ZVlHek9ETzBBWFpsTTQ1UHlnODMwUWVpWFQvTkt2N0lxaUVLdU5nY0R4VkFXaEpUcDQxZjZjQ2dMMUN3WWhtb1VKNDJ0T1RCeVhBQi9KZ3A2SkVUNVY1bmt1dTJRaXhtQmlpeFhhQnBuMnd5Q2d4ZzdUTWVMQ3EvVFc4YlBodUluR2ZVM1BKMjJyVkJxYUVjRG12alNhVU5mZXQ0VG5WODFSbm5FMzVOdEZQQ0VvZXAwdng0b09Tbk82ZldubGMyR0t0OVJ5RHFqM0pnSnh2alh6U2NMOFRlZWdLVm1TU2RkRWhYVmQwRytKbWZxS1Axc3dKSnlwMHRMTVZGZGhxakIrTnZDOTVnQ204TkE1WmJzVk5tR3NjOXhGditGaWVoQno2c3BPMjJ4SmU4Rkx6WDAwRjM2dERwclRrZVJOODUrT3QyT0M1NGUzVWpXMjVucDU1YU9tM0Qrc2lCdFpxUmNTMHFIbTl2NTlTZlVEK1cvK09kcEhLM1dvMFBKeDNGaTQ3UGZUeDRNSW5uL2xBMnk3N2JVOXYrYUh4SHM5NHRYdW9YL082OWN4WTR1eFRnb0YwdngxeWgrZGg4MTF1OG5mMG1qdEZwdTNOK042YTV2OTFFSzRNNEh4OERkZy9jMzhTQXp3eWJJL21mYmZiZkR4djI1ZHBidWZtZ3YvdXRqK1lmRmZ0UjIrdHFIdWZtbzlHSC9SZC9qdFRoMTMrLzd6cjZxNE5YeFd0K04vYURqYzNRNkJtNDE3YXoxWnE5dm8xcS82Y3RLdDdWUDNUZEZYOVpkKzFkMi82UWIrL3pzWmQ3Ly9EM01SQVhnWEZnQUEifQ.SVHpMM2YaXcQTwqLHh5kgLDUV8rApR6DZeQotFJiVsORQns5R3z715afufb0oruVVmxFpG0xJ8qsQ9_05v2Z7Q"
        , expired_security_updates_change_security_answers: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWE9qdUxMK0sxUDVlbmRQQ1RDWmVEN2RFQkNZR0JHRVhrQ25UazBCWW8yTndJNk5iV0JyLy91Vms1blptVG03OTlhNXFVclprcVZXcS92cDdrZjkrMTF4SHByOWNUc1h3M2JmZis2THJyNzdkSmZXMWZtNEhhWVA5Q0NMb1Q3ZC9mTFR1cTI4KzJROEFNdjhhQ3dzMjd4ZjNDOS91ZHZLdWgvMHJydFB2My83L2xWaWZPM3I0NGY5Yngvb1NYKzZ4VkI4S0hyNXdZMmR0OEdYQTI1N3FyY1RUbmVmL3ZuN1QzTmZaZDFFZkpaL3RldDlWaDkvT0pkcVczMGJudldPTDV0bDBXK25Rblg3Y3F2cS83NXVqM1ZWSE9VL3FuMTM5OGN2ZDRmajlxSXYvR1ZqZjFaS1Q1NkdZamlmYm1ZNVYxVjlPdjEyVm5ydDMybW5yL1NmS1hjNDdrZHRwM05YMWtlOTMvajRzTHdITmxoWWx2WHhQOVBwWDdjZnF2Mmh2b2w5Ky9KVnFhZW02RGYxaDI5K2ZleFAxL3A0ODZ1MnpHVmIxWisvN05ORzcycnRhZTNmdTVjNEpkK3QrR3I5TjBoOGxaU2M2OVB0Y3U4QzlXbzkrN2tyVHExZXFVYzNuVC8vQ0oyMm5tNTYvL05KbXgyOVhmcVhEeTgzRTd3UC9xV3Y4V1hmdDZzVVZiVS85OE4zTmdMQUF0LzkyUit0bTduZkxMRS92cUh6N3ZGdDlFbGZkZnJ3OVplYmZqZncvTjlZdUpsOUw4L1Y4QzdzNXBUM3ViOTMxUzkzU2h2NVhHeHVvdXQrODZOR1AxcmhwdC8zNDNjMTF4SDZhZE54Zng2Mld0U25PL3orN1gzaDQ4dmowNGZrOGNQam4vZjZmdGNYdzkybHQ4OC9SZitoNFNIUHgzYzNuT3BxMzB2dENRdmM3bFVmNjlmejlyVFZPUHRKMGQvL01rWGNZUGhYU2VGOS9zOU04RDcrb3RENzROOVZlSi8vMzVSNFgxRWQ2MitSOUUxY1BSNjJ4K21IcVIvVkdxWS96ejZmdEhzK3EyMjNIYjVPL1hidXE5dTZRbjBYWWQ4RkdLcXYycnlkdktyUDlmR29EZnpWL2UvcnZ2dGhxTWR2VW9kOVc5KzhYRTloVS9yVk50NkdLenJUTWRxR3kzL29TVkNhZ3lxM3EvdFZ1d0VWVUU1QzRkZC94TlRlak1EeWxZQXdXaHY1bUZwMEtraHJWYk5Fc1N0aHpWRVVtV3lSY0xTakxuTVNBODJrczl2Y2xLZTBOVklCd2xVRjhJS1RjSHFlMVlMTTRiSHVXa1BMWEJRbVB1UU1qNVdCTXRRYUxYVlJFMW5zS3R2bGxUSlJzRzU4RW4zeldzSndVZmJSdGVhRFNUeFo1SVp6S2p5Y0MrYmtsU0huMkljbmtjRlZPWWU5SUhETXUrZ3FPMitxZG5KUldoc1E4WUd6blRMeHpCcEJOOWJheEtRT21FRm9Qb2tkdFdnM2pJakRObW1IYzJxd2pDc25sUjEyOWQyNnNtMnVVWmRZY1RwWUVmRkFUZFFpaFkzUU9vMDg4RWJzVVJ1RHlpak1Sczhmam5tbUZNNHdMUGxTMVM1T1luWllTRU5IcnljOTJjRUN1V0ZTN2RSRVBHVWkvM0JpYm1Pbm5RS0ZkM0J6ZFdETWdpZktNSXM5MFREU1RPbmM1SnpiQVNMVnBhTGhQZTN5UlJtc2ptc0x6VEZ6bm1WTEo5Nk5xMlRlZ0xwRlBPbWhXVnJvV3ZhYnNYSlpneFdLeXRrNU14OXZTOVBvRWtBQjRZY1d1WXFUYnRnU0ppWTJzekRsNGE1aXpaVjJocTkxUlhHQXB6cURkbXF5YTg1Q2xMWUR6MmRJazg2bWlJUnA3RlZYc2xQaTJUd2NpYXZ0SEJ6dXVhL2ExQXhuMFRHWGRZM0ZYU2dxcW5SYUMzMzVOSGdVd0RGbUllZmU4b21wY0tvSkJwRTZjQktJSXZXYkxmVkVGQk9jRlJreUViZFBFWEVzd2RRaDdRNmdoZ2tRNlFsRWdReXdQN1lWeEd0c0hLNHBNRmFFT1NOdEh5N0kyRnpXYzJ1ZzlLUS9uU2pxd3puMnhrQ1ExYVZtRGkvYzloTDFJbzhnOUt0K1pTU1cyT1ZXU0tXaFJOVXJ5Tm5qZ2dVcVFoWmRvR3cxRlV5a2tkYWdZdmdzRll1a3lqVnV4NkhxRGpacFY2QnNReEZ0Qi9Cc3laV1lsbG05VzFtMTE5b1NqSFBwdzllQ3lMRTBsd3B6YjQ3bUpraEp0VUE5V3hNQ2MyWUtscHJBenRuQkZxeTVsM1N3VTBzSWxDNTNaQlk1VnVHOWJKRmR0bVBMZHZraTdUWjI3SSs4N01WVzMybkxmZW55WFpNbGJUaFhHb1psSm5oTzVTRU9SRmYxR21zNzVoSVRIdGJ6YW1JWktwQUtaem8zcmVqd2lacllFSXF0Nm00L3BobmFpcWVsSHhtNFRTMGNDajhDU1d2c0JXMTRGQnpZOHl5dWtZK2lPRGdFc2R1b1dqVUZjZWtsdDhSOTJiOWgzZEgzMzNOMkVHVXJPNkt4S3JZUDE4SmN6QkVJWDBvZHY4UU5yMnc3ekhsN2lBcXdtRmdnSVBMSE9jK3dpdm5EeFBxUXBXRFlwYjI2TUhkanJzR1FwTE5uYUd6WmNxZjlBQlVoUGo3bXJmMmFhbHlzVFJ1SWRtTlFDMkhVMDB2a0QwYWNIZmdhSkVkbVNEOG1qd3RKa29tNDZrVkFSa3Mra0dMWGdNaTBoNnBWZVVRZkxMazlHUlJzamlSd0dQWWJvK0RqUHJWZ2pwamNyMDFoU1VzOHM5bHBJM08vS04zSW9Ec25qK1pvd1JWTFVNQW1CdVIxYlVVTDVvYjYzcGdYWm1XUnZscXN3V1lodXNNNnBreGpXVTExSUNJQ1ZwY1V3cU9naDc3cWhoN1A0UTNodm82cGs0NkRsaGpOc1hwYTZ0aGRMWEpUdkVidXl0QStQZWRaYUNQRG1hcDJCRkdYVDh5VFJ6R3JhRzB1ckJpeVhad3UyMEk1WGtLa0cxRnZ3VjI1b3o0cnloNjVORDJaUW1NcTZzWlJaTG1aYkpjbnpvZWdUb2RRdG5aRFduQXBHVjVnb2hJMml4ak5LSTI1OU1wTVdjeGJEaW0vMnF4SEtkMTVFL2RnRWxtVmlabTRGM0F6TStpY05ZN3ZLOUx3bXRzNTVzSWpYWGlQZHBzeGRSK04rR2xKS2pBQUhJaDdsb1V2K2V6Y3M1NmFLZFN4NUNwVXVqTEV2Qm00ajNZNkR2QjZqcTRvRUllcXMzWCtWakVOS2hPQnhDYVdjSkFWaGtoaEQva0xPMm1iSkUrWFR3UWNITW9aUU5saGhlZVZUUUY2eVhlc3FBT1VSMzFyVXhWbThxWm5Ka2pGeHo1U09yRUdMS200TUtRYm5uU05tSERmd0xKN01MVnNRanZSNXlROEMzTmNSMEM4SmgzemlYTDhtTUtudWx2U3dtVk1LQWNKQys5S0ErZXlaMFhlNjh5N0M5YzBhRjZTWFhXTm9LZGx5MVdoWUZlUXpWeEM0VllxZkNwMjZINnRzY1M5SVVobjRSV3RNalQyZE0yRGZja3hxT2t5MURtN0x3Mnhyckp3bjFOam5hc1FGYjROdVNkUHVEOFlWYXNSMTBJNzlvYXNuTms5N3AyZ05OQVdHMDRjN1hCTGdNZ29EN3RrZHZ5YVBrd3BIY2UwRFhNT3d5Zk1WQ1A5VUZBbUZ6ZzdKQ1dIT2gzcGdQS2x3QXl1RXhaQzJzbGpydEFGQlNHbEJ0eFdtZU5nRXE1MXZRbVpnWjNFd3FnMFd4TjN0dEJuUHRWNkwyV3dxMXdaRUhOcGxPWUlTbTd2ZEo1dnNhR2VDbXR6MVhsaVhZSndnUUxsTUFCRDJqSTM1UWNsZDJpb2xVTFlpOHlTRG5OaVNvajRZY1F0dThZZUhqZ2ZFUVhMblBud1B1VWJtNVBWaEx2eEZjOU9nNjNISy9jTlFpaVlTVHRtbGVZZXFhNTdpSS9oMm1nd2N4K3ZoY0VRc1pwMXBLcVpwRXVOTXh4Z2RUaHhYU1JTTitUU2NJNjZQZ0xXTW9nSlpLbXZ4Z0tzeHNwVWM1U3hnTGZqdGZTVmg3US9OV2R4NGd4TlNUb0V0SlZtcnVCOTVNTXdVYUdEWFVjSmowV000eXpPOEl6TXhFUzZxa2JaeWt6Tk1ZcllIa2h3dWhhc0NhS2RmQ0hkeXVSWkF0S2VHWkZ5WGlzaWdRQXNUUXlWQ2s0bmZaZEdNSTNCUUVMcHduUTloNUd1bVZldUh1MmNZci9hYVRwZ1FVdWE3VVE2REJJQ0Y4aFVWZ0prb3V1cEo2QlFwZXVzR0lObnNoMVMyaTVtcXBwUmVycldlMHpuQVRzakhEMmxQanJxdURxbGhrTzBIN211Ulc3RW9tdks0U3ZiSlZiUjdhOTB4elEvY3JSYW1MSitiOVRzd0pNWkh6WG5lVTNVL29nMGZ5dG0yY2RjOHhZVEZveHZ0UC9HUlVrY00yWTRvZlFFcElzSHFyRVhjWHpOMjlHbHhnYWtucmpxWEhGTjZKSWl6VmxJSUlzMGNJYktFMEZNVWE2NWxZTTg2U2FXMnVrYTVSU0JjMDAwRHJGcXJvV3JiTFpkbm5OZ285UkRUUHZGNGJxMkV6QytTaXJYT1ZXREpDZ3ZlZ2hRaDE4amloc2R0eU5xc1lkOXlkZ01YMUpESWtsa1cybnVwMlVUT1ljV3lpTE54ZVFlOTVBSmMxbElCYzk0V25xNGhTM0xuRXd5TlNZOVE4aFl6VklKVlNtMVMzMHRzL01XU1kvMnhJY1JneEtsWmpWU2lKOFloOXZFQ0lHdTUwV2VpVjd2dVJkZ09LSU1YeUpMTXIxZSs0c0J2SHNFdGM2dnBlV053b0FSMVZ5M3BHTEEvc2JVOVdTdmVjMGhCZllSR1lnVGpvZUlhcXFjd1ZIZjk0a3oxTktBRGN4cThvS2hOUTVVbTI4Zkp1U0hZYVNvcmZuY0hPdThURDA1VVZQbTJ0NkFtbnVkdHhtdk0zd1YvcGlSRmo1akN4MVR6VU5wdDdDcWpEM3IzT0JSRnk0NGcwTFh2eWRxaXBENm8rTE1RVkx0ZFkxY3h0Z3pXTTd4TTZiR1N2akNGVmxUUkxNd2t3NEh4Ynl4c1JLTEhFQk9yVWJ6MEJhVXBQRmpqb3pVYXhaUmdBRUQwWkYxTUJDZXVPZWNSVldyc2EyY0p4bDRrNjdETjIvdGsxbGpjdllBODJDZW1wcTdkL1pGWm8zSktiQnlZS1FVakt5aXkzWFpoVWZrR3dibXlhVGpXZkVkMDhYV2lVc0dSMlNlYk9ZWmFjMVhWLzJJaVFtc3B0TENqdVpqTDBVUVRoSXlLeUdvTGJ6OUpHZm02amVKeFVob2lLY2gxMjhVWEhObzB4YjNPaitmb2d3ZkM1YURoRmNYNURvNzJpNzdYQWs3QitHQm1hSE9aWWRXVXMwUkNkNFYwQmwxZlhYcVFMRjZCM1BOc1kzS2J6cVpMcmVjQ0llMnEydEpwSzRIQ2lWVVRrWEE1ckxORjVXdWU3VzNONklnc1N1aVk4OVRTVEt2anJoSEx4VVZJNmZ3T2ViR3hPQUcwSm5aRkI1eXZ0UDVQZ2k5a21sKzZWZDJSVkdJMWNwQVlIK3NndEFTSGJ4cWY0NEZnZm9GZ3hETndvVHhKU2Ntamt1QTkyUkd6OFFJbnlyek5KVmRNaExqWUdLTEZkb0dtZmJEUVVDTkhhWmp4SVZYNlMzalo4TnhFNDM3bXA2TzJsYXBORFFqZ00xOWFUU2hycjJYaE9kWHpWR2VjWGZJMTdONFFsRDBPbDhPRlQwb3plbTJwWlZQaFNrdXFlWHNVTytOQk9KOGJlYWpoUGxGNTZBeG1aTlIxMFNGZFYzUWI0bUorb28vV3pBa25LblMwc3hVVjJHcU1INDI4TDNtQUtidzBDbGxtd1UyWWF4ejNGbS80V0s2RTFQcXlrN2JiRTU3d1V2TmZUUVhmcTEybXRPUjVLTDVUOGZiSWNIVHc2VlVqYTI1WGw3NXFDbTNEd3ZpUmxicWhZUjBxTG05ZjE5Uy9VRCsxVDlGMjJpaGRoV2FQdzRyQzVmOWR2eTRFOEh6Yi93QTIyNTliVSt2K1M3eFh2ZDRzWG5vbi9QNmRjalliQ3lUUW9FMGZ4M3pSK2RoZFYydjhrc2FMZDFpZGJrWTExc3o3YWNXd3AwSmpJZGZnZldyK1pFWTRKTmxmekx2LzdINENQN3IxbFc2KzZtNThPK0w3UjhXLzFYYjRVc2I2dTZuMW9QeEYzMkgzKy9VZnJQdFAvK21pbHZEWjNFNy9vZUd3OTN0RUxoYXViZldrN1c0alc3OXFyZVRibTJmdW0rS3ZxcmYrbFYzZjlNai9QOTNNdTcrK0IvbENtNGNMUllBQUE9PSJ9.bRUXRRIkYTdn5a-Eclvs9_ImlRGhANjuYC3flNQxBEs9GcBwN3kn_rYom2hkHMVOwLLObFqiuEzRt8EvegB87g"
        , expired_secured_demographic_updates_update_phone: "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVk3NU9iT05MK1Y2Ym02KzF1Q1RDVGNUN2RNQ0F3WStSQjZBZm82aW9GaURVMkFqTTJ0b0d0L2Q5Zk9aUE5Kcm05dTdvM1ZhbXhoTlJxZFQvZC9haC91OC9QUTMwNDd1WjgyQjI2VDEzZVZ2Y2Y3NU9xUEI4cmVlZFc3V0Y3elB0NlY5N1JYdVpEZGJyLzZZY3RPM24vMFhnRWx2bkJXRmkyK1dnOUdqL2Q3MlRWRGJ0aHV2LzQyOWZmZndqZlhMdnFlSGY0OVc1RFh1L2NmTWp2OGs3ZTBaT2V2STIrSEhEYlUzNCs0WFQvOFIrLy9URDNWUlo1L1NUL2F0UDdyRDY5UHhkcVYvNDVQQjVHcmNtNUxhcWozbTk4ZUZ3K0FCc3NMTXY2b0lYMDlhR3Ivdno4dCtVSHc3YVhGdmdBSGgvMTU4UFFmNzd2L2YzdmV1MXhkOUVXK1NLNk95dWxKMDlEUHB4UE54T2V5N0k2blg0OUs3MzIzNmwvdS9UL3B2OVo3L2l5V2ViZGJzcFZleWgycXZyN2RYZXN5dndvZnlrUDdmK20zVDl2SDhwRFg5M2tmLzd4VmIzUExyOTd2UmxGYTZpUHZ1eks2dE9YeGRvcGJhV1JjTFBINnlZaDM2ejRidi9yOGZDcjFwRHZodm9QU2VmajdsT2JuNXFiSlgrNnY2bjQ2WHRRTmRWMFUvTWZ6L3BHNkxNM2ZycDd2Ym51NitBbTZYM3dUMzJGTDBLK1hpTXZ5OE81Rzc1eE5BQVcrT2FmL2NHNjJmeXpGUTdIZDZjK2ZSNTl2SHZxcHJzL3Z0eVV2VG5wdjl2OFp2S0RQSmZEdTdBYnN0N24vaFBlVk41dHovbjJKcnJxdHY4ZGdOOG8vTDNGYnVwL08zNi94VHBDUDJ3NkhzN0RUcC8wOFI2Ly8zcGYrUFQ2OUh3WFA5MDkvWG50YjNkOXNldDljdnY3cCtqZk5YTGsrZmp1c2xOVkhqcXB2V2FCMjdXclkvVjIzcDEyR29JL0tQcmJYK2FjRzBML0tyVzh6LytaVDk3SFh4UjZIL3lyQ3Uvei8wbUo5eFhsc2ZvYWJWL0ZWV08vTzA3ZlRYMnYxakQ5ZWZiNXBMMzNTZTNhM2ZESDFLL25ycnl0eTlVM3dmZE43S0hxcXMzYnlxdjZWQjJQMnNCL2VQdDkzVGNmaG1yOEtuVTROTlhOeTlVVTFvVmY3amE3Y0VWbk9rYTdjUG1MbmdTRk9haGl0M3BZTlZ0UUF1WEVGUDd4SHpGMU1DT3dmQ01nak5aR05pWVduWExTV09VczBjYVZzT0lvaWt5MmlEbmFVNWM1c1lGbTB0cE5ac3BUMGhpSkFPR3FCSGpCU1RpOXpHcEI1dkJZdFkyaFpTNXlFL2NadzJOcG9CUTFSa05kVkVjV3U4cG1lYVZNNUt3ZG4wVlh2eFV3WEJSZGRLMzRZQkpQNXBuaG5ISVBaNEk1V1duSWVlUERrMGpocXBqRFRoQTRabTEwbGEwM2xYdTVLS3d0aVBqQTJWNlplR2Exb0Z0cmJXSlNCY3dnTkp2RW5scTBIVWJFWVJNM3d6a3hXTXFWazhnV3UvcHViZEhVMTZpTnJVMHlXQkh4UUVYVUlvRzEwRHFOUFBCRzdGRWJnOUxJelZyUDk4Y3NWUXFuR0JaOHFTb1h4eHZXTDZTaGc5dVRubXhoanR3d0x2ZHFJcDR5a2QrZm1GdmJTYXRBN3ZWdXBuckdMSGlpRExPTkoycEc2aW1aNjR4ek8wQ2t2SlEwZktCdHRpaUMxWEZ0b1huRG5CZlowSW0zNHlxZXQ2QnFFSTg3YUJZV3VoYmRkaXhkVm1PRm9tSjJ6c3pIdThJMDJoaFFRSGpmSUZkeDBnNDd3c1RFWmhZbVBOeVhyTDdTMXZDMXJtZ1Q0S2xLb1oyWTdKcXhFQ1hOd0xNWjByaTFLU0poc3ZIS0s5a3I4V0wyUitKcU93ZjlBL2RWazVqaExGcm1zcmEydUF0RlNaWE9lcUV2bndlUEFqaHVXTWk1dDN4bUtwd3Fna0drZWs0Q2tTZCt2YU9laURZRXAzbUtUTVR0VTBRY1N6RFZKMjBQS2hnRGtaeEFGTWdBKzJOVFFyekdSbjlOZ0xFaXpCbHA4M2hCeHZheW5oc0RKU2Y5MTRtaUxwdzMzaGdJc3JwVXpPRzUyMXlpVG1RUmhIN1pyWXpZRXZ2TUNxazBsQ2c3QlRsN1dyQkFSY2lpQzVTdXBweUpKTklhbEF5ZnBXS1JWSm5HN1RpVWJXK1RaZ1dLSmhUUmJnQXZsbHlKYVpsVys1VlZlWTB0d1RnWFBuekxpUndMYzZrdzkrWm9yb09FbEF2VXNUVWhNR09tWUlrSjdJejF0bUQxZzZTRG5WaENvR1M1SjdQSXNBb2ZaSVBzb2hrYnRzOFdTYnUxTi83SWkwN3M5SjEyM0pjdTM5ZHAzSVJ6cVdGWXBJSm5WUGFiUUxSbHA3RzJaeTR4WWIrZVZ4TkxVWTVVT05PNWJrU0xUOVRFaGxCc3BTbmFtS1JvSjU2WGZtVGdKckZ3S1B3SXhJMXhFTFRtVWRDemwxbGNJeDlGbTZBUE5tNnRLbFhueEtXWHpCSVBSZmNaNjQ2Ky80R3pYaFNOYkluR3F0ZzlYbk56TVVjZ2ZDMTAvQkkzdkxMZE1HZE5IK1ZnTWJGQVFPU1BjNVppdGVHUEUrdENsb0JobjNUcXd0eXR1UVpEbk15ZW9iRmx5NzMyQTFTRStQaVlOZlpib25HeE5tMGdtcTFCTFlSUlJ5K1JQeGlidE9kckVCK1pJZjBOZVZwSUVrL0VWYThDTWxyd2dlVDdHa1NtUFpTTnlpTDZhTW5keWFCZ2V5U0J3N0JmR3prZkQ0a0ZNOFRrWVcwS1MxcmloYzFPRTVtSFJlRkdCdDA3V1RSSEM2NVlqQUkyTVNDdmF5dGFNRGZVOThZOE4wdUxkT1ZpRGJZTDBmYnJEV1VheTJxcUFoRVJzTG9rRUI0RjdidXlIVG84aHplRSt6cW1Uam9PR21MVXgvSjVxV04zdGNoTThSYTVLMFA3OUp5bG9ZME1aeXFiRVVSdE5qRlBIc1dzb3JXNXNEYVE3VGZKc3NtVjQ4VkV1aEgxRnR5VmUrcXp2T2lRUzVPVEtUU21vblljUlpxWjhXNTU0bndJcW1RSVpXUFhwQUdYZ3VFRkppcG1zOWlnR1NVYkxyMGlWUmJ6bGtQQ3J6YnJVRUwzM3NROUdFZFdhV0ltSGdUY3pndzZaNDNqaDVMVXZPSjJocm53U0JzK29QMTJUTnduWS9POEpDVVlBQTdFQTB2RDEyeDJIbGhIelFUcVdISVZLbHdaWWw0UDNFZDdIUWQ0UFVkWEZJaStiRzJkdjlXR0JxV0pRR3dUU3pqSUNrT2tzSWY4aFIwM2Rad2x5MmNDZW9keUJsRGFyL0M4c2lsQXI5bWU1VldBc3FocmJLckNWTjcwVEFVcCtkaEZTaWZXZ01VbEY0WjB3NU91RVJQdWFsaTBqNmFXVFdncnVveUVaMkdPNndpSXQ3aGxQbEdPdjZId3VXcVhOSGNaRThwQndzTDd3c0NaN0ZpZWRUcno3c00xRGVyWGVGOWVJK2hwMlhLVks5am1aRHNYVUxpbENwL3pQWHBZYXl4eGJ3aVNXWGg1b3d5TlBWM3pZRmR3RENxNkRIWE83Z3BEck1zMFBHVFVXR2NxUkxsdlErN0pFKzU2bzJ3MDRocG9iN3doTFdiMmdEc25LQXkwdzRhemlmYTRJVUNrbElkdFBEdCtSUituaEk1ajBvUVpoK0V6WnFxV2ZpZ29rd3VjOW5IQm9VNUhPcUI4S1RDRDY1aUZrTGJ5bUNsMFFVRklxUUYzWmVvNG1JUnJYVzlDWm1BbnRqQXF6TWJFclMzMG1jK1Yza3NaYkV0WEJzUmNHb1U1Z29MYmU1M25HMnlvNTl6YVhuV2VXQmNnWEtCQU9RekFrRGJNVFhpdjVCNE5sVklJZTVGWjBHR09UUWtSNzBmY3NPdkd3d1BuSTZKZ21URWZQaVI4YTNPeW1uQTd2dUhacWJIMWRPVytRUWdGTTJuR3ROVGNJOUYxRC9FeFhCczFadTdUTlRjWUlsYTlqbFE1azJTcGNZWURyUG9UMTBVaWNVTXVEZWVvNnlOZ0RZT1lRSmI0YXN6QmFpeE5OVWNwQzNnelhndGZlVWo3VTNNV1o1T2lLVTZHZ0RiU3pCUjhpSHdZeGlwMHNPc280YkdJY1p4dVVqd2pNemFScnFwUnVqSVRjNHdpZGdBU25LNDVxNE5vTDE5SnV6SjVHb09rWTBha25MZVNTQ0FBUzJKREpZTFRTZCtsRmt4ak1KQlF1akJaejJHa2ErYVZxeWM3bzlndjk1b09XTkNTWmpPUkZvT1l3QVV5bFJVREdldDY2Z2tvVk9FNks4YmdtZXlHaERhTG1hcDZsSjZ1OVI3VGVjQk9DVWZQaVkrT09xNU9pZUVRN1VldWE1RWJzZWlhY1BqRzlyR1Z0NGNyM1RQTmp4eXRGcWFzT3hnVjYzazg0NlBtUEcreE9oeVI1bS81TExzTjE3ekZoRG5qVysyL2NWRVF4OXd3SEZONkF0TEZBOVhZaXppK1pzM29VbU1MRWs5Y2RhNjR4blJKa2VZc0pKQjVFamhENllsZ1ExR211WldEUE9uR2x0cnJHdVhrZ1hPTk5RNnhxcSs1cTJ5Mlc1NHpZS1BFUTB6N3hlRzZ0aE13dmtrcTF4bFZneVFveXpzSVVJdmZJb3BySGJjamFyQ0hmY25ZREY4VFF5SkpaRk5xN3FkbEV6bUhGa29qemNYa0FYZVFDWE9aU3dYUGVGcDZ1SUVOUzUxVU1qWEdIVVBJV00xU0NWVXF0VTk4TGJQMUZuR0hEc1NIRVlNU0pXWTVVb2lmR1llNzJBaUJydWQ1bG9wTzcza1FZRGlpRkY4aVN6SzlYdnVMQWJ4L0FwWE9yNFhsamNLQUVkVmN0NkJpd1A3VzFQWGtvSGxObndEN2lBekVDY2REUkRWVlR1R283L3ZNR1dwb3dBWm0xVm5PMEJvSHFzbDJqeFB5d3pCUzFOWjhidDdvdkV3OU9WRlRadHJlZ0pvSG5iY1pyMUo4RmY2WWtnYStZQXNkRTgxRGFidXd5cFM5Nk56Z1VSY3VPSU5DMTc5bmFvcVErcVBpekVGU0hYU05YRzZ3WjdDTTR4ZE1qWlh3aFN2U09vOW1ZY1l0RHZKNWEyTWxGaG1BbkZxMTVxRU5LRWp0YnpneUVxOWVSQUVHREVSSDFzSkFlT0tCY3hhVmpjYTJjcDVsNEUyNkR0KzhkWWhuamNuWkE4eURXV0pxN3Q3YUY1bldKcWZBeW9DUlVEQ3lraTdYUlJzZWtXOFltTWVUam1mRjkwd1hXMmRUTURnaTgyUXp6MGdxdnJycVI4eUd3SElxTE94b1B2YWFCK0VrSWJOaWdwcmNPMHh5WnE1K2sxaU1oSVo0SGpMOVJzRVZoelp0Y0tmejh5bEs4VEZuR1loNWVVR3VzNmZOc3N1VXNETVE5c3dNZFM3ckcwazFSeVI0bjBObjFQWFZxUUxGcWozTU5NYzJTcjl1WmJMY2NTSWMycXl1QlpHNkhpZ1VVem5sQVp1TEpsdVV1dTVWM3NHSWd0Z3VpWTQ5VDhYeHZEcmlEcjJXVkl5Y3dwY05OeVlHdDRET3pLYXd6L2hlNS9zZzlBcW0rYVZmMmlWRklWWXJBNEhEc1F4Q1M3VHdxdjA1NWdUcUZ3eENOQTFqeHBlY21IaFRBSHdnTTNvaFJ2aGNtcWVwYU9PUkdMMkpMWlpyRzZUYUQ3MkFHanRNeDRnTHI5SmJibDRNeDQwMTdpdDZPbXBiSmRMUWpBRFdENFZSaDdyMlhtS2VYVFZIZWNGdG42MW44WXlnNkhTK0hFcmFLODNwZG9XVlRia3BMb25sN0ZIbmpRVGliRzFtbzRUWlJlZWdNWjdqVWRkRWhYVmQwRytKaWZxS3YxZ3dKSnlwd3RMTVZGZGhxakIrTWZDRDVnQ204TkFwWWRzRk51Rkc1N2l6ZnNOdDZGNU1pU3RiYmJNNTZRUXZOUGZSWFBpdDNHdE9SK0tMNWo4dGI0WVlUNCtYUXRXMjVucFo2YU82MkQwdWlCdFppUmNTMHFMNjl2NTlUZlFEK1dmL0ZPMmloZHFYYVA0d3JDeGNkTHZ4dzE0RUw3L3lIamJ0K3RxYzNySjk3TDBkOEdMNzJMMWsxZHVRc3RsWXhya0NTZlkyWmsvTzQrcTZYbVdYSkZxNitlcHlNYTYzUHRzUExZUjdFeGlQUHdQclovTURNY0JIeS81b1B2NWlQUnAvdXpXZDduOW9MdnpyWXZ1N3hYL1ZkdmpTcGJyL29mVmcvRVhmNGJkN2RkanV1aysvcXZ6VzhGbmNqdit1NFhCL093U3VWdTZ0TTJVdGJxTmJPK3Z6U2JlMlQ5WFZlVmRXbjl0WjkvK21mZmovNzJUYy8vNS9nQUwxcVg0V0FBQT0ifQ.m8Swr7_fAofYqRNFcaAreMgZZuav60yH2-EYKVfP66xrL2NK3lPHl7vRx4cXO9X5YYy86HtXgdzR7jAMdeOwQA"
)
//def current_config = wdi_configuration
def current_config = wdp_configuration
testRunner.testCase.testSuite.project.setPropertyValue("fiid", current_config.fiid)
testRunner.testCase.testSuite.project.setPropertyValue("granting_url", current_config.granting_url)
testRunner.testCase.testSuite.project.setPropertyValue("resource_url", current_config.resource_url)
testRunner.testCase.testSuite.project.setPropertyValue("expired_token", current_config.expired_token)
testRunner.testCase.testSuite.project.setPropertyValue("revoked_token", current_config.revoked_token)
testRunner.testCase.testSuite.project.setPropertyValue("username", "daniyalmobile@wirecard.com")
testRunner.testCase.testSuite.project.setPropertyValue("password", "Wdp@01234")
testRunner.testCase.testSuite.project.setPropertyValue("DOB", "1991-01-01T00:00:00")
testRunner.testCase.testSuite.project.setPropertyValue("Expired Anonymous - Anonymous Services", current_config.expired_anonymous_anonymous_services)
testRunner.testCase.testSuite.project.setPropertyValue("Expired Read - Main Screen", current_config.expired_read_main_screen)
testRunner.testCase.testSuite.project.setPropertyValue("Expired Demographic Updates - Update Profile", current_config.expired_demographic_updates_update_profile)
testRunner.testCase.testSuite.project.setPropertyValue("Expired Security Updates - Change Password", current_config.expired_security_updates_change_password)
testRunner.testCase.testSuite.project.setPropertyValue("Expired Security Updates - Change Security Answers", current_config.expired_security_updates_change_security_answers)
testRunner.testCase.testSuite.project.setPropertyValue("Expired Secured Demographic Updates - Update Phone", current_config.expired_secured_demographic_updates_update_phone)
context.username="daniyalmobile@wirecard.com"
context.password="Wdp@01234"
context.DOB = "1991-01-01T00:00:00"</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d935b7a9-3ec6-4edb-a3b2-4ef57d9d9908" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Misc" searchProperties="true" disabled="true"><con:settings/><con:testStep type="httprequest" name="Validations" id="f094d8fc-255c-4ec4-90ed-e67c88934ac7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Validations" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNMVcyMjdhUUJEOUZXdWZXcFVnRzV5VStNM0tUYWdsa0RqdFN4UlpHM3NnMjlpNzdsNElUcFIvN3l3MmpxSDBncXFtUlVqc3pNNmNQVE96K1BpSlVLUHZoR1NQVkRQQlkwNXpJQUVKdWVCbExvd2luWTBBbHBMQUc3aDl6L2Y4WHQvdmU1N2JJU3dGcnBrdVNmRFVyRmRRNHdjTzBoRlRKMHdTVUVwSTU1aHFXdVBhMEdRSnJFaHcvYlRoYTlqVW1YRzZMYlB5NHNtRnVjMVkwcGgwbFZXamZCeWRPeU9UYWVZY0dTbUJKNlZ6amdCemVITVJ2cldvQll0eitnVVQ1aUFWQW1OT3I3dm9MbkJQRlpDd2FRdDhPRG9aNHY3aG9ZdWZ3VUhQZis4TjluMk16Q2szVTVwb0kwRmE2a1dSZ1hXTEZESnJlL3VEQS9Kc1R5dGE1N2hkRDc4WWwxRStNM1JtK1FLZm9hUElxSjRLbWFPRGpTTjBuQTZIeDJoWWpFS3lPZFZRaytJbXk5Q3BOTlU0dDRCRVp0bUFxY25JODQzZFNFUUJsdnR5OGQya25RamtuR0dHTGJkYXhuVUtEaVlIdkFRNGVuSjJjdFVLcUVHT3FFekRSRnMyV005bm1yRjB1WnBRaVFFYVpCU2Q4RHZLRTBneDJVamJhSFZ2cStnUVN6NWV2MlAzVU5vQ3JpM3N1Y2x2UVhhY2lSU0xzakp1c1BaZk1mcUU5aVhNbU5MeVI1elUzNk0wR1VkYk9KMEtPUlBhTWh1K1ZodmFSLzRQTFlpQXArT3JTVFNLZGpqeGQ0QTM1LzJxL1oxUXBSNkUzTmJoZjNQSFZvUmVxUXQxM2ZDSGs5MktmUVk2Z2tTQy9nRGxMdVhzMnJqMVIxaTBTeFUvYWQxTm5kYzhleHRSc2pwYUMxdmdoTHgwVmp2YlJLQ1Z0VTdCWXJUdENncVZiaU5KQ3FNWlFnWGtzbHBWZ2VFa1BISXV3a2FhTjdKcTFpU3l2eS9RenlnbXFhbitaN0dDUlBCVUxWOEtYQ3RKSU9HcllZcWhMbTFRdFFMVklUakxScll0ZU0vMUJudHVmOC96cnp3MzZQVUR2OS8xdk1FN0s2eklCeFlGaytYMjRQM040UFh4NkxKNGVYdXc4MVRZMHpoak9kTXJNbFBERXh0THMwYlpXL3E2VFVwUnl0T0hMQVlwN1p2RmNzNHJzTmFHaGtWemhoYjN3SmVJM3dEKzF4NThiUWtBQUE9PSJ9.nZpETjGFVHth9e6clWanYwyIVIqpOVPV-JdNOvMH1N0AqxnO8hpeP6Ur3smUV9RpBEYd89nCRfyDIt9sX-s35Q" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/UserRegistration</con:endpoint><con:request>{

  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Authenticate" id="60e53d7e-347b-48c0-a2ed-b378fda1cc88" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="90cdf065-0f65-4788-9608-28d00d0709cb" name="Authenticate" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://10.10.99.190:8443/middleware_2_x_x/Rest/Authenticate</con:endpoint><con:request>{"Authenticate": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yyMMddHHmmssSSS")}",
  "CardUserId": "Daniyal@wirecard.com",
  "CurrentPassword": "Test@567",
  "InstitutionID": "1150",
  "UniqueIDFlag": "0"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="Provisioned User Data Usage" id="2780a0c1-3ddb-48c4-9681-e35e9f7b0f9b" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Provisioned User Data Usage" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>  {
    "authorization_name": "Provisioned User Data Usage",
    "identity": {
      "identity_name": "Owner of User Data and Provisioning Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "Daniyal@wirecard.com"
          },
          "private_data": {
            "password": "Test@567"
          }}
        },
        {
          "authentication_name": "Provisioning_data", "authentication_data": {
          "public_data": {
            "proxy_number": "3051",
            "provisioning_public_key": "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAiYANswx+5B5eitynXwHdVRk8Ew9X1qRx
6jAtbaNcNYN615v5zD6OmDH/UubsdgeV+rfEIyQK0kOq009sC1Ujae01IyYt/qu1MB2L6b7ABCQH
y3KEEESM6V3fR+0AVZD9v3Nq5ekXmj8NvQtIBoCol+sRkvI0KsPDd39mDN/uCgAaCoXOgpgRjE20
eUH75wV0pDMBbScPRqCte6zrdwDJsQy77CmyTclSLQS7KHyWnuxzDD8Q0p5Fsgb8uAPObWtWeAPv
i7e6AaL9mjEL/2EL6yODCzSQW1YqROHJvCKGNjbX2IOwacfqq+dd/oEAC5Al3g3atfIE8Unb4Kg2
KF2NAQIDAQAB"
          },
          "private_data": null}
        }
      ]
    },
    "scope": {
      "scope_name": "Prerequisite Usage Only"
    },
    "prerequisite_authorization": {
       "token": "mPUp05+LOUjQ+4rwqzboKmoTEMtQWNkpCfUR9qVTuQR0V4AhBffJr4FKZKLM+KHtD7aaCNOd6fZ/921qbDm2T+pHR+DnymxnAz8h41a8h1wrUk0YY+J6/tEv0uHNMvOb3jwOr1Se/lWIzsD8yKFqvuecwvPbwSDBv9VNizBfNKlbQt8rW0YdMhbsg0hSD8Q0pLkoXouxL6cWTN/HfjQGO/UGZ8rksIvqufkY3u5G6XYu0t76bb9yx1EofsvN3m2MOHAigufOI55kqutX6/s4brnGojfPgZLoimhJv9FP24WDunV6VsUJ6ZOItbiJfScxvDoB94QvT8RcBfQCxhDmN1poGsgMlNgy+DFBsHu9ivFtbX1WsDPO+SGuEoWDaYT7kU9f2/o91JfcAOPPzOwdHK8Qkg+wODrK1WYw0NmI3j9U1nZRTScrmmgw5+XW7ha8fP4bXii1jwkVJbConkXxh1QjAlDdIqimhiwKZVBHbo/wKfUhahU9FowQuqJ850WInepKI45XXdZOb775oNpo6syQBSNqiwsuPfs6fsfABG5LwsSBWotUWReTAj+OTf9uMnltgJHWNuSL947COuV+0indVeeZAlrygOYXYxZwqAk5P4KFbcrf2uSJ2sDrxbrTFymAMsojRXv8mmAnWNjtgntSP/4o/bPkIo2UwFwdSKr0/g4PEy85ajD4Ze4OPyEE53N6NPCNEbemk173Y2gxEzRfllY/I7I4sFd3y/BKMBK7tGt49j1dfPnxuVvj48aW/yvsiufzxzTezZ7GMfddD5fXy87hgcibmGINIo+R3fd8wcUyyUbttQ/0k82lWB1QsDAs9XMy70eP0ouABs1fATJAIlmFshblYnTELCdXr0CP0vzXWhe5fbujObsmkb/Gznx9AvpJgAErqIdr6jyJ1WD8UaDEsVo8bTFLii6g/GHY0UehqssE29kFbviScvffG8EdwSkroVFWEGHl5MJ7v/E6rG2Gns+WIvg3MwcXwJ65YRCZocc1R5lrpazH6bOZhgfCduNWJIhtzVLwi3wNxqW1grTEqlfkNQa6ZWxL7adfOvwd9L+jbcshOqHvmI28pxNIZgxGVxau0DQLfCTjJBLZgu5nyfuC3rvEWzGFUU5PogB0XA/ZaOOyWn+BbQreancOKoY5Hsi3OvhfRzGpkIbkd/d/+dXec5ZQ7Iud5gyIEA/Tmx1y3SklFRGbwt0nv9o3d/Hy+NVTTB4XcltFYnLlWOYj7eSPApBDYFasrZiKQhNwiKZrMDoSuxufTRbRPJ+QQtQErZLHj6T7ISyPLWtMsKoEOCJgIYRtkwh4tNK1eZ9qYUlFNheK1AtTH+J/Fow95iPnpZ98ah5A8EnnieMJ9SFMnziOXTG433hNnLB1fZwNnAplxuW4JXNRsyLA7sFl5GN0vp6/bgscHfcW55538JVZ+f+f1jBREVlutIx78gPzyrCsDU5+/QZuWR5yDEPE6eWwaDEu57V65MV23LVOAVXaTmBjZrOCNRLLnBizvGHXrQbsKf9lRjza3fBjIptrWwWgzPlOP1BzXLUWWfK4Tpu6uAp560g01iQA20VohdeKVXONmh4b4Huf5YzKrTC0sZMdFDxVyiLiPYKDPXXXdlAx0GakiwoInDpTDVennljRc6Zf4hvMUSlfLETnp2ucfF/Is/zHi7tsZw1VKZcZuRNuMSGRBfHiAO2c68eMg05FiAgA63INKwharzi4gLVqo2YeqnybfEef4UWvUO3e0Uzv5UT3WHIBwEC8WRz4MbxmcAhBr7Nq+KSlaO6+M/6QzeKjeCcr8wPE2ZQX3m1ku6/AuDN8keCkvlGGQ3vGzjmIHG+F35jZQjJy1GdApK29t0evV2RzV/O3mcJWxPzTM5PoG0PC8ubfUUlwq/wd0f440YKxWxUfSJB6Ym9LlmYUtEIuoB1qx1AVTBQXEqNuBON/JQiOS3YFeOWKEYmPi1GZ12JOLr7wjyrTWjnzSluA6hir4pd6MPbg3mrnSmxQk+wxkoxyp4UFg8Wt11pVkznMsaopkOkA4+eNkD9PaxvtgaHXK9IvCSlA6jksh7mKy72X6YQukwdK8IuPd46zWYnyvA9+MO/+UJgyKY1xRZfB3zMd8wtnP42UR7kNivU4VKDa4Q+bThs2BybGE2oQkU3QO75bJZI+JWPco11ORe15HvjmeQwz5cnKIBzCQFFWeca5dOWtGriH1qM5s6NF9dd2Mm1fQf8pw2800Zw1kQqlouIfc9hovwXR8hs0oM+sji/oa/1l1AX5LxEvt/5awQr+kawBLmm20BH3X/gBQrP27j52OujghZxmZ5Wa4YgmjC3T1d21ND5V/1a+Uajfph6Z+uD45bIcgVlQm/1i7/3pkDhkrj5pvGvA+xtG7mFVs+ISVKKRfGCiEVJeL807Aoy8UXI2bG3J7zYfaFlLhcZlyiwmPhx7Fq64dU88lSKqBMKlDZ6I/IIqf8hWgulAwdPyUODWdUS/IyTekizwE8WWGOM9IcTtJFVBRWaXMYJvrGYreEgWwLt0DKKgTpQ83rWxeyV7yzKbv4u/b/9asEJBGcfDANerhC/nIgzxoNgJ/3ul9AqaerbuuxIpkztzxMXSbSIUvYfJD8k/zI9hMMQz493FvP6Dcg23mkM0jpywBmvvrea/Hxhkd1Ft7niDS6cBeHZjXgQQtuVR7Y2Ju7x1NRdRNeWIcUv8cOey6QN7QmyH55teTjUk3v0sCoAkNeekxrB6Z1imoEDOQAXIHeiluD6e6RJAbZTHDBZdKuOAqP9SClduAoAXA3K6ae8+Sj9ODXrfxEp9hO73ORgSSn/+D1VDgJ1K2sYdmn6KdCYg1KaCtsUlfeilBzbhqvIa/cYBzvGKh56EKXWC7rJyYqGo0088iscfhuGXFiXZN7Oi0FVyGwwPapOnIv1xAM/FzzxKQxyx73bM5p56bRB3SL3wyWcHyyalysADP/RPbSrf3ckVnRO9tLgCRlZnI0ay2OugNsZ/OANx6zlajYSwJNQlmo7oSMxuUc5GpmRDzzXBdeFVRbcOYNwSXpTiY6mE8SwI1LLU8Jf/V4NDj5dVcwFNI7Wsm/bvAcXLK7enjwsreVz0BAyrHREIVHxjH8LVDgp5rNKSuHgO04P5WKq8mLeGZnQTPUkawen346SeGmu5AwmxD6idvzedLTbmtQclj8mwD2TgbYtrZBCiLbrKzWVOsdyuPlEl/9MTK4Cx6l81l8pLMlsqRRt44XWhHt/iYFPDgqMGw7VEojrbiY3H4AKNz/7g+zbzB7I+lx+Gzh/EvYXpXAVJhhJEWfM77Q0y2MFdwy6Eat6xcZqDqE7DGyV3+v0uMfnC0lq7uKalLzVAxuag/Y+jD2szWfO2/J+9WQddiLISOuoco+0yJfRFeEHvxkpMn5kUxPe/TMSgStpvXFXnSWb0Jb/PcYz3hNkqI6x1t4bFWRB9p9zIo99MV3FAR6cvwVJFzxrYsAfFvtmdmswgw5I70SXOgD+Tky1YB28WP2epveP9XIQCtiugsIKoCGySxIRxFhrIha1MrdIkBGaiQvpPwrK0naRGIrZXe/yQ8ZvWb3T+By5qrPjWgFzaKt3XPy/N1/c1YX5N92S9VnfbvDdXfdVeDpBI8cUjNx6vuQNkDF12+J7ZQOvJUsX3JablbQxjPIEJoe13IwJxJxFrP8jE0w5nMwfUmB0P+hjHKW7ewanvn5VhDuXrx3y4CD7XiysZjslDs5VzILuyTajGpMTBylSjQjKyCeevGkEWE9wgCrzKDFhAlgaj59saV2Gmxt2RGz2B0jn6/LWiT3+DGjv50VC96Ks+rzXcFcO0rT5GK80QDDXw/VO6vsJwJSewcxsZtbwOVVjH42qrmSWrB4PDedjzrq8kCgR8p1YS/pp1Z5U3lsnp3AiJ8UqT+nJHBgCZM2XbPFUEw/6yiKxb8k3af+oV5S0eDaBIAxebYCNUfBOzRPAl07WARm7Wav4U2Z+AGFvDTpveNh6wh3vgoOBWIKPpbQ7Wq8WxYbhjdqX/XT+B8YqlOUziz2M7tftQMPQW6ygw4Rgdcol3iUwLx11lU9KCMSS/rpOoERGFmp3/BM17cAeXOvqvJUw1+KkAdjUVLZnkN+qBkWw12hNXRG1LfG9vqvnaxzlkI+JQaljQ9N+xGjRCA3JY+0TzOqUtHdGfzUG+e+Z98/ARkjFtYMGt2b+xan7Gi7zs7v51H6/v0UoON93ydMWWKwOAj9b/3YSuXNadJ2Dis1Edy/Y7IisCkXAFK/RLnk5MdtfvjHVUxIxVZfnqyW2SYCz+a9B2QTnhvZ1B8+Sw2J5DOgzE6OMS2EjqNyD54a9TYRGJbhcTbKhZlGwJzSxICroZK2KX7PryQHqUOAx6LrqOgOuKfwAfX6lBhCB6rUVWdBmZ4nsm65ikUdBQaVUCrv3FVIO5cFaNr2KoLeuJn+aNvdR77+x22fneOmLGtX+/2TvQR0n8XyVMy/PBFyE4EsnzawQIC3SRJJjhjHbMsYwqYjDi1MXYxZ1n/ACINy3iKAxNcnKKUVl/Sh4B8A/hznU+/yYLK/gqNkCcStCyvokuKz9Z24Pw6FpwzjnlwvdUMd8oLPCMYwc5hybciF9Cs6jvUJQVjO4iS9sbx2fdzhGejusbjWq6pz1NpZSlnNOvz8qZSPYfB4F+QVsDEtc+auiOW3Hx3c44W79rxap/UMBf5BdXCqr1MbQ8pg6s1fapAyJpwSjTY74I+GGMPHqpe/sDWdAQw3yrE/srp73kSkb7NtYp8iWrJK8op2jcFVGBcjiqV+Vsu09RL88F/tOFBpnUPnSmSizRSbQxUczSQRrn60htn1jAMT9K/BCwxRaxnKG1V58i6UETBMTR5Ko0tQHa/irfEoKH1rYwhAldpeYiMnOb9lW/9HnPugXAaOSEsmhc1fBjrjMLlfcmg6XZf3vKXyquZOeHgamFH/pukMMlHFbhdWhgr+a4CAxZYrwh2/2xXOCJKtBh08PwFP9BkMdpBnCMDsz9HradWnjIqp2Qx+tMlI0/I2n5DDL4RPefGraMJgrlmCljmJoMon3i3vxwyjxTga3pxSNLEbjupbbyXFY9zJM8ziexMMMkipwnQhZRtR0IbDb1iFXTVpfdya/1X+wr0lFckvyJ0uJ/vVML6VPKlDOtt91l8s7/Xbzt+DScxlMidJMv1P1A4w+y1ucRDjCQ4njIga0smgVPjIDQZOl94BSsYM346sNnhdZjhTiv0PuMDXB/SN2L0fqD/IBkXRcE/Hf/3A1XlvyOOKlSRuYMHRGh72gdf9tGD5c5hvu6+LWKhIihSx8mvXHKc2hMApTTEpXWUX7x5fVDmS7LjoTrYFGWNGxloyINDO8clBmbpPFFgGgzKuNYddjuw3rUpUxmqCrZ9OPFrDtD0l87kkf4WubDN2JZPM8t4f/8ukJbQsgslusN96RBgZrMEY6PxKlJ9xpNptmCURHW3/SaVC5qIPLdIJrsDyI5I/B/seHH825xCZiUv+n8jc7eTZBbXNvuN1d1Rk3tZzNjpFFWqjJE/yz4orqaAJTvrRMCWEcQNM8lOQjoZY1fEnYR+M/JRHTkpDQQHXCmS6xDj2UXoZpD7oniSG3t0EbTOJfQfrPGmn7hWM8f7df18dut1tEJvERi5W0uy4uuZcmqY1gX8gtvfHZPONKiqtZqjo+d3HxGMqoB+EYXV6THQ5+sh9gqxOLAhrHUE5hxGaJ7y8a1TnVMua/b9BwrBwqWemDVtK03J76AsUBixtnkeHF8n4BJcX2T0v6Pf5h9MA8tgR0pfsXfH3kXDHwLgeTkf7xvsCG9KZao74EA5NOMIFu5qObCPIl+EcRCPka4+/BbH1xaWIcApz6xi+qJPuezAxyLnQBDnvJSqe+g6KIPgN3Frn0xlZJyu7prkPtnRGc/HcYVTfOsi6fqxmsrHHI++x/YvjXsgMhChVwTpBk6ar3hgDYuTM9vX/mI24CCovk01cInNb+riiBYLzhnD3Hu7EM1OzOviuuK7A6hHo4rSMUk6CFiQGVGxzxMKmYAXS8r3F4mX1buH4WNrn08mjdEXf2ZiOGEX+ZbmYg8tOxQrUpAzRvf5VloQWkHr6DgP5y1liqQywZva8DXkiR/+d7ubP1AvmfiOgR9C2x6aKk9YZLD3vgHyrgJwlhY9w2PKZtTyXq1JnUYvJ9bzQeUvukakNqmRG8HFKAw9synToiloy4JSrehflgUbNDteTZsU5rRcWhe/lVwaywFeNjZd5TiYFcXX7ZaOgXdEW6Iv0AWbGObXLviYyei5TLdD9C1gdJMCSH/VZCSqoZUbyGCqfkkSel5zDrCH1DP83gkqzLPf+LmeA2tjgPuWAc3uDmZ32wntbfyoNF6HguoeeMny2Bku2/VPXxfvVqkc0I1j+/MZTToNmiK0fRSY5VzxeMZoVSzViDSrK1a7gWbUz0fbkfLVbqRF4U7Y9yEpO3S6Er42mxp3LmrXD7Ob4M3RPR2kaFaaYEwc/vBf1P/w/z04soHwxf6Rexh2MN79MsG8kB6gWU2D9OcRzVNQd0SHgFGk5MA7BMeK8qcLyVd7pRNCNN9IfBvHsNdbl3Sk/WF2E+wVzrrEKYb6sYFZa/5dJmtPBrHEP8Sl9zAwDkzD23TirkLaIOR1oG6aThDVRjXNIS+is7dihwoz8TJDs6Oq9JWI3YJ94zG8yuPndAxNBMplueO2xQDsLKtS6DqnnJ9cVsO39ehQYGH1DOuomYJ29JgwC0hTLsFgsywwhrrZaO4PbnmNOfgyN5N4K53Ays7RcYukUfg7PJdjCjoSwwcw+/UGELNel+44imrT3q3UxlhzTdymNvft43QIGr8yBQ6y/X7XAQJniYXhtodnKKJx6Cs/aDNqA+iIbbMn2kQ/XrCF58iug699uo/xV8Fx1WvCQcQGWq+5TN98JHn/r/ORHHxYSsDSOIxS/qRA/zuVLFUo/nd8smFuS5SUodm00N7hKnyMbyPjNt+WFjF0ILqMCRgzcFTq2fCruIIazhvqWDCb93SFdLU/H0YF+UqQvfD896co27rrP4HzG4xMNjnKLoMR2vwO1vVq+POoXmbsLzdxRPKUk7PZ9sFNT/rCZE5HG/1vO19qeVuCwIeLTyyJBIF5GQmrqc5J2mrWNJc83NdJ2fpcuX5xKOwkKCfRBsYt2+BRt9hWpC7YIA8HEqL0MTsZoSx3XguyBonER91rYgnH6WpjRhzP0sxo8tF+fSMYg9Rz2bO15Jp+rCjcxE54JCS7yLgAAA7DG/QsGPw++5cW707ZZjgiTlEgz6mn2nLb3wD3YjnVudXERebh/q90cgIcmSJrGgT+ooABWnHTNF+CfHg1ww="
    }
  }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="6e28cd6a-4d20-4cb9-9a68-29db170e70c6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://10.10.99.190:8443/whitelabelft2_middleware_2_x_x/Rest/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "111",
      "PhoneNumber": "+971559307088",
      "AccessorId": 123
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="ValidateOTPSMS" id="ee8b21de-152a-4cbc-a48b-4247603d708d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="ValidateOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://10.10.99.190:8443/whitelabelft2_middleware_2_x_x/Rest/ValidateOTPSMS</con:endpoint><con:request>{
  "ValidateOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "111",
      "OTP": "681562",
      "OTPUniqueId": 2101,
      "PhoneNumber": "+971559307088",
      "AccessorId": "4"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="ChangePassword" id="a574e582-ce2d-4162-bad3-11c396f5321b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="ChangePassword" postQueryString="false" mediaType="text/xml; charset=utf-8" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="SOAPAction" value="ChangePassword" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>https://10.10.99.24/UAT/EMEA/CoreCardServices/CoreCardServices.svc/basic</con:endpoint><con:request><![CDATA[<s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/">
  <s:Body>
    <ChangePassword xmlns="www.corecard.com">
      <requestData xmlns:header="http://schemas.datacontract.org/2004/07/CoreCardServices" xmlns:d4p1="http://schemas.datacontract.org/2004/07/CoreCardServices.DTO" xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
        <LoginUser xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">api_middleware</LoginUser>
        <UserPassword xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">Wirecard1@</UserPassword>
        <IPAddress xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">10.10.98.101</IPAddress>
        <header:UniqueIDFlag>0</header:UniqueIDFlag>
        <header:UniqueID>MDWL180222222651873</header:UniqueID>
        <Source xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">YND</Source>
        <APIVersion xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices">1.2</APIVersion>
        <ApplicationVersion i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <CallerID i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <CalledID i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <SessionID i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <ANI i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <DNS i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <Language i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <RequestDate i:nil="true" xmlns="http://schemas.datacontract.org/2004/07/CoreCardServices" />
        <d4p1:ProxyNumber>1789121880857</d4p1:ProxyNumber>
        <d4p1:CurrentPassword>352593</d4p1:CurrentPassword>
        <d4p1:NewPassword>Pwd@4819</d4p1:NewPassword>
        <d4p1:ConfirmPassword>Pwd@4819</d4p1:ConfirmPassword>
      </requestData>
    </ChangePassword>
  </s:Body>
</s:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="DOB" id="a8a5b401-fefc-40c7-9f78-6587c14deb8c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="4a06d251-f73c-42e9-abb5-0450350c9920" name="DOB" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8089/Authorizations</con:endpoint><con:request> {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "daniyalmobile@wirecard.com"
          },
          "private_data": {
            "password": "Wdp@01234"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "1789605043337"
          },
          "private_data": {
            "DOB": "1991-01-01T00:00:00"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNVlo2VlBqT0JiL1Y2aFV6WmRacHNjbmtQNnlTdzRuTWRqQmgrUmpaaXFsV0NKMkxCL3RJNG5UeGYrK2NoSm9tbUduM2JNOUFBVkUwdFBUVCsvVzQzTVAxVldZRmRFZVZWR1dMbEtVa043SG5ra1E3cDIvV0l0dzd5Ti94VW44SmZ2bXBTdEJsTTk3RVNacEZWVk43K1BucDgrUFhPYmJsQlJuMmYwWktObmZFYXJRaVdkTEZoeVlscjJQdjMxK01mZTR2ZDIxd0svdE9zNnlFL042U2FQZ2FWaXpIYWZOR0tWUmcyaVNMU05LL3JPTkNoS2dBbjhJc3FUM2NON0xpMmlES25MYW1OYVVzc215UWxYTkFQV3NPZ2hJV2Q3WHRQZndSN3NRWkRscCtSOCtQTUxUVUpTZVdVRkJTTW9Bc3BNM1VVQVdKMXAycVlRdzRUR1I5U1pqK3huQmFmZUVWSGRGaHV1Z3VrTUZtNnBJVVk3VEVLVUJhU1ZmRjlFaVFXWE1LTm1vaGJuNFdoa3hhVnFvdjUyWXpFWi9NTG9FN1JaQlZxZlY4VTdudlZXQjBtcFJOUXgxcXoxSmZEaC9CdXh1YnIyQ0RFWkZWU002Wk9JYUZvUko2WHZndEx2ME9sbVM0dnlNUWRzMXgwRVhjSUx3RmJoWHBhWmt4U3FyN21ZNlJEVENoNk8vaU8rTmNNcjh0M0dPc3FCT21MMHVHQms2bWZBemJCOSsvdmZ2di8vNkV6cVlXVll3dGoreDhYSDJ3ODkvaVZ5LzdpTEsvcmNoV3FTeW1NR1RGdWJvN2JSODBjRUNXL2JYUWRXNktEdlZzcjREV2lmeFNCY2RMTTAxbVZBc2dvb2cvTkhuaXgyMDg2aWFXWHFmRmNuaERLMm1WVFNzaTRLa1FmTUQxSFYrZGgwY1lIYlhuc1IxVUY4YnQwMnlpc3FxT09ENDBlTGp1NEE0UlFwVWx0dXMrSjZJMmczQ1pmY1k4TGF1TDNXSW9pejMyR3hYaVlLVy9aUXBLaXZleWFCa3JtdlFiNjFxaGwrTCszOGpiWFp6VTdselFqcVoyU3ZvL2lsd2ZJY1F6L1E4aE1NM0N1eDhoNkI2REtjT29wUlVKMU41SDdNVCtDNkYwRkdiWkc3ZldkcjNKS0gvUjR4aUIvOTlHV0RmMGlsNDZUdVNWL2tzZTcyVG9ydFV2QlpKOFpzcVdaQTdaN0JqMlB2aEZWQ0gvTlZHRDNiRkVhdGdJL3AzbmlZL1Rvdjlqa1hqYlJiRUlLWHN0MGsrMWFUOEVkR2xVK3pyRkU2K3ZLdEFqdC93WGRXbFhISUU1MUFTM0pOaW1LWDNVWkc4azc5Mk04eG41Y3ZSUHQ4SHJkamxOZk1zamJ5UnhxVnV0WUZGZ29KVU4rUjdTcjlPMGFWTGREdTZ3TEVVdUNzaWRsRDFUaVdvMkNWRlBEVWUza3FGSFRCTlNFcUt0eldzTHJDZWhaSlpHbFVSUS9pKzJVTzQrclk3dEtjZHE5UDN4Y3AzeFBxbFBmSks4V2RaLzlpVGlILzQ0OFRrcVNsYWtES3JDd2FQVlZGNUZqSHlFMDZqNVlpT0VsaWtCeEd3V1o3alJPN1psM3dwSHNrZTM4T001dm93K25oMm5UWm5qeXZ0VmRxRzhMZjd1MjE3OTlBVVBUTGpMNi82eDdsZDh3d0dtNzNnWkU0U1JmR1NMVytleFBqbEhxc2lxL1BIQXcrUDg0TTRvblQxcDdzcXRuQTJJaHRDcy96dzVuOTRZR0txaitYNW9pUkJsdUx5MEQzbldpU2tZT1ZKVkVZVitWb1hyVGhmNjhjZmRmSG5idnh4L2tzTC9qZythZVk0K0RPSTQveGZnVGhTQkczejk5UnNmMkpIZG5sVU5GOU5mUTJyTlpYSGxicEVLN0tnVVJJOTJkTjluUjZ5TnFMUGV1L1BXdTg2MmJabWlMZDBRWXFDMmNPandvNTB6eFlxc252aVdtVXhZYmg3cEZIRDVTU0k1cEU2QTN1dzB5SzEvNEZOY2t1aG9zdG9kakdMVjF6QTBZRUJsTWNmVFlQWWhVMC9CRUFkMzNDbDdGaWxERGhUTlJMWjBJRkpJZFJETkpaVk9QRTV3S3V4RitOWklBVE4zQjBMT2plVFRFNHE3S2FLalFUT0NkU2hDYXBiUHpiVFpRTHZ2R1RXK0RHK3NLZlk5RnpmUmtsMWgvbnJIWFJ6RVFGWnQ2R3VtQ1BmQTJNbE4rMUJDTmJxUmgrcnRqYkpVMS94OXY3YUsweGxKWkVwNUdBNmxrMGVENnhFMXpWYk5mVng1ZWcwTEd3ZzF5VFpxV0E5a0QzQnp3Z3dJZUppd1Z3ckFJNGg1enVLaEVRekJaUXlYTHNMN05JYzdmV3R5ZXV1cFF3bXZxSi9zbElhb1JFRWJBOHlSU2hBVjRGQm1sTk56RGNheU9lT01yaEROQWVHYlVqV0hsb09VQkRqOVNsSVBCRUkvVHZIMWVVYkFlOTlKYzhONkE4Q0lCdExNUk53bXUxTVFWNHZoUnc1c1RLZlQvU1piVVBUR3FtQ2JsVzN5L1dzMGZmbXpMUDYwWHhxS3NTNWtzbVlEeTJSem8wWVY4RUk3QkZYT2NqRk51Q3U5azR5M2pzVEZaa2MvcVJEbFNNalhRdEFhT2k4cWxsOEpubWczOEIxbUVLYldteGZES0hCd1RFUGJhQlBMYWpzTUZBM050Z1oxaVNjYTNzTTlTbDBnWnZ2QWdBTE1pa2J6K21YUmpyWUJiSFhHRkNwN1poUEVXOFdPdGhOTVBVOUU5Q1UzVHU1RlhnUnJtZmJaYXlPbDVOTVlIZ0VISWM3cHMvTUUzWGdDNnB2Y0g1MkkraTExdDRoVmpiQUdmTkdFa3BHdk4yYVVaVUNVRFlnbHJjNFZVWlE4YmhBaERLeU1YVFdmc3BzVk1ieDFSWW4xWVVIQi80U0JKd3pOUnFmVjNjZTFOZG9wRzhOSjY4OUo2d0MwUXdEcTVyZ05Md2hvQkxBV2k4TjI3ZXRhVzR0cHhUWTR5bzMzUUgwN1BDQ3hMbDNJMVNHNWFpRkJtVGJnN085N2FqUWc1Z2l4Ynd3YmR4b0hLWGVXdmVJWTFiUThYMmI3ZFdjUG05WS9Rc3dnck5sVkRFWDYxczJNQ1hEWm1mRzFkWlkwMGFMcXRBQ0s4NXo1QnNNZ2oxSzZZaU1WRWVmeURkek1PWjlvUm82c1o4aDBMZHV1SEFPOTdvRzdCbUhoMzBBSm5sc1QvSlNCNW1JeG1GaE9IUm9yV2ZGamVEdGJhc2ZZM2k5d3lQVjFqbmR2Tm1IcXNiODJFczlDZTkxemhwUjNsLzdtczJIcFFiNkc3ekdTc0I4MWdMcUxRVDgwSUs1YjhhK2pBVnpOSjhPWmxZaUs4d1hNOCtPOS9aWXNmU1JtY0Mxd1hsdXNQWGNQRnp1cnpjKzEwZEE0R2NFeUE0Y1VXYVhIRzhEUS9USDJoN1lTb1FTN05tQXpxRU5oMHNYRGpTcUR3MDM1c2gwdk5GamZzTHNZR1N0MVozdXFob2FxY0FDbGFMdFRUK1loSTJkMGxzeURodXJxWmlQS0p3RDhueHVReEVuUUhEV0hzOCsxMTRjZXViWUZQRTZIT0sxNGdTcHQ5UG9tSjhyK2NDWjVyWHR5SG5BN2FhM3dsaGtlcUpPNnJ1V1FDdU4rb01sRnlhQm9zc285ajNka1NXZmViUG13aEFtb1dDTjlNcHo4WjVaNjNycCtxVmpxOHhBNENmSVpJVmRIRHByckZ0VGVHT0p1c3BPMzlqclVBNWNQRUY3bXBwcGVFdXNhaERzRmVvb2VtWUtlTlBHMER1YmkrNk5EMzdOL01aMHdjYTBkNXJuWElRQnFCTTUxUmZCYlBjTGR3MkZJdGpmVm9QdHBHbkFkTGZldS96dEZuT29yaitwdC9yVmxlT2l5N2wvTFNtWEY4alZZeXIyKzVLME5OcC8xcjVJUkQyQjQ2OSs0YVJmK0V1YkY5bmIrNk4wOVVFUTVYKzExVVR2UllwNlFTeTlKSDR0ZVozS2oxNjNCUGE1UjFHNnFobGhtNERTRmR0R3MxV1VMdTRwV3JFcHFZWDBWU3JydFFjcnM5bW9MVU5FcVIyMXRjdGpsY1ZxaTFQeHhwWjcvK1AvMG44L1IvWWUvZ3M3MVZ3QjlCOEFBQT09In0.WxjJJf5o5YW0TcXL14W-meh3TPUdpIzeq4jUF8kjXZUyMnrfHq7r55tzLjphMSCRsTXJ-sAiwNIpXnwrRIKzqA"
    }
  }</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f93d6f1b-56a3-4b4e-9938-1cd239e65301" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Anonymous - Anonymous Services - Any LMN" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="56882eff-f9f3-48b1-976f-2dbbb11edc02"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="1dc4d5e2-cc52-4ffb-92ec-5c1c90291e45"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services - Any White Labeled" id="b378286a-1f6c-4e04-be11-1d105267e728"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services - Any White Labeled" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="66fbc4e2-fafd-4380-84f7-0aaf5ec077e0"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token","Bearer " + l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="94d02d1a-4736-4ad2-968b-af5e1d6560d7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="0e183c5b-1b4e-48e9-b438-a619351f4e2d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="58a315f9-d16f-41d2-9d2e-fa5228b711e4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="307c1b0e-08c7-4cbc-baea-190e9af21cf3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="2614bb13-b577-49df-b697-052964380807"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="aefe8912-ef6f-40e6-9a7c-0f3a1c18e381"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="cfa9eed9-36c0-4caa-b31d-28e14b662ea8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="27ef8d2b-5a0b-4a2d-a1e2-b152bcdbcb34"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="a5a303af-d3fe-4d43-aa49-3b2ed63763bf"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="SendOTPSMS - Minor Issue exists (PhoneNumber)" id="24c4fbf4-7385-4daa-a534-d3b3b8512f11"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>f200eb06-a428-41d4-875a-9bb7a442107b</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ValidateOTPSMS - Minor Issue exists (PhoneNumber)" id="748abe84-04a0-406c-a16e-b482cfe8ced7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>20ea13d4-2fb2-4c30-9272-a3f42f354c81</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="45692b54-7a67-447e-a7a7-73da04683839" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Missing JWT" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="3069babc-0fa8-409b-a57a-380ff7150881"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="7d765bc8-7f5a-4b31-9f88-f5125a1bc475"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="groovy" name="Nullify JWT" id="011785cf-b95b-46be-b478-9a221429003b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}

Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", null)</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="2ed78d44-496d-4abb-a2d7-9a1a61e4dbfc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="62031752-67f0-42a9-ad36-6ef2db12fa63"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="15c86049-ee38-4fde-a90e-b6dbd4fd2e43"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="5881c97f-cad1-4fc0-91f8-d8ad616e5eb3"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="ab869c0e-20ba-41e5-9991-4adc4b4373de"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="55c236a5-7435-437c-9417-a2e9367b4757"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="5c35d7d5-cf40-4c14-bf31-440b482b50db"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="02c01792-5bac-4136-a265-57f984c872d4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="83be95ae-6e16-43f7-ad7f-96ae0ed349cb"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a23e3d20-13a2-4143-b505-877af5914223" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Invalid JWT" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="2d275bd4-d24f-4ee2-bbcc-0b49c0bfb34c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="78153e75-e8e3-4aa9-b1c4-d0f3057a6d32"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="18e5d423-7cc3-4a75-b5c0-ef9f971021c9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="e7e61ed2-7c31-4f14-b0d2-16ec4f3869db"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", "1"+l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="74f7f6cc-b18e-4c5a-8dd1-e60c948e4a66"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="c9de0402-a8e0-4fdd-9a9d-fa06576c117e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="e2f147f6-9f29-486d-a08e-6c54ccacabef"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="871a9c5e-cc0e-40bf-931f-cf22c8001195"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="98022481-df22-4b29-8155-235e6530392e"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="a4992a30-e8e7-4b96-bc4d-45f55f9bb073"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="5133e7b0-c3a3-4a29-98a6-03b0315d5e68"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="8a24e307-0544-4edb-b670-1a7fa9a694db"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="69702862-7ba9-4b33-a16b-ef514c8de751"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0b7a4e7e-3e51-4185-a666-2cc97bae2a47" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Expired JWT" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="c7b37e99-107f-4ea3-9c3d-08b1433f4bb1"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="a6431b00-e94f-4ec0-80de-364075083448"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="groovy" name="Set Expired JWT" id="e31c7641-402d-479e-8788-9761dd801d82"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", "Bearer " + testRunner.testCase.testSuite.project.getPropertyValue("expired_token"))
</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="056ba5d3-5d98-4660-908a-f8312c7d3c83"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="404bbb47-6636-4111-ab57-0112e32869a0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="f75ed1fb-98ac-4bb0-ad9d-a57935fe1b14"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="a8d2266f-4a24-474b-95a0-2243d01c18e0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="e7e0d660-6e75-4b6e-8b1c-4065e26af559"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="a3f06412-6b92-4908-b472-5004257d6880"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="25307afe-7a92-4781-b53d-42f359385632"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="0ac91358-8eaa-4307-afbf-b861467ed117"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="2659d538-f6ca-4c25-b2a0-0b6e3a6cd20c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bcaf65d0-31c4-4757-9b22-06d28d2058d9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Revoked JWT" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="680ea3b4-b9ef-4d5b-be7f-6b4bb881311a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="d487fee3-5382-4190-97bd-25a909b068bc"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="3d5c1cee-f30e-4eda-ba9f-8c827058d7f3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=context.fiid}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Revoke JWT - manual step" id="e9fd6a36-eab3-4a95-8937-4c63224d8163"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import com.eviware.soapui.support.*

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", "Bearer " + l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null

def alert = com.eviware.soapui.support.UISupport
context.otp = alert.showInfoMessage("Revoke Authorization ID " + l_slurped_json[0].authorization_id + " and press OK")</script></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistration" id="9adc6a47-5d53-4d11-a7aa-28f12eaced70"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>861e699e-4c9e-4e22-b2d0-eaa5ef7b62d4</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="UserRegistrationValidationParametersEnhanced" id="c72420b3-4a89-4c90-a8eb-19431f63e1e5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>51d83b25-ca4c-4d8b-a3f1-9cd3a10cab7a</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationSS" id="3f0bcae6-d894-472e-9288-5ebbf698f87f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>4f53b01b-ddd6-4227-9eac-e687690af826</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="CardActivationValidationParameterSSEnhanced" id="d551a46d-8b05-4ed7-8f6b-108b81189cc7"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>1bca2fd1-0d2c-4c54-8281-72459ffddc2c</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPassword" id="c7f8ce73-7f7d-44d5-8c9d-77a0ba1631b5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d9191ef6-5846-49ae-95ff-bf030709dca6</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotPasswordValidationParameterEnhanced" id="2c63f358-646a-4447-b410-8163d8e16c67"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>b9e9db55-8039-43ad-aaac-e5c2ad0ea4da</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="GetSecretKey" id="4246571a-6533-4627-9747-b678ebfbd30c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>02eb4554-6f59-4aae-8cf5-5eea28aa2b27</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserId" id="4b2798cb-62e3-45bd-b875-ea191faf7213"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>c21e8a70-1500-4035-9421-07302261af6f</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:testStep type="calltestcase" name="ForgotUserIdValidationParametersEnhanced" id="73bd87a0-b954-4581-bada-85a91320716c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>2ffccaea-a45d-4b1e-b1a0-0a075eebfdbe</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="60d59098-683a-4f4b-9e27-cbcf7f33e126" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Permission Exceed" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="bfd0295b-8564-4ca9-80d6-7cff2658a79c"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="0afdd1eb-3445-4d71-87ae-1fd4fb829011"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="8442cd48-25a6-4687-bce9-7c2aa5059ed1"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="0ed3780b-817a-4609-8637-eaa4a76ba354"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token", "Bearer " + l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="calltestcase" name="GetCardDetailEnhanced" id="29e97def-a7d5-481b-b99a-362b478c9cb5"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>d67996bc-4ecc-40f9-8b22-a307b148e6a8</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>SINGLETON_AND_FAIL</con:runMode></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1ee9e361-2e46-4b80-9963-71150d030146" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Anonymous - Anonymous Services - Any LMN" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="02fbc202-a989-4d3c-9382-e2fc45332a64"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="76b59431-b1fe-42fe-913f-9edacebbef25"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="d5916867-6a98-4801-9dfc-0e5d903501a1"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="747b6dd4-5093-4f36-8c53-f8919bf49762"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="bd4bf517-d7f0-439b-91a4-7952e6359558"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}
log.info("Known issue exists (key fields):")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="0fb80e33-8ccd-4dee-8f79-6924bc86532c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Read - Main Screen - Any LMN" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="25119dfe-e98d-4cd2-8a32-0ea6fff73801"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="a85b98f6-dae1-470f-a746-b25af48c896b"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="8954f23f-6b65-4c68-8b32-2ac03a5736ce"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="dafbad73-0998-46c0-a856-764072b065dc"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="223d4d97-b8a5-408e-913e-23a16c1419b7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="35db3187-28e3-48b8-8ab0-ae9762fe7814"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="f3f361b9-a947-4b53-b65d-0eb07c691a2d"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e1332ae8-d150-4305-8a40-fb2bfaf5ef43" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Demographic Updates - Update Profile - Any LMN" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="58b394c4-4344-4f88-8fc3-b831c884f3f4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="98be4b85-9221-4c87-ad08-50bb323dc934"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="55d7a688-e0f7-4855-a6cc-ea2eaf568571"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="16f89fae-d02a-4d5e-9d8b-380c1efaf297"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="bb9f4b44-0c42-4a76-ad06-4fd02575ded2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="c8e32eb4-731a-471f-b1bb-b4fde00f7f58"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Profile Updates - Any LMN" id="0f50db2a-f498-420c-a4e6-4d35e658d895"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Profile Updates - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates Response" id="ac16d3ab-6d48-4672-b990-fc5920f2847b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="98947460-fd88-4b9e-9b8d-b378392c87c6"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}


run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6e1b2499-acd7-48d4-b67b-5d0b1f98f791" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Security Updates - Change Password - Any LMN" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="02201b67-fe6a-4bf0-bd1b-83367a484ffe"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="9f332a36-ad4d-4e21-89c9-1211313f1665"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="02a16eee-4218-4568-8396-6b815c2c0b48"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="42c99893-0cb3-4b52-9cc6-3ee5555ca969"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="0104214c-09b2-4800-86b6-c5cc0220c137"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="77aaa5e2-a082-4376-bb32-ec25450d6230"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="be96f6c5-ba50-4fee-8704-6d80e384b064"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates Response" id="00876526-d506-4e38-a430-77706a971ea0"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="3f001271-528e-4858-a742-7c424aa98fb8"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="899427bd-acab-4398-aea2-e68f9986332f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Security Updates - Change Security Answers - Any LMN" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="5b271f07-1954-4605-88da-768dac0a3a17"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="99451f64-9c5f-426e-a795-c1cc88374082"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="f3ff1b08-5c85-4144-9541-97e904a3af45"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="05331066-5989-4827-8c90-66ced6b180c5"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="c42ee7e2-c047-4f43-ac28-63e7a25c6ada"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="303deb9d-7eea-4adc-9bb3-0ffc26c6fe77"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="a0683ff0-b4e8-46b4-b670-6ecba75f3774"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates Response" id="3551a3b4-72c0-41e4-bd2c-86182496647b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="03e898b0-c7ac-4a96-83c7-2af17cca860c"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}


run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9a500aba-9b33-40bb-9cd6-a672420a0266" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Secured Demographic Updates - Update Phone - Any LMN" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="a466dbb9-28a7-4abf-a8e6-2265d5e73b82"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="046059fc-5dac-4d17-9345-31b12f942790"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="8b4b7474-06ce-4feb-9f2a-b866f6989176"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="797762a4-6634-4705-b9ad-18365ee05aa4"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="8884b6d5-0a49-40d5-8491-34ae460d933c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="db218075-43f3-427c-bf5b-acdd8c98489d"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="794d0dd3-d3dc-473e-afe6-81de5915952f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="67883d4e-7153-48cd-b909-736614504943"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="28cc5f0f-5cc7-470b-baf2-e30e4daacccb"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="2d2f305e-4d6d-4a19-aa08-8e2c85f79813"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates Response" id="5bb2a135-d9e1-4c4b-bbbd-0fa8ee8db1bb"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="7b072a9b-4b8c-4d98-a33d-efc2f0490445"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")
</script></con:config></con:testStep><con:testStep type="httprequest" name="Introspection" id="f6d37dbb-aef8-497f-8f7d-5c69c0307529" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Introspection" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8089/introspection</con:endpoint><con:request>{
  "token": "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNVlo2WE9qT2hML1YxS3VlbC9lenN4eTJKazRYM1o5Z1M5a2MwZ2M3MDJsQkNnR0l3VEJFQjlUODcrdnNKM0V5WHFPekpzalZZNHRxZFg5NjBQZG92bll3RlVaWlVXOHcyV2NzUnVHVTlLNGJoamt0aUNycVBIbXhYSWNOcTdGSzBHV1dtSzdLVW50eXl2NVRTTU9DU3ZqY3R1NC92ajQrNEhSYk0xSWNaSGRYc0FWLys3akVoOTUxbVRCbnVtcWNmM1h4eGR6RDl2clhUZmh1VjJIV1M0eHIzd2FCNC9EaXU4NGJnNHhpN2VZcHBrZlUvTGZkVnlRQUJmaHV5QkxHNS9lTlBJaXZzY2xPVzVrRmFWOGNsWGlzdUtBR21ZVkJHUzF1cTFvNDlPSGVpSEljbEx6My85NGdLZmhtRjJZUVVFSTR3QzU1UHM0SURkSFdxNVVTcmp4dU1rYTZzQTZJVGp1VmtrNUw3S3dDc281THZoVVNZclZnRVdZQlNUazFGVVIzNlI0bFhCS1BxcGgzangzUmtLMk5kUy9qa3hHL1E5Y3I2OEpWYkppa1pYekVVQ1l4dUdlMFpQMDEwanRjVnVDS3ZWSjhlYUNJOWhzRDRNWEdPWXo4d3dJRkJkbGhXbk5vbGNRN29VZkwvaXM4djBzcUZJZVF6ZWNEQi9ENmtUdXV6Ly84L2ZmLy80RDcxMmZGVHphLytEancreTdQNytJQ25TK1FieEpTcE1IR0traDlIK0sxdWZOWGUvdEJHVWQ3NXlsYWI1QzdqZnBwVGdHMThZa3VBaWlIODM3MFdBamRwc1Y2WjZCVnRFeTdsVkZRVml3L1FGR2ZIUFJDWUtzWXVVcmJGcG5Kb01zNGxWWjdHWDhBNzNQQ3pnZVZMeGFyYlBpTmZuZ204ejZjQkorN1FIZ0djOHFNRnZob040NjVNYkxpcC92d0Mva3dkcUxvL0JjS3Z5T1JQeHRaK1daVzg5SS9sbUN1ZTE3cVBlTEV1MGhGOWlZVWxJZVhmTjczUHlZUGxZbitlUDNRSG1aTVg1UzFIMm00aDZFa1prMU43WFhGSUIvVkhoT0Q5a1BWOGtrTFB4WjZuejJCUEhkZlg1M2lPbjNYTlIrWVBtcFdVMnpJSUdNOHY4R3Vhdkk2a2Njc2RkZTMyQWUvc0tMakMzWisvcHhTNHBleG03akl2MU41ajg1VHI4dStFNUs1eUVHZjA4ZTQwaE13cDk1eWdsNVRlMyt0a045aUtkRDRaZ1hNZWRTL3E0YjN1T1QwcStLYnBYd1orV2ZGVlJmUFZBakZwY3hsLzdMRXR2WjRLbzVIUzRQdngvSDB5UFRtVkp0bXQ5WnF6OGNDUjQ3Q3ZpQTdZYnR3WEVxVVJCazRlU3Y5VjZ1Mng5UGwzSk8wOW1Qcmk4NmJIdnhzRklEcWZzbFgyOS8xTjJQZmMvZ3dFeDhmOVUrekcyMkp6RDQ3S1hRRXBxeUxML255eFN6UllVWE5XdkNGczhSUFZlM3huYzZQc0NjYXVERnBpS3J5cGl6dW00WWgxOEh3czY4MDd2UU94ZWRKNzFPZHgwTjF6RHI3eWZXbno1eHcxYUhxOVhOaWdRWkM3bkpwVlpiNGlhc2xTTUZyNUx4S2k3SlM3UWZ6emJCNnBiUXVmN1hZZjZwNlhVWUgxRWRCditQNHpEL0pSQUhpcUJ1aHh6Ylc0L3N5Q2FQaSsyenFlZXd5dTJUN0dyRmZYUkQ0elF1SDZadUs3YXZHcGllZEx0T21sMkFyTG1OMDNCTmIwaFJjQ3MveE1DQjdtU2hKSnRIcm1XV2tOclZaRHVPZkRXSVovRjRCSGR3bzhYajlqcytLZmhTU2YxNGREbEtGa0lnMEs0T2xZZVBocWpuYUhFN3N1QVlUb1NWYUVqZUxMQVVGWXJLdmRkSGZVMVdJSkxvblRZb1k1Y2xHNWg0c1orVXpGWWpBSFlMQVluQTlsaTJNeFUwTTVIU3RGbG43Zkc5aHVORmZHWHVVVnBwWWxCWXkrN1VTcjNNUmRxOWF5dVJMbzVFa29yTWdybGwyYUZxOWNFTUQ3eUJQK3oyM0FRZ1BXbktFSFZUQ3k1MmdaMUxFNW5PdE4xNE1GTWpUVWVoNkNOTk5KZVI2anBlb2tFREloYklVRUN1WmJlZ251UUdsTW83UHkzTFFCMEkzbkJzMklreUQwU2dHMnErUldLNERTMnZJSll1UTJlODFKaW5FcnR0QTRldXNBTGlpVlNLZ2RYVkFHeHYvYjR5d2ZZWWttUlRoQ0ppSnUxYUlhZlVVUjZITzhNQ3V5Z3lFcVFaREtYYUlHL1pEdUN5MndwUm85WlUxb3ZBMGRlbUJLWlFhT1d6Z1FKQmlselRBaVljUmh0Z2xyM1Foc1YwQjNSTmFnMmdzMmhpR3l4eDBxNHdNandvZDRmYWtrNk5RU25ickt2cVlpNTVLZkpNTlpwcnpoaTdWamZDYWRiQ0xHdGFVSk53NmcxTnRTMkhsR3BlUW9lR1FEZlcwdE44Qk9aNm1rZmNCeVBkb2lPLzE4Nkpta3NCUTAzWGJoV0dIRTBzNmxsV0NyQ1ZiaUtEZ3NoMWtCRkNPakdWM0xYZ1pta25JWnpaU2s5TDhxa0Y5VzI0VktyWk1JcHR4RFZuWVl2YnAyZjJRUTZrZk9xSjBZUWdSZkVTUmVEMmlnUExvSVlVS29qUnJpYTErM3BDSnhPSlc5UHlCcmFpN1FLVVNSQU43a043UFBMWTRoNExUY21UakltV29sNlkwcW0zOUZTUGFqc3NLaUllZXBHK0hGYzhGaXBqMTJXYWdPNE1wN04ycmZEU2dLdDdBRVVLNFdidFNtaHJ5WXBxeXA3aDA5eUc2Z1pqRmJiZ01uU01BVmdCQkdMK0dYczJnaTVzejRFYUpjanBsb2FVeUM3eitwb0FHUGNWRHh5eGdqWVlCVXRYTU9VdW04aDVaQTdXZ2lZYmtnV2pTYkNFOTY3c1NXQ2diMDBwTDl6bDR0NVBoSHRMaUdRRGRYVnQ2Tm00NzIwOUlWcURwUkpCMWRqNEE3UXkrb2FDK3BGZ0tUbDFXWGZvSWpBTG1DdTZpUmRaTzNlSElEOWp3N0VGbmU2ZElkS3hRZk1CMklXT0w0MkhsaFgyOVczSk5SbDNrWXhXaUxvYnBBQU5iTnN5V05LbW40UkwzNEZybk5JTTJTVUxiR05qV3U0MmhCSDFwVUN3VXlQRERsS3hOSklSVTh5cEhFNjROMVEzVGNUWndHMXBsaUo1c0wzeDdGWWFRS09uTFNOamhqbzdIUzd1RVZWS3ZLVFlzOEZrSWxJVk9hRmpLMVQxV1poNDhHcUhiYStuV1YwSHlORTZrS2h0TFkyMUprUkRWMWF3SnVmTFVHaEJqWVU3UXNQMXpCNVBmUVd0Q0FTWktaUlJTRU9ES01EeGQ1M3RSTXdCWW5sZnMwTVpKRjZHVWlPRlN4NXJEbkNRcUxkMEZ1eDRuS21USGVqWHVXekVoSGVic3BlTjVXV2xHNzFlSEdYcHJabUtpdWtQTGtPdDUwMVlLbDdLdDJMWk43cGFjOWRPTG0wRjBXcEtndHVXay9hbTh6c0F5Wld6MldtcVAzeDdHMFpERDAycTlyMWV2Nk40VVEwYWtpQmV2UlhrdDFMTEVsdlhUZWxhYXIrN3ZKTC9WZDhTR2kvcXhKRzQrVlpxbmlVK1YwRk8zdnQ4U3huNTJLRFpJbVkzdHhUWFJieFpRM2hXUHhxMUlHVTA2dGZYQ2JsWmorbzd5RjVhWGNySnd4V0tMemMrOC9ybHV3dlQvcFhPL3dBVmV6QWc0Qm9BQUE9PSJ9.Lpc_0KMqrfpbD32f5Ko28RI8XfXL5eGPdgpgfDjmbspnRcFXlpCxEmfYy2gAo2JZ-Ap4kL6MDx1DxwM6HyQWAw"
}
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4b235137-cdd5-4149-8376-df5fc4ab3d21" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive - Anonymous Updates - Customer Onboarding - Any LMN" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="54905547-9c76-4855-9c5b-3d38652690c6"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="72e3ba44-d922-4660-9e7d-1088b0eb8d72"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="449c0b68-f9c9-48c8-ad64-684273ef945f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="6508cc73-ebde-4d30-93e0-ee755cf58b42"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="9249d5cc-f0ce-4a9e-8067-8485539a2bed"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="a414aa54-d63c-4e9e-9f02-bbed8cd251c6"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="48e8051d-edff-4ee8-af3d-8f42c6854385"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous Updates - Customer Onboarding - Any LMN" id="6aeaf542-7bd9-41b4-beea-8e935b10cfed"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous Updates - Customer Onboarding - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Anonymous Updates",
    "identity": {
      "identity_name": "Owner of OTP Data",
      "authentications": [
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Customer Onboarding"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("current_token")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Updates Response" id="b3c34a28-bfb7-41f7-bafb-41b60b6150c9"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="34a95615-493e-474d-a1a5-5a4401800e4f"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

run_service("AccountCreation", "POST", ", \"PhoneNumber\": \"+971559307088\"")
return
run_service("ValidateIDDocument", "POST", null)
run_service("CheckIDDocumentValidation", "GET", null)
run_service("GetFee", "GET", null)
run_service("FXRateSearch", "GET", , null)
run_service("ValidateLoad", "POST", null)
run_service("FundingAmountInquiry", "POST", null)
run_service("CreateEEPaymentRequest", "POST", null)
run_service("UpdateEEPaymentResponse", "POST", null)</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="322d110c-ebed-49ba-bd08-f441afd91cd0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Anonymous - Anonymous Services - Any LMN - Missing JWT" searchProperties="true" disabled="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="13df39f6-02ff-4a97-9f8e-c5ffb1ea3bcc"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="19255cc9-1f99-4511-865d-eaf9c11126a6"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="d278be4f-6f34-43d0-8cb8-533946f90607"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="e12a8227-e7a9-4e2b-a6c8-74f547f6275e"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("current_token",null)//l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="948d7a2a-c18d-4f1e-8ec4-4f5bcd91dff2"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService - No JWT'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}
log.info("Known issue exists (key fields):")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d15e0994-ae5b-494f-928b-54efe108d22f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Positive" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="6cfe90f4-bbd2-4fe7-ad46-2d5741cef35a"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="e8dc1042-da0e-4101-8f69-1fc6440833b4"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="e893ab5f-c1d5-4197-973e-013ebd8a9102"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="f0706261-85a5-4957-b4d6-610667846337"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="84843244-b343-41a4-aa7f-56ce4a0c619b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="e833e681-0b14-46b0-b688-435a88927cb8"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="7083fe75-abef-4a04-9fcb-f5a0d0254dfe"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="226e69df-7253-44b0-9868-48e29ac7ecd6"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="8c77dbc3-a4f9-4e43-af63-8393b3ac460f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="a1a2a0b9-ea4b-4f66-a6d3-5e42cca3a3ab"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="5e6912c2-16a0-42f2-9deb-bf39ae4d3dbd"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="9a4bb787-5086-4af2-b3e5-ac430c3889a1"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="d3e263c1-121b-4d76-95bb-e08fbae46809"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="2b86036e-858f-4145-a123-7db5317318ea"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="ced3cacf-20c3-46f2-a9cf-dc01149d6d3a"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="10604c28-85b2-49db-ae5c-b8f34f191901"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="970c83ea-744b-4aab-b8a5-e077db293ca9"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="33551876-b24b-4c9d-9699-ef80e6b906a1"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7a457265-0465-448d-98b5-f5133a387437" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - No Auth Header" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="51e27e3a-2a84-4936-9565-04e0c8c5c1e4"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="a9d883a8-05b6-4e33-9b9c-9c1d9b18b363"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="79a125c6-6cf3-49d3-9bcc-a6ab4d6fb972"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="466be7a9-efb5-4115-b0b9-dc3bd5e1322b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="f705121e-1e87-4fa5-b0ae-238f74f0e84c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="c1c4bc72-6f5b-47ef-8a2e-e1d88ffaae2a"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="2509527d-5459-485a-a937-e7b7b9a2785b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="5fff4a92-6af3-41cc-bdf4-383a83875972"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="986d63e2-04d6-4e2d-99eb-ba0a04b8547b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="00ad70d0-68ff-46b7-b54d-d07c7fb4423c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="ee0555c0-a9c1-4b90-84b9-aca10734120b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="168d6f8a-ee5c-4eda-91a2-96306470d48b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="43b70e0b-6a3a-43bc-b52d-d683a343e113"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="cc5c39be-f5aa-4992-9a45-5e0fdbd7e599"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="0e5ac670-70df-49ea-93ea-afa2f8085bf0"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="fcbde23f-b0cf-4f12-bcc2-b3c0a2a4ac07"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="398010fa-42ef-4fa5-a727-648adf7a29b6"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="f9547385-d3f1-42c8-aeb6-7fb3fa1b0b42"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService - No Auth Header'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")</script></con:config></con:testStep><con:testStep type="httprequest" name="z" id="b87e6a58-ea1d-4578-8ab1-41f8777ba0a8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="z" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://wp1wmwb01t4.wdprocessing.pvt/emea/middleware_security/blackLists</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1834b23b-2f60-42c1-a4cb-d85ed228d359" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Empty Auth Header" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="9d0a70a9-a2ba-40eb-9a7f-ff1ac9ffc3b8"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="a6323007-4c22-40b3-bd21-75c6564ebdcb"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="b79063aa-768f-4900-84fc-55a5c0441ab3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="60695faf-4641-4f40-8d82-74aeceb83ddc"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="9a9676a9-34c8-4674-9118-b03ff8f21ce2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="b7d2db9f-9f77-40ab-9859-d5c294258ee3"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="8d75749a-2d90-46a3-8b3a-068b7200fa98"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="4386b7b9-837a-46d2-bb93-266c9903a627"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="b7112a22-fecc-43e9-8405-c66778409a7a"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="db1aa58f-f8c7-45a0-9aca-0bc2925799a8"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="a9d7865c-79ac-4bd2-af21-6e9840e75bc3"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="1477e990-8920-4c35-b72b-a5e7cb19063a"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="cce5c033-afb7-4b82-ad8a-5bf2dfee4879"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="497e8d27-e65c-432b-b502-d19c3d9048cb"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="3a8afd1c-d081-475a-b282-a5bc8ecf3165"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="06640689-25c4-40d9-800e-7a7da25220d9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="ab073e89-1aaf-4825-8e38-5053cafd6761"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="b5bf2cc3-cedb-4f81-ad2f-038d2acc314c"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService - Empty Auth Header'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="382da24a-5bb5-4042-ae60-661c0d1dbc0b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Bearer Auth Header" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="6c836aae-6cdf-47be-ada1-0ab477531e3d"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="5a512aeb-2d51-424c-af79-970cdd6b8060"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="749eb21c-5ddc-4525-8c6b-4215f19530c6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="368cef73-5eff-4913-8da0-d7d8523718fd"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="23d92d93-20d3-4720-acaf-97ea0d146540"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="fb1ee03e-a809-430e-b6b4-db3e06938b23"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="c9f5f6ae-e210-43d0-8e5d-34774ca3affe"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="e1fced48-56cc-4fd9-a198-1e3ca343897f"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="43cbbfb7-c223-4782-a4fe-a7a0748ff688"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="c55e79a2-290f-4f9d-b5a1-db871d835337"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="fe8f56a9-8763-482a-ac25-843850d52edc"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="c6f3a165-5e13-4660-8810-fd4d2007b742"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="413fa596-8f44-4fef-8c57-dc1d72922be7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="0540121a-1084-45f8-9170-40e9a6d64c5c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="788d0400-581c-4741-9dac-c1ad6472b0f1"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="b4480c2b-a6a1-47ff-a410-eee962a0c53c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="84038d71-4d60-4beb-bb5a-3ff74dee1c62"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="e217bbff-4420-451b-ae20-a11da10a5225"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService - Bearer Auth Header'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="df979db1-d696-422b-bdb5-51a41ce4b84a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Expired JWT" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="53c7e552-1459-4412-9f5b-13e5f32974b0"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="821bfefd-0c3f-4ba8-ae36-ab4805e7e020"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="8e4447a7-bff0-4364-9b06-802e3613e2f5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="5b362bf9-192b-4663-9562-c3e750f29324"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="ec3d698b-50f9-479d-9bd9-4ffb8de86a99"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="192c64e9-5e4f-4f86-9dd9-b2805b46d677"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="8471d967-9d0a-474f-9d7b-94f04ba13cab"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="8d236d29-8730-43d8-9511-607d06c247e9"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="fc2b39db-2346-49e7-961a-17d3c314dde5"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="fab94464-7ec5-40cb-a8ad-4dfb31f19537"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="9e445760-7694-4d2e-9a41-acf74b17c6db"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="995c2941-a0d3-4c11-8a52-a4fe5a07f15a"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="745a1704-c8f1-4eee-99cc-515283130410"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="3e116ad4-f2f2-4c6c-95a8-bc36fadc7889"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="7696bcab-9e2f-4075-b6ef-6ec5080ce8fa"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="07cce945-e93c-4f54-a496-625dc0007ba9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="f248341c-9e4d-47f7-81b4-51dada7c9b44"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="c4f9016e-9380-4210-b092-b3100323a02a"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Expired Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Expired Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Expired Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Expired Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Expired Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Expired Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f952863a-3684-4a60-a874-ea1a7bbe1706" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Junk JWT" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="ee7a5484-eef9-4bce-9e76-880030efa328"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="54905f48-e551-4687-bfdb-b340809a8dbf"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="d822d35e-c1ff-4fa2-a53e-f547e1895f60"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="e94823b0-fe70-4650-a462-97cf10bcd982"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="08c592b7-474e-447e-ab46-acc79bf45110"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="59ae408d-e4a1-4db7-8a03-f8afc67024ce"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="39c5a176-c7bd-444a-a556-c3803582eef9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="a6b93939-bc82-48ca-a061-6041ae3d603a"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="1a1378c1-eb2e-4471-a298-7eb66800cec2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="8c9d3f92-e4a8-4404-af30-33bda2091cfe"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="9e71ce2e-176e-4aed-b692-cda5bcba7ef7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="bdefb15d-d5d3-413f-9925-0280e528965c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="f67eed03-4fda-4d38-adf8-213c85dbb17c"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="c6680afc-04af-4934-9afb-2966ec1e913e"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="ede61e46-82b7-4dca-9497-f87b5585e255"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="c5bcd07d-5d9f-41df-8173-8920e8386da7"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="13c48e84-24f8-4af1-9a9e-5728a852be16"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="9637aca7-4f6c-4ef8-a46e-a31062e3c8b4"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService - Junk JWT'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d498383c-b1d4-4e8d-93e3-fc03ca18f06c" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Exceed Usage - Global" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="45e1dcb4-8793-4e85-85db-88e0457f0d4f"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="80712ace-6aae-4a04-84ae-57cbc6d6e8be"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="ed9620d5-8b98-4561-a2eb-81afdfc34552"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="645fdf28-1f70-4d45-a0ca-701168fd08a4"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="108c54bd-fe0e-48f9-b354-3e5e5db38b99"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="ef064320-e144-4d86-9094-23cbfdaf12fd"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="863d8a41-d5d8-49fe-b027-98a88a2bf13d"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="8fc2a0d8-be0a-4752-9dd4-ee2a363dae30"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="ac4afa4a-f228-4f72-8a20-fcabecf4ca0f"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="919affdd-82d6-4e80-a729-14a101e04f44"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="f14dd3cd-8d58-476b-867d-5711238d6b5e"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="9406befd-c9c2-4e01-a37f-a9861108035b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="8ba032ed-d651-454f-a259-cbd133ba0cd0"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="369b202d-ae38-4041-9119-09c8a8f07f83"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="86fc8970-738b-4392-8c7e-2adfd1e12d98"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="15b02604-671d-48a6-b0ed-dce2852264bf"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="bcbfbba9-a597-4901-b1fc-ecb473f17d20"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="44e0e367-f329-4dcf-8098-430648f481be"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}


testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Demographic Updates - Update Profile"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Password"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Security Updates - Change Security Answers"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Secured Demographic Updates - Update Phone"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="dc0a4efc-9a1f-4cfa-b3d9-ef837ab3b12f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Usage Exceed (Scope)" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="e97cbf1d-2072-4edb-ac1c-d1bd76b55bbb"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="e9d80cad-8a22-4223-ae32-d2de3c1ee666"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="ab9b671b-7a5e-4359-a093-65c0e03e85c6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="dc6130d6-570b-4103-b657-49688ea701fe"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="1d785e73-b5fb-4437-b342-1a852159aa48" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="02c11e50-e633-4ebb-937d-a48b47f3db4f" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="36a3ca3e-e3d5-4e04-b65f-f5703b86b341" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="6253d12b-0a53-440d-9e33-0efb41f5f7f0" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="fd459a89-4f03-4c05-9bbf-2bfafa2efb36" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="a4a648c2-ff5f-40cc-aca1-f870f036fd70" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="50a7ec18-ae4b-4517-accf-4db5849c0022" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="7cfe4648-39f6-4355-ba49-cb2d8139fa94" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="acc4df63-b19c-468f-a896-cfcbe08c9aa6" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="4a7da809-8157-408f-9497-28ec5632f1ea" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="68158f7f-ce88-4b5b-99fd-3a46b500a5fe" disabled="true"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="60f0eb71-fa95-46b0-9589-16a208902a19" disabled="true"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="2e72f9ec-b6c8-4cc8-b100-f974ab92e3b4" disabled="true"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="1ad7491e-a460-4240-a4f0-a05761026d66"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e966e3d3-cdad-41c8-a04f-9b18d88858dd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Validation - Negative - Refresh Usage" searchProperties="true"><con:settings/><con:testStep type="calltestcase" name="Run Init Data" id="7adb8877-5a5a-46ed-a9e1-31ee3fd285af"><con:settings/><con:config xsi:type="con:RunTestCaseStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:targetTestCase>967f8ba9-2256-4778-aa23-801fa6dd19f7</con:targetTestCase><con:properties/><con:returnProperties/><con:runMode>PARALLELL</con:runMode></con:config></con:testStep><con:testStep type="groovy" name="Log" id="c98e60b8-0c2d-4cdb-8d31-784cb7ef54ee"><con:settings/><con:config><script>log.info(testRunner.testCase.getName())</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous - Anonymous Services" id="0de9f026-9713-48fb-b6e3-ce41229a0f1b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous - Anonymous Services" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "${=testRunner.testCase.testSuite.project.getPropertyValue("fiid")}",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="272c6e04-8481-4754-ac27-124954c20606"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Anonymous - Anonymous Services",l_slurped_json[0].token)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Read - Main Screen - Any LMN" id="d39931b8-26da-4ccc-a103-efa740a3e374"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Read - Main Screen - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Anonymous - Anonymous Services")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="daea3d98-5d73-4828-a616-7091b8b03fa6"><con:settings/><con:config><script>import groovy.json.JsonSlurper
def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)

if (l_slurped_json[0].authorization_name=="Refresh") {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[0].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[1].token)
} else {
  testRunner.testCase.testSuite.project.setPropertyValue("refresh_token",l_slurped_json[1].token)
  testRunner.testCase.testSuite.project.setPropertyValue("Read - Main Screen",l_slurped_json[0].token)
}
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Demographic Updates - Update Profile - Any LMN" id="b0ca4742-365f-44b6-b20b-1ff526a3ca28"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Demographic Updates - Update Profile - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Demographic Updates",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Profile"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Update Profile Response" id="f4a35cb3-1a75-4f61-9bd7-c76b54dd3c13"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Demographic Updates - Update Profile",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Password - Any LMN" id="3eb17116-f1c0-4a4a-88d9-a27c615971c1"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Password - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Security Updates - Change Password Response" id="de895c87-f026-4047-92f1-c5c2785b79e5"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Password",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates - Change Security Answers - Any LMN" id="3966f921-ea76-41a4-87a2-53a264f5c7eb"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Security Updates - Change Security Answers - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}"
          },
          "private_data": {
            "DOB": "${=testRunner.testCase.testSuite.project.getPropertyValue("DOB")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Security Answers"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Demographic Updates - Change Security Answers Response" id="fd384fb4-3288-46b0-9996-b280b3df9f73"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Security Updates - Change Security Answers",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="3ab9476d-6c66-4215-beb4-b23e60128714"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;Anonymous - Anonymous Services&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="583150c8-970b-4ce8-8405-7a6c1c0d619a"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
if (l_content==null) l_content="{}"
def l_slurped_json = new JsonSlurper().parseText(l_content)

testRunner.testCase.testSuite.project.setPropertyValue("otp_id",l_slurped_json?.SendOTPSMSResponse?.SendOTPSMSResult?.OTPUniqueId)
//assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="4b021d20-54c6-4989-9bc0-4832b44b077c"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
def l_otp=alert.prompt("Enter OTP","Enter OTP")
testRunner.testCase.testSuite.project.setPropertyValue("otp", l_otp)</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Update Phone - Any LMN" id="167490c3-7814-4933-b729-bc3f442cfe61"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Secured Demographic Updates - Update Phone - Any LMN" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("granting_url")}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=testRunner.testCase.testSuite.project.getPropertyValue("username")}"
          },
          "private_data": {
            "password": "${=testRunner.testCase.testSuite.project.getPropertyValue("password")}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=testRunner.testCase.testSuite.project.getPropertyValue("proxy_number")}",
            "otp_id": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp_id")}",
            "phone_number": "+971559307088"
          },
          "private_data": {
            "otp": "${=testRunner.testCase.testSuite.project.getPropertyValue("otp")}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
       "token": "${=testRunner.testCase.testSuite.project.getPropertyValue("Read - Main Screen")}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Update Phone Response" id="0f685006-b0a1-4237-a289-b5e748c47587"><con:settings/><con:config><script>import groovy.json.JsonSlurper

class GlobalContext {
   def static global_context = [:]
}


def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
Object.mixin GlobalContext
testRunner.testCase.testSuite.project.setPropertyValue("Secured Demographic Updates - Update Phone",l_slurped_json[0].token)
testRunner.testCase.testSuite.project.setPropertyValue("proxy_number",l_slurped_json[0].scope.data_scope.proxy_number)
testRunner.testCase.testSuite.project.setPropertyValue("product_id",l_slurped_json[0].scope.data_scope.product_id)
testRunner.testCase.testSuite.project.setPropertyValue("accessor_id",l_slurped_json[0].scope.data_scope.accessor_id)
assert l_slurped_json[0].token !="" &amp;&amp; l_slurped_json[0].token != null</script></con:config></con:testStep><con:testStep type="groovy" name="Run All Services" id="fde98bd1-96b1-4c84-a88f-62bc80c279e0"><con:settings/><con:config><script>import groovy.json.JsonSlurper



void run_service(String i_service_name, String i_method, String i_params) {
def project = testRunner.testCase.testSuite.project
def l_content
def l_slurped_json
testRunner.testCase.testSuite.project.setPropertyValue("current_service", i_service_name)
testRunner.testCase.testSuite.project.setPropertyValue("params", i_params)
testRunner.runTestStep( project.testSuites['Services - Generic'].testCases['GenericService'].testSteps[i_method] )
l_content = context.httpResponse.responseContent
//l_slurped_json = new JsonSlurper().parseText(l_content)
log.info(testRunner.testCase.testSuite.project.getPropertyValue("current_service").padRight(100) + " : " + context.httpResponse.getStatusCode().toString())
}

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Anonymous - Anonymous Services")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SendOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")
run_service("ValidateOTPSMS", "POST", ", \"PhoneNumber\": \"+971559307088\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Read - Main Screen")
run_service("GetCardDetailEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetCVC", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardActivationSS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("CardActivationValidationParameterSSEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardSearchEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UserRegistration", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("UserRegistrationValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("ForgotPassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPasswordValidationParameterEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("W2WTransferInitiateEnhanced", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("GetTransactionHistory", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("CardLockUnlockRequest", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("FXRateSearch", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")
run_service("GetSecretKey", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GetTransactionDetail", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SetStatementDate", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("SearchWalletAccount", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementInformationMultiCurrency", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("StatementsInformation", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("UpdateWalletPriority", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardCreate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("VirtualCardUpdate", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("W2WTransferConfirm", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPIN", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotPINValidationParameters", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("GenerateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("SendOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTP", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ValidateOTPSMS", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserId", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")
run_service("ForgotUserIdValidationParametersEnhanced", "GET", "?ProxyNumber=" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "")
run_service("Document", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("Document_metadata", "GET", "/${testRunner.testCase.testSuite.project.getPropertyValue("accessor_id")}/ENG/1.x.x")
run_service("GetProductParametersEnhanced", "GET", "?ProductID=" + testRunner.testCase.testSuite.project.getPropertyValue("product_id") + "")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Demographic Updates - Update Profile")
run_service("UpdateProfileWithoutPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Password")
run_service("ChangePassword", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Security Updates - Change Security Answers")
run_service("UpdateSecurityQuestionAnswer", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\"")

testRunner.testCase.testSuite.project.setPropertyValue("current_token",testRunner.testCase.testSuite.project.getPropertyValue("refresh_token"))
log.info(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>Secured Demographic Updates - Update Phone")
run_service("UpdateProfileWithPhone", "POST", ", \"ProxyNumber\": \"" + testRunner.testCase.testSuite.project.getPropertyValue("proxy_number") + "\", \"PhoneNumber\": \"+971559307088\"")</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="1e11a76b-0ffb-4a86-8d0c-0f8086ea8275" name="Services - Generic"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="5c6b11c7-71f8-4f9e-a8aa-88f6a2b4d8c9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="491c462f-ba07-4283-b144-b4cee16cec21"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="75da7149-e115-4e62-8e01-9a7dd65b1b3e"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer ${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7d1b38a1-4da4-482d-988d-3efb7d0499c8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService - No JWT" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="c4473601-465d-4356-941f-ad36cea5e6ab"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="c0f0aa74-832e-415c-8657-84c9161a32fd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b659afa3-26dc-4c08-b2f9-c876192bcc14" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService - No Auth Header" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="71772226-05df-4240-b477-1bc27dd054ae"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="d2352dd8-7748-48bb-8317-b6a224658ef9"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="20aa4bbc-84f6-43de-99a7-cc44b4b3593d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService - Empty Auth Header" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="2963a01b-0334-40b8-aea2-786df7f8b787"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="5397d85c-fac9-4295-9d3b-5fc70ad79398"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="b791a76a-0694-4de6-a451-9cb68564059b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService - Bearer Auth Header" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="8f418174-2196-4f7e-b35a-e22209e13a45"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="0266c1c0-0073-481a-8920-34ae326858df"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="06a43434-5df7-42e2-a602-b85d333259df" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GenericService - Junk JWT" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="POST" id="a61ed067-c2b0-44be-92dd-e90b3dbe9c4b"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="POST" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer 1${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}</con:endpoint><con:request>{"${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0
  ${=testRunner.testCase.testSuite.project.getPropertyValue("params")}
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="httprequest" name="GET" id="9d5ff27c-fa3e-4724-983a-8e7ba1a8bcdd"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="GET" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="Bearer 1${=testRunner.testCase.testSuite.project.getPropertyValue(&amp;quot;current_token&amp;quot;)}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${=testRunner.testCase.testSuite.project.getPropertyValue("resource_url")}/${=testRunner.testCase.testSuite.project.getPropertyValue("current_service")}${=testRunner.testCase.testSuite.project.getPropertyValue("params")}</con:endpoint><con:request>{"${=testRunner.testCase.getName()}": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yymmddHHmmssSSS")}",
  "UniqueIDFlag": 0,
  "ProxyNumber": "123456"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>InfiniteAuthURL</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property><con:property><con:name>ResourceURL</con:name><con:value>https://wp1.wirecard.com/emea/middleware_validation</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI</con:name><con:value>https://10.10.99.190:8443/middleware_security</con:value></con:property><con:property><con:name>InfiniteAuthURL_orig</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI2</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI_EMEA</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property><con:property><con:name>fiid</con:name><con:value>1340</con:value></con:property><con:property><con:name>granting_url</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>resource_url</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>expired_token</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlZXVS9iUUJEK0s5WSt0U3BFUGppQzN5d3VSVzFJd0xRdkZiSVdleEsyMkx2dUhpRXU0cjkzTm5aTTRsb3F0QkJGeXU0YzM4ek9UT1o3Sk5Ub095SFpMNnFaNEFtbkJaQ1FSRnp3cWhCR2taMk9BY3RJNkEzZHdIZTlJRGowQTgvemR3akxnR3VtS3hJK3R1YzExT1NCZzNURXpJblNGSlFTMGptaG1qYTQxalJkQVNzU2ZuL3N5TnBzR3M4azYvT3NwUmk1TkxjNVM5c3JYWHMxS0YvR0Y4N1k1Sm81eDBaSzRHbmxYQ0RBQWo1Y1JoOHRhc21TZ3Y1QWh3VkloY0RvNHcrV2d5WHFWQWtwbTIyQWo4YW5JOVFmSGJuNEdSNzRlNGZlY0g4UExRdkt6WXltMmtpUU52V3l6TUdLUlFhNXZYdjd3d1B5WktPVkczSGNnWWRmdE1zcG54czZ0L2tDbjZPZ3pLbWVDVm1nZ0UxaUZKeU5SaWQ0OFlJOTErS1VraTJvaGlZeGJ2SWNoVXBUamIwTFNXeFdSWmlabkR6ZFdFVXFTckQ1cnc1L2ROdUpRUzRZZXRnbjE4ZWtjY0htRklDRGdPMG41NmZYR3dZTnlEbm9HRklKK2pOVXFEWFNWbFBkb3dadk5ydGtlNUR1b2JJWlhrVDRpcjlobndrNUYvb3JTa2ZaTjVxemJBVXhwUkxWR290NHl1OG9UeUY3bjdoVHF0U0RrSDJSM3lEd2RCTDNSSTZCWjVQcmFUeU9Yd0g5Z2hmWkdsN0JuQ2t0VjY3dlZNMytSeDFUbVVXcHRnT0x2dkZybnZheUFKdHo4dGF6MEZRSy9yTXIvWWwzMi9KT2xWbFA4bHZYWnJ1eFBUTVZ4Lzg0VkRlTlFidTQycTF1aWFoaGh0Q0plT1dzTlgxYmRNTnJPNWJGMkx6WFVFZ1ZIU2NwakdZSUZaS3IrbFFiUnRQbzJMbU1XbTdyZURWWms5aitQa00vNFNiT1ROM3BSRUVxZUtaV3JPcmFmUTRTZmhxbUdDNzFUcXAydSs4UTNMRXQ3MWx3Wk9MaHJodnMrdTYxZXhRR2g2RWZERHd2K0dTWkNmT0JaY2xrMVdQc3VhSGJOZDd1ZzY3S1ovcTFqVk5ZMHlSbkJkUHJaR2FHcDlhVzVpMDFkZ2lxajR1UUQ3T0hQQUVwTFQyYjR0WnlaUTI0b2RDd2JPTm9jUTk4OVdmNkRTWWhseU95Q0FBQSJ9.qWQARZyVgO-UJhLOgvxciSc2C3Dk7-rVIQd-OU-v9UBWVdrnA887LROzVFAbunsGn58NBSabiS4nEpTdn_9xcQ</con:value></con:property><con:property><con:name>revoked_token</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlYyMDdiUUJEOUZXdWZXaFVpSnpFUS9HWnhVOVNHQkV6N1VpRnJzU2RoaTczcjdpWEVJUDY5czdGakhOZFNvU0pScE96TzVjenN6R1RPTTZGRzN3dkpucWhtZ2tlY1prQjhFbkRCaTB3WVJmWmFCaXdoZm4va0RnZHVmemc4OHJ5RHdXaVBzQVM0WnJvZy9uTjkza0JOSHpsSVI4eWRJSTVCS1NHZFU2cHBoV3RONHpXd0l2N1A1NWFzenFieWpKSXV6MUtLa1hOemw3SzR2dEtOVjRYeWJYTHBURXlxbVhOaXBBUWVGODRsQWl6aDAxWHcyYUxtTE1yb0wzUllnbFFJakQ2RDNxcTNRcDNLSVdiekJ2aDRjalpHL2ZHeGk1L1I0Y0E3Nm84T1BMVE1LRGR6R21zalFkclU4endGS3hZSnBQYmVQeGdka2hjYkxXL0VjWHQ5L0tKZFN2bkMwSVhORi9nQ0JYbEs5VnpJREFWc0dxTGdmRHcreFV0LzZMa1dKNWRzU1RWVWlYR1RwaWhVbW1yc25VOUNzeTdDM0tUazVkWXFZcEdEelg5OStLdmJUZ2h5eWRERFByazhScFVMTmljREhBUnNQN2s0dTJrWVZDQVhvRU9JSmVpdlVLRFdTRnROOVlBYXZObnNvdTFCZW9EQ1puZ1o0Q3YraFgwdTVFTG83eWdkSno5b3lwSTF4SXhLVkdzczRobS9wenlHWkRkeFoxU3BSeUc3SW45QTROazA3SWdjQWsrbU43TndFcjREK2kzQUoxUW1RYXp0MEtCbitCNzRONVhNTnVrYUZreHB1WGJlVWJ1Nkg5ZWNrNDkrV1BVUTJFbFgybFhiVVdVMmsvelJ0ZGtlcW82V2grRi85dnkyTXFnWFY3M1ZMUkZWek9BN0FTK2NqYVpyaXphOHRtTlpqT2E5aEVLcWFEbEpZVFJES0o5Y2w2ZlNNSmdGSjg1VlVITmJ5NnZLbW9UMjl4WDZCVGR4WXNwT1J3cGl3Uk8xWmxYWDduT1E4TnN3eFhDcHQxSzEyMzJQNEk2dGVjK0NJeE9QOXQzaC9zQzljWS85NFpIdmVUMWs1UytXbVRBZldPVk1GaDNHZmRkMzI4YmJmZEJGL2txL3RuRUtheHFsTEdONms4emM4TmphMHJTbXhoWkJkWEVSOG1IeW1FWWdwYVZuazkxWnJpd0JHd29OcXpxT0ZnL0ExMyttUC83N0dRMnlDQUFBIn0.KK5UUNMQ-6B0a_EC-LClfeuLfe2lSy01RKKtMOim92Vg1lpfrmiv9Nq2EWJ1CWVTNlHk4-LBlmOADdMIJ_ynpw</con:value></con:property><con:property><con:name>username</con:name><con:value>daniyalmobile@wirecard.com</con:value></con:property><con:property><con:name>password</con:name><con:value>Wdp@01234</con:value></con:property><con:property><con:name>DOB</con:name><con:value>1991-01-01T00:00:00</con:value></con:property><con:property><con:name>current_token</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFLVlliWk9qT0pMK0t4MzE4WFoyZ2hkVFUvU25LMnhlakkxY0NMMkFOalk2QURIR0lEQnRZeHN6TWY5OTAxM2R2VE96czNleGR4VlJFWmFRVXFuTUp6TWY1UzlQK1dXc2o2ZkRuSStIWS8rcHo3dnE2ZU5UVXBXWFV5VS9yS3J1dUQvbFEzMG9QOUJCNW1OMWZ2cmhEMXNPOHVtai9xSXRORnUzRnJabDZTL21EMDhIV2ZYallidy9mZnpsKys5dnduZTN2anA5T1A3OFlVZmVQcXp5TWYrUTkvSURQY1BrWS9UMWdNZWU4c3NKNTZlUGYvdmxEM1BmWlpHM1QvTFBOcjNQd3VuRHBWQ0g4cC9EMDNFQ1RTNWRVWjFndi83VGkvMnNXZHJDTk0yZlFNaFFIL3ZxbjUvL1l2K2tXNVp0YWo5cEx5L3crVGdPWCs3NzlQUXJyRDBkcm1DUnI2TDdpMUl3ZVI3ejhYSittUEJTbHRYNS9QTkZ3ZHAvcC83ajB2K1ovaGZZOFhXenpQdkRQVmZkc1RpbzZyOXZoMU5WNWlmNVkzbnMvalB0L3Y3NFVCNkg2aUgveTQvdjZuMXgrWWUzaDFGQVF6ajZlaWlyVDE4WGcxTzZDcER3c01mYkxpRy9XZkc3L1crbjQ4K2dJVCtNOVRkSmw5UGhVNWVmMjRjbGYzaDZxUGpwOTZCcXEvdER6Yjh0NFVib2l6ZCsrUEQyY04zM3dVUFMrK0R2SUtMTHAwL2w4ZEtQNzFmOTRRbFEyNCtmeGp0YzV1RXc4OWUvZnozbiswMVAxZmw0T1lHeVZTK0g0d0ZXZjlVNmZuMTRvL3dpN2pkSTBUUlQrODJmOVpQNXZnek1lRHk5bytMMXkrampoOWYrL3VIYmw4ZHRIMTcrMzUzMjhObFJYc3J4WGRnRG11OXovdy9BWG5OMWtPOG0vWDdOL2VsNEdiN3A4K04vUFgwMTFxSGYvNHNwUEdKQURyaFc2amgwZ00yblh3RXE4bko2RjNpdXltTXZ3VTJtOWxDek9sV2ZMNGZ6QVREM08xOCtiUDFuU2ViZFQvK2FTOTduLzVsQTNzZGYzZlkrK0ZjVjN1Zi9KeVhlVjVTbjZudDRmUmRYVGNQaGRQL2QxTy9WZXNEbzI1ZkxPZDlYbjlTaE8zekgycytYdm55c3k5VnZvdTAzd1lhcTJ3T2k4cVkrVmFjVGdPV2J1OTdYL2ViRFdFM2ZwWTdIdGdLOW42cDdXQmQrZWRnZHdqV2Q2UlFkUXZ0SG1OUUtZMVRGWWYyOGJ2ZGFxU2tucHQ2M2Y4VFVrRWFhL1psbzRXR2pqVmJoMWMrWmlXY1pPSXI0Vm9JTUsyZCtkTWNObXpHMXNUREdBemE4a2J2aFVMcVlaZFFib3dEUHFOVnZXMzEveDZRME11WmR5UHc2Rlp6cWlXS0h2SHN4Y3VOb2lJQnE2UEJpMFVCTjJKM1F6dmNNYVNwTHVzTVpkVXBGZm13Vk5KNWlnMXE3MWZwYVVLVWxzL1NUVloxc1RMU2h0STZwdHI5bXRCYTQyZXRJWXpYdW5ZQ3JiRUozT3lLcitMcnpISDBYN08rSkVjMDBRS2NkdHlhaXJhKzRXMThqTDU0bENRK0VpbU8wRXB2b1Bpcko2a1BVeWJnaVNtTXF1aElQVFRtMWVkSElRWHBpa05xNExnekUrUXI1R2NPeG5KMnBhTUtVdDZPZUVLZmJtdWhhQmpJUTNWbmJhS0ZmS0tSWEI5dklPaEVYNWpCc1RhZG1tcWdKUjNXaVFsV3cycWRjc0hJV3N6QnNqd2YxeExTenRabmJhOVlwZ3YzMXJRQmRwWGxjMEZYdHlidE55cnM5SjNSc29oWERlTVVzN3VPRTBxRXBWSDFCdlhOTTNPbVk2Y002NG5qSEdtWVdiVmlYSFk0cmFzMDdxbnl1b2xuMGtaNjBReE81MDQ2U3lDTHR1SklydGkzbk9zM1o4WVJadlNPNk01WitIWldyK3A0UWtVYzB1bkp2ZjZ2WVFCR3JPMkxjcm5ramM5NkdQR1AxdUZ1OXprVWdMcUxITjhuUW91d0dvK1MySVhyeGpFeTVaZ0c2VkJ5ZnN3NVRvZTF2ekJnYjB0Vlo1WmFudU1jalQ5VkNlbkNmTkJ3UkNadHNaZ2UwSE4yeUQzdlJ1bWJWNFRGTDdENXVyYlZnNG9MUzBJMzRkTUd0clZjdDdtSnQ2RGZnOThqVnovRXNKc3kxRStneGI0M3hFcytSQWQ1dXFQZDYzYzVTazZ2b3VpTnNDVGlLU0pycDBqOWVxMVdkSjZ0TUV6eTZVdVVha3RvbnZOcWZrbFhva2E2ZHBCL3FxSEdTakd1THdoQU8xbXJLL0xWWk5EVXYzUE1kY0RtU1BqNVZYaTJJWVorVGxkQmp5cHFkRHpibkU5cHE4U0xob3N2NlFTQmZMSklWWXBYQ05PSzZTbHhYcTl6enhOdFNxOUl3emxoNForejFGbmVaSG5VNGs3cm5GMTE4WmUwZ2hKRk4wcE5lMWpnWHB0aVordU95Q2txTGU3VXBHaFl6Zitpamd6MEpkMXBudXZkY2dSMDJ4cGhXUVF0NHJvODBjTjR3YzhDWE5TRk5QU0dsYm9LaFM1SzhhSXk4VGpHM0RwUTU1a2F6YnNpVDY2d1IwODVWdStnd212bU1ybm02dnlaTkdNc09temtmbmhIYjY4SVkzSzAyblNFVzNwQS9XWG1ydDdJVnJaaWxnd012WUVTMVJUZHNPTWpPZWhYemJ0RHl1UTQyV256SGZXYmtyS2EwZHpvNU02ZWs2aGtSSlNLMTF3bHZIMzdSY2xLSEpkeFY5UFVtOGFtVk45VEVuZERGQ25kSnFnSzY4aXdXU0JPNTNpSHBQU0pYaXVkOHY4Q2VYSXE1UFFud2M5bTRXdDZvTS9mRkJxL3dNd1kvbGZURktqdDFJSzQ2MGw0WmVTQUlYcWxNZWs1UEc0aFZoczE0WnVNdVpRUnhlYys2czBuTlVKZTlJR0MzT0ZIbEthT1RTKzkyZ3VpVXhjUlppQTR0S0E5SDRxSkR5WkJDYmd4MmdyelhUbkhrVVQwenpxQTdPNG1lTFZqZ2dPK2lCVXBabENubkxXbXdKYnZZZ05Od0NibFlHcTVPdkdoUkJxNFZONkdLVnRRcVRHOFF5cnVMVkgyT0dxR1MyWHRqaEUxYjAyc0ZIVFBlU0lNdDdZVXc5QlB2cGtYY2dvNjkzTkwyWmFKcGJETERXbTlNa2V4U3hFcUtENFhmWG5kOGJFWHFlVlVRbjZLbXZqT2ZaV2lPYmhzampMRTMrTm5zM1hKZE5NallQM1FlQytLazJkMFd6TU4xMFdXM0hQekNVNmZQOUxCSkRQc2FhMU1Fdmd4a0x4bGJDWXY2NFhQUzJzMVdGNEo3YTEwRVRzYjB3ZHdGUjVPcHVnYTd1OUg5Yk1vQXE2MGhNRzdqU2RMaGd1WTY1NzQ2SVlQTlJhdTdlZVBoM0plaFVHSmsrdXVWQkk0ZStXZ2grdldjdVBhOE1WMHowK3hsSHNoRHJMeWs4c0JYalhTNWh6bDhoMWl4MTB5djgxMktsNUhKb3ExaGlUTDEzcklHdDRYbkNaS2lEV1NEbzBoYkkvSlFrTGMyUkNsZ25ySTdVdlZTcFBnTlEyeFZ3ZDZLU04xQURic203ZjRrUFk5dnRYcXpXemxORlJ3WG1DTkNEL2FZR2ZKekh0VExxUEhZamxwdGFRZ05xVmN6VXdQbHdmR1dLMGRrU280N2YxZ3lGNURUZVZIaDY0eTI3VFZxMUxad1J4ZHFWc09iVndzMTVXM0hYY0E0MXBreG9GeDdNVE0rcWd6eUdmS1luM3RyRS9tV1Y3RzZwY3V6bnJIaGMrSlBlaExRRytuUmxyWDFpWnFEbFhScWlIczZrMTR0OCtWWnd5dzhKbXJncFNaWUZJZ2J4RzBkYXg2T2VuVERxL1VDYTNaTnRQRXphVEhPOVJEQlhYUFFOOGUwdk9XR3ZTdmFTZVJ0Q2JXOVBhRWUrNUJiT3Fodm9pRGhpYnJJd1A2MEpUNCt4NTNOZHI1MUxuZ0pkYUUyRTg3V0hQQVl0L2FGTUpZVWJhM3ZxSzVCeGp2UlZnTE9JZFpuaVhqcmZjNWRmVVhvMm1CbWVKWTY1QWtkT01QS002a0xPQ01obCtuYXdsM1lGNm16emRYNlJybE9Nb2pYS0JqNDFvenZXWXF1Q1hQdmVhbzhxaW5LVmpWSmxEamlOcHVwN3JUVWhKemRlenp1VkpiTWRjMEpYdUFVclluT3BraTFrTnM5am5tOWlQa2pya0tJcFlrV3JOUTJwbmNzWmdGWGlSNCsxNlBlZWFNK3VoUXpUbVUzdUJWSGZjSjFUZERoVUFaMXpMZ0NYYkgveU9PU0RXZkM1UlMxcW9mOElCSmpiNVF3aDEzOW1oSFp5bFJzd2RkNWJ1eFBhSVZQbTdtMk1nTHhDUFdRR0xpV3JneXJIcjFCYkMveldhMnExanJuRktuY1YwblVUa3ZnQmNBdmdOc1NaUEtXbm1MVCs1eTFJa2pTT294VGRjc2ExK1FFaFlXckxmSWc5SEtsZGhzRG1Uc1dXbEViSmxLRnR5eDlYVVNwOERoZ011cHJMMkdLUWsyTGtLN1N5QTBwYWJ6UDI5a1JVZVAwY1lvSDFqc1JicU5GeGhWTFVxcm5CdURTcU91S1RrZmVvS2dJbklpNlp5c3gxRVo2cjR2TmpOMEN1QkFtNHBpbHc0Uk51V05kU0FwdFN2SVpjaHhUVzZGQjdkSHFXMExRTmlITTRVMXNsR3AvU3p4OGoxeEpJRVozZVV0djFRcUF5ZERBL0xDTzd2YkVnWjlLbDdXeGdkcE1lYnNxY0c5eGc5S2tEOThrMVBBOEhSaDMwVnBTSkNJdDlJcHVqTEFScmpqa0s4Z1pPbTB3aGxvaU9BbDlhYURQc1ZJT1hUblhwTlAweW85TjdMYUxIYmd0NzhPTWRLR2JNeTh0NllTaGRwNkE0MWxRTC9xWVk1cTFyT0hBTVF2RDgvTzBIdU4yRExJbU5KazI5dEt0dDFWM093RTNhNGt1NXRKakRmYUFOK3Z5akZ3MkFiOWV5alEwODhBN29wVzhGNXFyUVUzQk9iMlpuTUYxZVgwa1BydEJuVldDM2pSTTJvZWRvRzdGZDlxRjY3aHhRdVNQQVlWWWk3bDNvTE82YzZocGtEK1NTUGNTMlBzR2VSRnlxWHVYUnRoZ0hmT1N0emNCbkM0SExnRjR3Y25CMWxHSDZxelRGNlhXUXY2dlBleVhSdFhwU2FrN2d2aTJ4bHgwRW9DTHFFTnB6cWNOOWZaYTBTbFAwTkxjYW1PVGQ3YkltSGlMaVR1Vk13cWdoZzU1STdLWWhrbWlPd3V1NnFPRTU0YzBkTVk3QzJVYTduRVFib0JuYzA0OHlsSjhwcTNkQWNlR091a0owRk9YWE9ZeFZRdmtvaHdxUCtUaGdlejROSC9obWZSNHkxcWQweGxwWmNwV1VhOGMzQTVYb2RWYjRKeFFwNVNvdU43SmppMndXU1BNRUJ4a3A5U3dlODQ5dnlRaGNGUjdLY3h3SzdWNnlzbCtZc3pUQzA4NlVra3o3aVBBM2g3UURaeVJTb2NUUjQ5YjcwM3dvU1dhVE9OMGFDbzNKS2lkUnBHeW1xU1k1bjV0U0I5NFRTTkY0U0lIK094enJNRE9MdUNVc2hFd1p2RXVEQ0MzM29YZVRweklSa0IrZ3B5THBhYXVjSCtXNisyZDhlbFc5WGdGWEQvTk5ZYWtJY2ZDbEhORzhUUFVrazNwaFZsaWVvc2Q2TUk2aHNxK05sazd1bEJidGh2TjQ5VFZNNTZ5QWEzMlZxeTVWdUdHSGVSM2hFeHZRd3h2Qy9HaGdXL2pXT0dJUTgycGlITlBtdGFVQnp1TVZOakVUVjFIYmp0Vm5xY1NVNFZFczFZUSs1czRGUnZJdVNiV2RDWTdIV0xBTzlLMjNnbTJQZ2w5UFFIWFhNVEd5NHdoNTJSVWhrblBITXpwRFhSZVFselRpS0ZqMU5wMzdwL3Z3TUpOZ0xKVkJjNmFlZDV4eC9jM2VKOENaOGJMbUx3dU1oUGtjajNDZW8yQkd4K2lRSjRmYjVndDhIN0U5M3JSMVJSNFpNaFRDalZXNmxtRExOS056NEEvcldxUlcxRGtsTVp3clpUSWM0VUhOSHNkVlpGVzlFNmR0ZDZxWWpqUFdrU1k3bHczcG1NV1hGN0ZZZFJManVlczg5S0lVSXY0OWJTZDF5YzRac0s2ZXNZbWNNcStYcFNRbnhKUDBSeDRUYUZKcitLZXlIaTlGbTZJU3MzU2lhOWJTQnZ6T0VWWmFlRFBFUnZTQXQ2OXdvZDNGWEFXeENkU05YVWUrVGlDbXQwaVgxdGs2ZkZVTFczQytkcWllcmpjYW5ZS0hORFlHTUtVTHZBY0g4SHZjYjFMYkk4R1lxQXJOUUdXRGVGYWw2SVBBK0ptOTJSR3o4bmRQc043OTQwb05nQ09GeG40dDZDTGsweGQ0QkN0TGlsd09TVzZDbUlQM2xZcnRMUVJYOW83YW1RM05qdDMwdXluSWtWeGxFTHVDWnc2b3BtZXJHTGdJVkxuZkQ4bDJ1Ulh2cnFBbjNXNmFxOUlxNDg3dXJoU1Q2d0I5OGJPdmMyb3MwMXBpcE5vUFNjbTJ1SG4rRWRwMlBDVVhSYVpOUjdHTFhDdlQrUHJwZDRqRmRWSDdWb2FWM1dkdEdjVzZmc0tMeGVYODVUUU9TQlFOYnZwcDBpM0YvcGIzdnoxOVZVdEo5TU9LeDY2ZDN0djNoN3R6RDgwYnA0TVRYLzVxN2I0cTJZVFhmKzRzRDlhMW8vNmkvbVhSMnZ1NlE4dG5UOHN0clNQeHU4Vy8xbXo1MnN2NytrUERSLzlUN285dnp5cHZOOWZZTldqVzlQdllZODY3Zy85cDU5VnZvZXB4VU9mMy9WOW5oNm5ldXYxNnRIUU14ZVAwYU1MK0sxZCthbnE2N3d2cXk5ZHdLZC8wN2I5dnplVW5uNzlCNVFxR1NYMkZ3QUEifQ.yYzQ9r64Vjkh6L1TW5LfRQ74W5eJkag0ua5t5qeFvzbeTlOCcjuZ0vwyExFKLbwq9Ki4ASA39RuCLcM3MvT3og</con:value></con:property><con:property><con:name>proxy_number</con:name><con:value>1789605043337</con:value></con:property><con:property><con:name>product_id</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">1789</con:value></con:property><con:property><con:name>accessor_id</con:name><con:value>Access: Any accessor</con:value></con:property><con:property><con:name>otp_id</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>otp</con:name><con:value>1</con:value></con:property><con:property><con:name>current_service</con:name><con:value>UpdateProfileWithPhone</con:value></con:property><con:property><con:name>params</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">, "ProxyNumber": "1789605043337", "PhoneNumber": "+971559307088"</con:value></con:property><con:property><con:name>refresh_token</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNVlliVzhhT1JEK0syaWxmdW5SM0w0UkNGL3VJbWh5NkM0SnplYmxwRFphT2Q2QldObTFxZGRPd2tYODk0NTNGN0xrNk1YMEtCQ0pZSHRtL0hobVBET2VaNGRvZFNjays0Y29KbmpNU1FaTzF6bUhrWVQ4em1tK1dtYUowL1U2YnVpMThjOExPMzdvTmgyV0FGZE1UWjN1OCtMM1hORFpJd2ZaRUtQR1pZNy8rMFNSU3FZaG80WFEzT2wrZm40MU4yYzNYSEd5aXF1Y3hSMG4ralpsZERIVXlGRXhKNFN6S1VremNjdFMrUDJSU2FCRUpudFVaTTZzNlV3a2V5QUtLa2F1MHhRbmMwV1VSa0JPcENtRlBCL3AxSm5kbUFVcUptRGtGei9tOEU0STQ0MklTZ0NPQUhIbkIwWWhybWp4VUJtZzhsQmx6dkhIaXhwQnhYME1haWhGb3FrYUVvbFRDbVQra2Q4UlRpRkJhaTFabkpIOEhpbHhaR0RHeThhNGg2bUIrcmtTTXVqZklGMUdubUlxTkZmbG1ack9XQkt1WWpWRjFNWjZZVEJyMW9BTno2SVZ5SzZZVkpxa1BWUlhUd0pxYVIwNGh1dFVaN2NnbXcyRTlqUXRCemJnZkg4SjNFcXRIUWs1Rm1vNE9MMGlLVXVLclYvVXR5V2NMZTl0bkgxQmRZYitHaU1acVZ5NGhtM3YvVzlmdnZ6NmpoUnVKaVNLZllmamNuYnYvWDhpUHoyMFVlWEIyeEFqVUJFNlBCaVkvZTFaZWQvQ0E0MzRRNnJNRmNWZG8yZ05hRmJxQ2ZjdFBPM3ZjMVJLQkVUU3UwM3ZIMWhZWjI2YUFSOEptUlY3bk9oVXNaNldFamlkYnNCY3pjWWhMV0RhV3k5MExjeG40dlk1akZtdVpJRmowK3J6YkVCVWtZTGsrYU9RNjBSVU93aHQreGl3M2FzZldrUlJ6RDBYeUpVVGFzVC9nWVlTY2tjTzFYSnRnNzd4cWtHeUt1Ny9RTnEwdTZZdDY0UlV1ZGtLZEQ4TG5HY1I0dEhPdmF2ZWxnSzdaeEZVeTNCNlRkSVVWT1VxdTNFNzM3TXBoRXByd3RuRk1EcFpKd245SHpVR0Z2ZjNkWURkNXFYd3dqV1NWMTdMWGpzeXRFM0ZHd0ZQdG1wa3YyV2R3Y3F3dC9FS3lDSi9tZWlCUit4akJjdlNIM21hYk02S0I1WkY0MStDM2wveUZML1A0YXVHZkJQUnhTcjJXWVdUbDNmVjVTVFo0cnZLcGx5NjlxK0xrbUFFc2lmNGlNbHNSL2ZWempGcjVVdnBuN3RCRzlpOFptcHBaRXNXRCsxcWd3aW9CUFVuckZQNldVVVhtK2hXWG9HeUZCaEtoaHVwSFpXZ2dVMktXRFFldG1WQ0Mwekh3RUZ1MTdGc1lOVkN5WUF6eFJEaGJyT0gzM243T3BqZHl1cDB0MWc5UzZ3djdaRVZ4VjhVL2JRbmtUZTdxWVFzbXFJU2NxRWx3c01xYWlJWWtsYzRQeG1KcE5SQXpBc1Y0S3pudW9GYis3VGFRVWsyZnc4anpXRXg2allPK2JReFh6RkhNUTNodC91N3ByMWJORVZMWVY2N2MxRE9QVTFyTUhCMjMyMjVZUkFFYlZ4K1dLang1UnhqS2ZSa3ZtSHhPQy9Vd2ZqNFgyYzl1dkFiZlhpQVZFeUtOLzlzaG1yU1pYa2U1MEFGVDNKVDl4MzRlR1FEQmlSV0tDeG5DcGJOTVZjOE5hM1hxdFZ0TnZCZHIvUEJEVDk0N1FzdndJS2pHM2IyL05EOXhhZ1FnY0hUaE1ucE1uSHJlOFRMOWpmR2RlcGRmNTJUTWNRcHk5akNEVWFhRjhtV3BJdGVlMHI0V0NNaHNnSWZJMXNxeG96SG81U01jU28wbUtSRWd5NDBiblkrR2d6NlJ2bEJhRWJHWW5QZlFvMVdMb3ZMem5lNjhlaWd5V01hTHdzdUVkWVdGRHd0Z0N0eEQ1Vk9aOThBVGdJY3d1OFlBQUE9In0.ZQ3yKzQkixhxA9g_TvQ6eOHtSgVyJjBFLLlsj0Ftk4CdCthjv3iNAH98z7gtBd46KO6dZ0plYlw0-UuU9e61Yg</con:value></con:property><con:property><con:name>Anonymous - Anonymous Services</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMMVdXVy9hUUJEK0s5WSs5U0RJQm5QNURlVVNhaE5JVGZ0U1JkYkdIc2cyOXE2N0I4R04rTytkQmVOeVNVRUtLZkRnbmVPYmIyZkd6THdRYXZTamtPd1AxVXp3aU5NTVNFRDZYUEFpRTBhUjJvNEJTMGpnZFYzZjYrRFg4eHV0VnE5R1dBSmNNMTJRNEtWNlhrTU5uemxJUjB5Y2ZoeURVa0k2RjFUVEV0ZWF4a3RnUllLZkx6dXlpazNwR1NXSFBGZFNqSnliaDVURjFaR3V2VXFVcnplM3pvMUpOWFBPalpUQTQ4SzVSWUFaZkxqcmY3U29PWXN5K2dzZFppQVZBcU5Qb3o2dnoxR25jb2paWkFOOGNITTVRSDJ2NStLbjIyNzRIYS9iOHRFeW85eE1hS3lOQkdtcDUza0tWaXdTU08zWmEzWGJaR0dqNVJ0eDNMcUhQN1JMS1o4YU9yVjhnVTlSa0tkVVQ0VE1VTUNHSVFxdUJvTUxQSGhOMzdVNHVXUXpxcUVreGsyYW9sQnBxckYyQVFuTk1na1RrNUxGdlZYRUlnZkxmL213VjIwbkJEbGo2R0d2dkhxTVNoY3NUZ2JZQ0ZoK2NuMDUzakFvUWE1Qmh4QkwwRitnUUsyUk5wdnFDVFY0c3V5aTdVWjZnc0l5dk8wdmt6YVBZbUc0WHQyZ1JxYVNjaDNwQWpuYWhtc3RhcStGdnhKeUt2UjNsQTZTSHpSbHlUTEtpRXBVYTh6ekpYK2tQSWJrMU5TYVIzTWJVYVdlaFR6RTdyM0llYjNYeWRtVWZZTXBVMW91QS96UDVIbitGci9STUR4QThKektwQjlyMithSUg0YW5KdUczanlDeDJWNG5KOUE1Z2tCWkZoaU9SK0hOVzNMUTI0dC9UUGpkTGpsNUo3aEhrQWlCSjIrK2YzTS9kdVAxdDJTN0NRKzhJMkg0YnY4dzN0SDl1ZjZMT1hsMU9vdjdFcVNhSUJLVU1CSVpZRkZ5d2RDOHBISm5FYXZoYTkzTEFSNDRmVjQ0YXcwYXphbzAvZ09aU21IeU5WVDlFeW01TUQ3ZEMzUTFiamdYTUlOVTVCbXVBMlNCQXk0eHEvNk1GTVNDSjJxNXJMaDJUSUtFMzRZcGhyTnlLeEhySytQb3F0WUppOTV3dmU2WjY1OTVuYkhYRER3djhCdjFWcnYxMlE1OFpBWHpuTW5pc0xHL2E3eWRlWnZXS2ltMlZBb0hmcFN5akZYNW54Z2VXMXVhVmh2SDNtYXdzd2djbXZsWTJlUTVqVUJLdXdhWjdNSHVKS3NJR3dvTjh5cXdGazlnRnhLeStBczFlWFNoR2dvQUFBPT0ifQ.ZunBxRXUvRTxMYW6hcUum5nN_cIx-0AV2rczLtBwGyyUHxjzX1Lwd0auuqJLN88WXa7OZA4F76aXNkl39944bQ</con:value></con:property><con:property><con:name>Read - Main Screen</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNVlo2VlBqT0JiL1Y2aFV6WmRacHNjbmtQNnlTdzRuTWRqQmgrUmpaaXFsV0NKMkxCL3RJNG5UeGYrK2NoSm9tbUduM2JNOUFBVkUwdFBUVCsvVzQzTVAxVldZRmRFZVZWR1dMbEtVa043SG5ra1E3cDIvV0l0dzd5Ti94VW44SmZ2bXBTdEJsTTk3RVNacEZWVk43K1BucDgrUFhPYmJsQlJuMmYwWktObmZFYXJRaVdkTEZoeVlscjJQdjMxK01mZTR2ZDIxd0svdE9zNnlFL042U2FQZ2FWaXpIYWZOR0tWUmcyaVNMU05LL3JPTkNoS2dBbjhJc3FUM2NON0xpMmlES25MYW1OYVVzc215UWxYTkFQV3NPZ2hJV2Q3WHRQZndSN3NRWkRscCtSOCtQTUxUVUpTZVdVRkJTTW9Bc3BNM1VVQVdKMXAycVlRdzRUR1I5U1pqK3huQmFmZUVWSGRGaHV1Z3VrTUZtNnBJVVk3VEVLVUJhU1ZmRjlFaVFXWE1LTm1vaGJuNFdoa3hhVnFvdjUyWXpFWi9NTG9FN1JaQlZxZlY4VTdudlZXQjBtcFJOUXgxcXoxSmZEaC9CdXh1YnIyQ0RFWkZWU002Wk9JYUZvUko2WHZndEx2ME9sbVM0dnlNUWRzMXgwRVhjSUx3RmJoWHBhWmt4U3FyN21ZNlJEVENoNk8vaU8rTmNNcjh0M0dPc3FCT21MMHVHQms2bWZBemJCOSsvdmZ2di8vNkV6cVlXVll3dGoreDhYSDJ3ODkvaVZ5LzdpTEsvcmNoV3FTeW1NR1RGdWJvN2JSODBjRUNXL2JYUWRXNktEdlZzcjREV2lmeFNCY2RMTTAxbVZBc2dvb2cvTkhuaXgyMDg2aWFXWHFmRmNuaERLMm1WVFNzaTRLa1FmTUQxSFYrZGgwY1lIYlhuc1IxVUY4YnQwMnlpc3FxT09ENDBlTGp1NEE0UlFwVWx0dXMrSjZJMmczQ1pmY1k4TGF1TDNXSW9pejMyR3hYaVlLVy9aUXBLaXZleWFCa3JtdlFiNjFxaGwrTCszOGpiWFp6VTdselFqcVoyU3ZvL2lsd2ZJY1F6L1E4aE1NM0N1eDhoNkI2REtjT29wUlVKMU41SDdNVCtDNkYwRkdiWkc3ZldkcjNKS0gvUjR4aUIvOTlHV0RmMGlsNDZUdVNWL2tzZTcyVG9ydFV2QlpKOFpzcVdaQTdaN0JqMlB2aEZWQ0gvTlZHRDNiRkVhdGdJL3AzbmlZL1Rvdjlqa1hqYlJiRUlLWHN0MGsrMWFUOEVkR2xVK3pyRkU2K3ZLdEFqdC93WGRXbFhISUU1MUFTM0pOaW1LWDNVWkc4azc5Mk04eG41Y3ZSUHQ4SHJkamxOZk1zamJ5UnhxVnV0WUZGZ29KVU4rUjdTcjlPMGFWTGREdTZ3TEVVdUNzaWRsRDFUaVdvMkNWRlBEVWUza3FGSFRCTlNFcUt0eldzTHJDZWhaSlpHbFVSUS9pKzJVTzQrclk3dEtjZHE5UDN4Y3AzeFBxbFBmSks4V2RaLzlpVGlILzQ0OFRrcVNsYWtES3JDd2FQVlZGNUZqSHlFMDZqNVlpT0VsaWtCeEd3V1o3alJPN1psM3dwSHNrZTM4T001dm93K25oMm5UWm5qeXZ0VmRxRzhMZjd1MjE3OTlBVVBUTGpMNi82eDdsZDh3d0dtNzNnWkU0U1JmR1NMVytleFBqbEhxc2lxL1BIQXcrUDg0TTRvblQxcDdzcXRuQTJJaHRDcy96dzVuOTRZR0txaitYNW9pUkJsdUx5MEQzbldpU2tZT1ZKVkVZVitWb1hyVGhmNjhjZmRmSG5idnh4L2tzTC9qZythZVk0K0RPSTQveGZnVGhTQkczejk5UnNmMkpIZG5sVU5GOU5mUTJyTlpYSGxicEVLN0tnVVJJOTJkTjluUjZ5TnFMUGV1L1BXdTg2MmJabWlMZDBRWXFDMmNPandvNTB6eFlxc252aVdtVXhZYmg3cEZIRDVTU0k1cEU2QTN1dzB5SzEvNEZOY2t1aG9zdG9kakdMVjF6QTBZRUJsTWNmVFlQWWhVMC9CRUFkMzNDbDdGaWxERGhUTlJMWjBJRkpJZFJETkpaVk9QRTV3S3V4RitOWklBVE4zQjBMT2plVFRFNHE3S2FLalFUT0NkU2hDYXBiUHpiVFpRTHZ2R1RXK0RHK3NLZlk5RnpmUmtsMWgvbnJIWFJ6RVFGWnQ2R3VtQ1BmQTJNbE4rMUJDTmJxUmgrcnRqYkpVMS94OXY3YUsweGxKWkVwNUdBNmxrMGVENnhFMXpWYk5mVng1ZWcwTEd3ZzF5VFpxV0E5a0QzQnp3Z3dJZUppd1Z3ckFJNGg1enVLaEVRekJaUXlYTHNMN05JYzdmV3R5ZXV1cFF3bXZxSi9zbElhb1JFRWJBOHlSU2hBVjRGQm1sTk56RGNheU9lT01yaEROQWVHYlVqV0hsb09VQkRqOVNsSVBCRUkvVHZIMWVVYkFlOTlKYzhONkE4Q0lCdExNUk53bXUxTVFWNHZoUnc1c1RLZlQvU1piVVBUR3FtQ2JsVzN5L1dzMGZmbXpMUDYwWHhxS3NTNWtzbVlEeTJSem8wWVY4RUk3QkZYT2NqRk51Q3U5azR5M2pzVEZaa2MvcVJEbFNNalhRdEFhT2k4cWxsOEpubWczOEIxbUVLYldteGZES0hCd1RFUGJhQlBMYWpzTUZBM050Z1oxaVNjYTNzTTlTbDBnWnZ2QWdBTE1pa2J6K21YUmpyWUJiSFhHRkNwN1poUEVXOFdPdGhOTVBVOUU5Q1UzVHU1RlhnUnJtZmJaYXlPbDVOTVlIZ0VISWM3cHMvTUUzWGdDNnB2Y0g1MkkraTExdDRoVmpiQUdmTkdFa3BHdk4yYVVaVUNVRFlnbHJjNFZVWlE4YmhBaERLeU1YVFdmc3BzVk1ieDFSWW4xWVVIQi80U0JKd3pOUnFmVjNjZTFOZG9wRzhOSjY4OUo2d0MwUXdEcTVyZ05Md2hvQkxBV2k4TjI3ZXRhVzR0cHhUWTR5bzMzUUgwN1BDQ3hMbDNJMVNHNWFpRkJtVGJnN085N2FqUWc1Z2l4Ynd3YmR4b0hLWGVXdmVJWTFiUThYMmI3ZFdjUG05WS9Rc3dnck5sVkRFWDYxczJNQ1hEWm1mRzFkWlkwMGFMcXRBQ0s4NXo1QnNNZ2oxSzZZaU1WRWVmeURkek1PWjlvUm82c1o4aDBMZHV1SEFPOTdvRzdCbUhoMzBBSm5sc1QvSlNCNW1JeG1GaE9IUm9yV2ZGamVEdGJhc2ZZM2k5d3lQVjFqbmR2Tm1IcXNiODJFczlDZTkxemhwUjNsLzdtczJIcFFiNkc3ekdTc0I4MWdMcUxRVDgwSUs1YjhhK2pBVnpOSjhPWmxZaUs4d1hNOCtPOS9aWXNmU1JtY0Mxd1hsdXNQWGNQRnp1cnpjKzEwZEE0R2NFeUE0Y1VXYVhIRzhEUS9USDJoN1lTb1FTN05tQXpxRU5oMHNYRGpTcUR3MDM1c2gwdk5GamZzTHNZR1N0MVozdXFob2FxY0FDbGFMdFRUK1loSTJkMGxzeURodXJxWmlQS0p3RDhueHVReEVuUUhEV0hzOCsxMTRjZXViWUZQRTZIT0sxNGdTcHQ5UG9tSjhyK2NDWjVyWHR5SG5BN2FhM3dsaGtlcUpPNnJ1V1FDdU4rb01sRnlhQm9zc285ajNka1NXZmViUG13aEFtb1dDTjlNcHo4WjVaNjNycCtxVmpxOHhBNENmSVpJVmRIRHByckZ0VGVHT0p1c3BPMzlqclVBNWNQRUY3bXBwcGVFdXNhaERzRmVvb2VtWUtlTlBHMER1YmkrNk5EMzdOL01aMHdjYTBkNXJuWElRQnFCTTUxUmZCYlBjTGR3MkZJdGpmVm9QdHBHbkFkTGZldS96dEZuT29yaitwdC9yVmxlT2l5N2wvTFNtWEY4alZZeXIyKzVLME5OcC8xcjVJUkQyQjQ2OSs0YVJmK0V1YkY5bmIrNk4wOVVFUTVYKzExVVR2UllwNlFTeTlKSDR0ZVozS2oxNjNCUGE1UjFHNnFobGhtNERTRmR0R3MxV1VMdTRwV3JFcHFZWDBWU3JydFFjcnM5bW9MVU5FcVIyMXRjdGpsY1ZxaTFQeHhwWjcvK1AvMG44L1IvWWUvZ3M3MVZ3QjlCOEFBQT09In0.WxjJJf5o5YW0TcXL14W-meh3TPUdpIzeq4jUF8kjXZUyMnrfHq7r55tzLjphMSCRsTXJ-sAiwNIpXnwrRIKzqA</con:value></con:property><con:property><con:name>Demographic Updates - Update Profile</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWk9idUpiK0sxUDljWGRtQ29IZDA4Nm5EUTNDeGtadWhGNUF0MjZsTUNJTlJtRGF4alptYXY3N1BVNG4yY25jMmQycTdWUlhXdUxvNkx5ZlIrZjNoL3c4VklkalBlVkRmZWcrZFhsYlBueDQ4TXIyOEhyTSs2b3VmdUs5em9meTlQRHpYMGhyL2ZBQlBWa3o5QnY4UTdPbnhhUDk4ME90eTI2b2g5dkRoOSsvLy8yTjZmYmFsY2VmRHA5LzRpZjQzOHVIL0N2UE8xbnhoZW5wNGNNL2Z2L0wzcmZqOTFPZjlOK2RldCtGRy92enp0VEY5K1VaVG53OXJQT3V2dVdtUGV4cVUvN1h0VDZXUlg3VXZ4YUg5dUdQbngvNlkzMEJIYjhlN003R3dPWnB5SWN6Q1BTUW5JdWlQSjArbjgzREgvKzhmeWdPZlhubi8rV1A3K0o5TWROUEw4ZkRaN2dDWklUTEwzVlJmdnBLRG5xMUpkZ1ByUGJ3c2szWW55aCs0UENWZ2F5QjlqeThWSWZ1enV4OHJEKzErYWtCTWxqZDVmejBvemVhOG5hWDlSL1BvQlk1dDd2eStQTmRsdkgydnZnbm5Hcno4Vk54T0hmRHU0by9QNENIdStIVGNBTWx2amp6ajM5K1pmMWR3Mk41T3B5UElHTFo2ZjVRQS9WWFdlT1BkeThVWDloOTZyNWNBYnZJc2h6clR6L3ozNXgzTWpEZjRmamxrb2VQWDFZZmZ2clkzWDc2OXVXdTROMjcvN2V6N3I0NjZITXh2RE5EdnowdDN2ZkcyNS9FZ04xSGEyN05ITWY1RFQ1ZmNsUHJkek45MStQMWVEajMzeTc4OVQ4ZXZscWo3bDcvVFZmTTdKKzg4bEthUTk5QzBEMzhBVEdnejhkM2hxZXlPSFFhVE85WWR6bktZL2wycms4MUJOTVAvcmtiOCs4eTdkMFIvNTVZNy92L25VM3Y2NjkrZVYvOHV3anYrLytiRU84VXhiSDhuamZmMlpWalh4OXZQMno5S05ZOVRyNTlPWi95MS9LVHFkdjZlekI5UG5mRm5TNDNmMHFqUDJVUkthLzNHTlJYODZrOEhpRWF2cm5ybmU1UEg0WnkvTTUxT0RRbHlQMVEzc0pxRnhUMXRnNVhmT0pqVkllTFgySFQydG1EMmRXcngxWHphaFdXY1dPT3YvMFNZUTYyTU80YnM4SjZnekk3eCtKUnRqUXZsbVMvYTRlWWRJYnBpWjZacEc5eCszcmtiWi9uS1Q0Smk2eWpabnplT0RRa3daeVhRWFpjMitTUXRJdGh4L1U1c2tPeWhUdEV3NjhhdTF3OG55NWlpaWNtUG83Q2FFVmJpcFZRa2lJZDdmeEI1QkNKU1RBLzVzaDNDbTkxRVpheDlLVG5yRjdNaEp6TmtsYlp1OVJsMmc5UGpEVU9GU1F2ZkNWRk0zUFd5RDBYSHNpR3E1ZXNEVSt4Q2M5Um0xMWxNMngzcmNKWkd0SmM2SWI1NmxBS2N5cjJZYXozMGJpMlVLc1l0WlczR3JWMXVtaC9NWUcrZUdQTmJHN2pXTmxZNW1tL3lxVGFVbXVRdkMxdXVTQVJ0K2FialJPK3NBYjB0Ylc3MjFkaDRXQWUyV1JMckxHUFd1TW45anpLSk5wbVFreUZqZVpjamhscmNDd2M4cUxzS2hSMjdNZ2xqVlduRStJUUtodDZLcDZIWlBzOHhJeVBYUENlS2FFRmJVTEc1TUl0SEpkRVNJaFk2SFdVZnJ3VndsRHdDNmRvTmVlb2YxczcxVGx1Y2F1NGtFbEFnM3dwa0hMRWtYRTFrTTROaFdnYzRZdU40R0hGa1dycDN1QmM0RlQ2YU1OYWRNbUQ4RXl3UHVST1ZZa09YL1NlMzJUYVkxa3ZDQXNXbUtBd2o0MGFsY2xtZ3Vtek5pcU45KzVRNEhETDA5ZXhTQThqK01qUG54ZlBPcTFRMXExdXNVV3hiSlRrbG1YTFpoRm1YRjE0YzdEbEVyVDJSenZ5RjZlZGlDemRHY0lsbmFMMDlVcEZ0VS80Nk5BMlBNaWxXOGwybUhFSDM0aU5GREdoTDN4eUlNM1RKZWRQUjlZU1V1d3JDemk4Z1AyZm1ZMmlhQ21XY1h1eWQxSzVaUnMrYnhQd0s4U09ycDh1cEJHUFlMZFVHT1BvNEhBc3ZTcEx2TkRaZXMwbEYycSttWFRQL05PbGFNbEJPSmlWRWhHS2FLQmxlQ0YybUd3OWQwODVTVGMycUNKcFNwckJCenRNeFo3NndqWnRpY2x6WnRPSXNZL2pUaWkzc1BWbFp4Y1gxbFRuUEgyOVJkNnJuVXV3K1JLM3RDWG4zS2VicUVWU1lETGxqRzV5aEZ2RzR6SEIyVkVGcjljTW1WVm1xbk9CVnFQZzJTenI0bXZVbVI1MEhabTE4SW5uR2hiMGlQaSt4UTIrQ2psYU9vMk95VjZGVVZ0TU1lcmJERFV6Rm1ERVBKSW1jdEdYKytoR25TckxoZG1JMnlMbnFidkpVd1hORkQvblRqaG9nMnV5eDJNZVhJL3MrVFJ0Zzc2V3VIOEVuNTlLZzk4S2NiaHhSMTAydGpscFc0VVp3bzhiNU05eUg1SElJZ2hzQ3Y1WjJkUWY5c3hlWExrUjY0alBVT0pwSXA0SGp6VFpsVGE2bGszaEtLT2JZay9XaWZWNjRYczZ5L25xc21WbUtTemFSb0U1RVU5eExZamMyTU9rV0hFVHdlS21NV1NPNmRkYjNFK0YwSG5NZEU2czhDMHlycDFEUFlpQkZ6TnFTVDFTMDBaVU90RGh4dms0N1Zxak5vaENYSnUzSEZWdm1RbHJ5czFHTG9rVkJhZGpKREhmK3FLaDlpaldUbitqRGJmWGp0cG9INy9wNTRVakE1cnVjTFZLT0VjUnh5eXkrbTB1MFVaNlJJQXVzM3dxNWxGanpjcGdoakpISlh3Wno1SmwyT1R0dUZVTm12STJuUE91R2tVbkxNbFZvT3pGV3ZEWmtlODFLL2JtSlFxd1pBSDFOVk1PODRYUUhHSkMwaFAxTUlmYWRZa2FJcWx4ZlNINWxEczRTREI5Wm9iZ2dnOVdhZlRFbHFHblpKVW5wbC91c0VoNHN1alhVeWpZRkI4TDB6Z2EvS0dXL3B4N1pKYUJQVXJzamp2c3RrbHptZ21iNXB2SjlDSXdxODBVVzF0TWo0VWdwMHdPZnVLRW5vWmFLSXdLQ0ZkdnlkTGd5Rk52MERoNlpvbFRMb2ZuMHRlT1FBY25OK0VMUWYwcGN2UTFXWktqWXRHTVdSYlM3Y0paMi9ORDFFSVpiT2R2WmFvczBkS1JUbFdrOWhwRmU5OEJ2N3RDdUJ6aU9TTDFrMTE2K3FTOHl0R1dIZ2hVWmRsd2k2T3dwUkJtNGpZWWtQOXQ1MWRqWVp0eGc5eFZuQlpIN3IxYWpOSEx6c1JqNGVtcFNPazVabUdZUXpRVXQ4V2puc1I1eTZpQ1dqN205WkFSeUFmZWhDZk54M25reDlQTzZKN2JnMkpJclVVamxLZ0h1VU1WeEYzVmtuMjFoNnJaUW8rcWRWZk43akhKbmhkdjZqWlVTalRXMnFJdkNZc3ZaYUE2b0dkeFUwemx2Z0dma3pacStwVUs1aWZCNThHV3oxdk93aHN6ZlpZRVkxMUFUU2JXMEFrUmhsc1dObXh2em55djVxekRFUThFQXQxU3pWN3RxQTN6blRTUjhsd3FVK3hGTFhuSk8zMGh6SDBzc1FFN3pHMklrMEdrbGNyYVZ3ZDY0NHA2Z25HclFZWFA3WmdScENkM25reitoZmhxbTlrRHlvUEZwSU5Ga3pjNkVudjhHRE5YVVE3OVZaSldZQk5MV1lrSTZqbmx1SWttNHUwOEhlUnk5R2xRY1diQ1NPN2RrRFo5cUhEb3M2YlBSYk9JS1JOTzRvZ1pyWWV0Yk1Dbi9teUNQaEV4dXpjQ1UweVd2cFBZZUpNYnpKbEZJTXNxTDB2ZG1pLzdXdUNlc3FXeW9lYW1ZTS9sMmlFYlpabzU3ZnFXdDhNcGtxK1hYUmV1SkE0ZnFjQ0I3R0tiT21LSWtkdUNuOG5PbngwakhucXNEVWNPV0tYbzZGdlc5Q0pLRnJOdG1qa1pQMTNMWUZ6TFJsd0oxeTVweDJNVVFFZnBLaHlsdmN5YWVTdTZWNlJrY1dVUTAyckNjNUJwRkpZL3o2MTRpcnZlVVk0T0ZlOTdEZDIxYURCZ24xZFVkbUtUKzRLV1RRajExR1JzU1NKaXpjTnMwcTF3NkZ5bEFoVVlPN3RValVtOW1IYStxWFlveEZTRzduWnBFckNCSy9ZMGlGdDBZczM4a1Fha0t2bkNNQXZkb0Vkc1l5bVdtUkZ2d3FwT08yc2g0b2ErYlNFL0UrR0NiNXFMV0twVkpJWElHbXdnajliWlZHMUo0ODlpeXp4RG55VzhtY1BkZkdRQ1M3SlVCOTRWcUVBVWJCdGZBRHZVOTd5akRoNWlPenlKaWN3M0VDbFJvTnBkMmtmY0F4eTFyTWJFSVl6SVlkb0o0NWNzVE1yMjZTcEZOb1A3bmJoUkdiUEpHMjNtS0hiNFBKL29QTEw3U2ZncXorM29Vb2pRMzJGQ2NsTlJxS2NWczV0WkljZlQxb2ZIcUN5bXJiOGFkMXhzTXFNSHlCOC9zYXBualNqbVFWakZ4Z1VjMVUrQVk5d0kzaXNLSFViQVlQdU1rWWt4dzNhZTI4bE8yYkhVTHZOUm45dmg0OXBHR2VEVW0rUmhuZUJxU1J0eWhicDA0TDVJdDFpLzZLRGFNdUdLTGVmekdQRkpMRG1pcHVwNEZ3NEs4aXhMemN2T0UwQmpWbENwVm9tTW5HSVpYUmpua3d5MEIzakt6cXhYRkRYTk1XZitxRDE2RUcxZngxeTNyTkU0ZDl5bGJtWTN3SDY1NEVSUWJMcmRNdHdUUUx6UytMT3NyZHg3N3k4NXlnVFdMV0M3U1RTb0xqMmNTRGtid1pXcnVINnl1Qld1dGROdmVZZGJzU2Q3eGZCV0JZc3IxTTF0c3M5bVczNnd0UlZkZWFyOWdvbWJzdWFSdHF0TDNJeXVBQnV6L2NwUkthM0VSSzFpV1hISjZIdzNSUlBucjJBUDE0dWRLdHA1Skl3RVdSSm84b0ExQnhHRUhiR2U1c1RHYjF3V1NOa0djSWQyc3BiT2RsYTFrWUZJSWFwRHlYRE5XWlZGTGR5QkFTMEcxbHdtQzFvNHVpc2FxSFVOWUQ4dkc0c3BKREdxZk5taWxrNjRrYWE1UXErTG9EYTdzWFdha2ZTQTRvNFFaUU4rbkpUS09aSlVpcmJrdENrYjlDTDM1c0xiSjd0QWgxbnV1WkVDWEp2NCtHWEw5SVZPK25uSHEwTTB1VzdTems4RmlpK0pJYzlFb3JBTVVKRDdpeFZ2RnpkaHF5QnZoYThobmdwYnFjaHU1dG94TWRTOHQxMUxiY0MvcXlJbDlkWUxjVEVaVDdGbUxOdnF5dmZrQkpod0FCMVdrTDgxQWN4U050Q3ZyZFVza2pvcStFaUY5M3BOK0FsbCs2cGEyNzBydWg1OFU3M0lkZ1JkVGpPTktnS1kvbVdiTEhLWmtoWjYySkJaMFFqN0o1MlNXQVlraHZxR2lxN2ZyeWYvcWdETFVadmdrdnRXaGtTYWlXb0YvdmFobjNQQXFnZUNJT1lSWmxCZmhqanRSOHFocnk1SlJvT2VGWkRGa1JlaHduNjk2bVlPT2l2QUJVUkJ6N1FpY1poMGlnODdHNCtaaGIwZCtFQmp5dGZJSEJMb08xRXdUbUR6ZzA3RFViWW1UcXplb1Y1MUxwZFExM3h4NXJ6eW9mNU0yK2ZUR0RHNmg1cFdBNDZCZXE5V3pEcU5KQUM3TE9NNUR4WUQ2SCtEdDZBbjkrSUdiNXc1OUV3WDRxa0NYSERLZzhFVXZIOGhYWWdFd3A0R0RMU3owSWwycG9yYkJieVZudWI1bmpRNUlxbHFSYzBENU9RK0huWkllOUFiU2JFOHpJQnZUdmJrQnUrbEVmSnUzQzRybC9pa1RVUWZBcTVZMGFWN0t4ckkzRUFzbVFXMmRkeVhhREp2aFJFdWtXQnZua0U5ZEs5RkFObVhrZ3B5Y2FLdEFLd3U0SkUzR0lBaXk4aW5LR3ViSTJubWZqVHA3Y1pDZWJUVVVIZmNocVRoV2ZxR3hoMjhPZTZQdFZZOVo4YmRBMzV6b2thRk91aGIwUzVpdlhTWHV3WTNMQUNrbXdEKzhOVVpNUEVOc01jVk1PVk50S05odG9GY3UxNFlKb1AwczFsdWxDclQxVzA5aVUza3o3ZkY4OU5ZN0VYSW0vZ1c3Mk1iM2pOV0pzSjJiUW1VTmRsODE2NUF4dGwxS3dRMFZKRkJESTFDVUpzYmN5VUczakRRRHhLUFdncjhuMENPZ2QyZWVlQWp2c2RMMGtFOEJOVkFmTXJnUFc2QjlLTkFJdEtNWG9VRHViREVTbnF1NUU0SXVCdnZpeTZhNytRaUFoeURDN0c2UlNuZGc2Nm5ES2t4WnpndWw5VlY3b3ZMR24yOFJNRnN0a0dyaTVUOG9weklpWVJ5NHIxNTN2cllqZUh4c3Vxc1grVzREOFBQODhNOGt4WXIwZzJheVYvYXNuTFlDOWY5YWlyZlpudU9uNXA5cXZndDZvNmZsMisvSGVmellkcnMreXBLbnVtSnBlRXZwNC8xbGF6NnRMc2U2V285dlgyOER5di9NcjE1c0MzMDlJczErd1g5eHBEekFhRVBzNmRmRjQvMmY5NEhjQTkvbWV2OGxkaitnSDRnL3J1Sno5ZUozY05mcGo3b2IwWSt2eitZdkhzOUE5VjlaTk85d2hsemVLMjdUNTlOL2dwYnM3czhQd3gvSHU2MzR0WEt1NC90bk5sOWRaLzFmUnRLZmlxN0t1K0s4c3VzNytGL0dNcisvNmRLRDMvOEMxTGcvb3NBRndBQSJ9.Jdy29Jsa2X-xqCYBFDfWwYMjcceHdwJDWNoSuy8JgBxTdC2G0mRRNfHz3CM_1DLUUwIzsLiYKm6qakqvpGX0tw</con:value></con:property><con:property><con:name>Security Updates - Change Password</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVk2NU9idUpiL1YxTDljWGRtQ29GSjJ2bTB3VHhzYk9SRzZBRzZkU3VGRVdOc0JLWU50akZUODcvdmNUckpaaDUzdCs1MnFpc3RjWFIwM3Vlbjg5dFRmaG1xMC9rdzVjUGgxSDV1ODZaOCt2aVVsTVhsZkJqdTcxaW44cUhzbjM3NkU5MUJQWDFFejhZTWZZQi95RGJzRHg5K2VqcW9zaDNnMU5QSDM3Ny8vWTNqOXRhVzUzZW5YOSt4SHY1Mzh5Ri9sN2ZxbmJ0MXZpeStYdkE0VTN5NW9YLzYrSS9mL3JUM2pkZUR4V2YxZDZmZWR1SDY3ckxUaCtMNzhnSW52aDVXZVh1NDU3bzU3UTY2L0svYjRWd1crVm45VXB5YXA5OS9ldXJPaHlzby9QVmdlOUVhTnZzaEh5Nzl3eXlYb2lqNy90ZUxCdHAvSlIybzlPOEoxNTFQSTlqcDB1ektNNXhISDU3bjd3M2JtRm1XOWVIZmsrbWZqdy9GcVNzZmJMLzg4VTJvUlpXMysvTGRTOTczdDlOWmdXeGdrZXVoS0Q5L3BRZGpOeVY0R1B6NjlMSk42QThVZjJEeEF3ZUlrTTlOM3Rmd0RWWVA2VDcvTVVqcTh2NlE4QjhMTUREK290NVA3MTRleXI0dC9nbW5tbno4WEp3dTdmQ20yRTlQKzNQZURwK0hPNGoraURIei9lLy8vTXI3dTJMbnNqOWR6aUJZMmFydWRBRHlyeExHbng0Mkw3N3crOEdlaG1FWlAvellINnczTXJEYTZmemxscWRQWDFZZjMzMXE3KysrZlhsbytBaTAvenR1SGk0NnFVc3h2REY3T1BCdDcxKzc5YWVuYTY0UDZzMU8zL1hZbjArWDd0dUZ2L3pIMDFkekhOcjlYM1QxcWZuT0xhK2xQblVOaE5qVDcrQjZkVG0vTWV6TDR0UXFzTDFsUE9Rb3orWHI1ZEFmSUliKzRLQ0hNZjh1L2Q4ODhkZUVmOXYvbnl4L1czLzF5OXZpcnlLODdmOXZRcnhSRk9meWU1WjhaMWVPM2VGOC84UFdIOFY2Qk1xM0w1YyszNWVmOWFFNWZJK21YeTl0OGFETDlRL1o4MFB5NFBMMkNFSjEwNS9MOHhtaTRadTczdWgrK0RDVTQzZXV3Nmt1UWU2bjhoNVd1NkE0YkEvaGlrMXNqQTdoL0JmWU5IYm1vSGVIMWZ0VnZUY0tRenN4ODcvOVlxNVBKdGZPS3pYQ3d3WmxadTd6OTZJaGViSEV4MTB6eExqVlZFM2tRZ1Y1alp2OW1UVmRucWQrencyOGp1cHhzYkZJaUFPYmxVRjJYcHY0bERUelljZlVKVEpEdklVN2VNMXV5bmNZWC9SWFBzVVQ1WjlHcnBVa0RmRWxsNElnRmUyOGdlY1FpVWxnbjNQa1dZVzd1bkpERzJwU05qM01aMXpNWmtranpWM3FVT1dGUGFXMVJUak9DMDhLWHMrc05YSXVoUXV5K2RWTDFvUjlyTU5MMUdRM1VRL2JYU1A5TEExSnpsVk5QWGtxdWU2TFl4aXJZelN1RGRSSVNrenBya1psOUZmbHpTZlExOThZTTVPWmZpeE5YK1JwdDhxRTNCSmpFS3dwN2puSEVUUHN6Y1lLWDJnTitwcksyUjJyc0xCOEZwbDRpNDJ4aXhydEphWWRaUUp0TTg2bndrUTJFMk5HYXovbUZuNlJaaFZ5TTdiRWtzU3lWUW0yTUJFMTZZdkZrR3dYUTB6WnlEanJxT1NLa3pxa1ZNeWR3bkp3aERpUHVWcEg2YWQ3d1RVQnZ6Q0NWalpEM2V2YXFpNXg0emVTY1pFRUpNaVhIRW1MbnltVEEyNmRrUFBhNGg3ZmNCWldETW1HSExXZmN6OFZIdHJRQmwzeklMeGdYNTF5cTZwNDYxL1ZrZDFGMnZuaU1NYzBtUHNZaFhtczVTaDFOdU5VWFpTV2FYeDBoc0lQdHl6ZGowVjZHc0ZIWHI2WUwxUmFvYXhkM1dPRCtLS1dnaG1HS2VwNW1ERjVaZlhKRkV2UTJodk55SnYzT3g0WnF0V1lDVEpGNmY1R2VIVk0yR2lSSmp5SnBWT0pacGd4eTc5akUwbXNRNDk3K0lUcjUydk9ucyswd2JnNFZnWndlQUg3TDZpSm9takpsM0hUbXpzaG5iSUpGOXNFL0FxeG93N1BWMXp6OTJDM2xHdHRxZUIwTHQwcVM5elEycnIxTmVmUzNreXFvMTUvTFJwODRwWlBTNEV3UVNSUUlyeGlNMHkycm5Na0RLY2JFMVFSSk1YMTRJRWRwdUpJUEc3cXB2VHhJak5KUk9tbmNjZWxVNWpxdWpPTEs2MnJTNTd1NzVHN04zTUJObC82RFdud0pmZklKbXFRNEQ2ZWNrbzJPZklieXVJeDhiT3pEUGEzRE9sVnBxdExnVllqWjlrc2ErTmIxT29PZEIycE1mZXc2MmdhZEFoN25zRzBmK05pTkZRYW5aT2pES09tbUdMVU5SbXFaelR3RVhWeG1vaDVWeDZqTzdHcUxPZDZ3Ky96bktYT0prK2xMb1cveUsxd1VOby80S00vNXNIdFRCZjl0QTI2Zy9DNzkrRHp2dFQrYThGUGQyYko2OGJVdlRKbG1DSC8vUVo1czl4RE9ESXdBcHVDZjFZbThZWWpOZWMzcHZrNllqT1V1QXJ6eGVEaU9ydVJXaDFFWFZoU3E3bzQ0blZpN0svc1NHWTVXMTIzVkMrNVFab28wRDEySlZNY2k0MDVUSklXZHg3TTc4cUh6TkhkZXV0M1U4RlZIbE9WWXlOOGpiUmo1bEFQWXVCRnRWd1NGeDlJelNzVnFIQmpmWnAyalpZYlJDQ3U5V3VPcXRkTWh3ZkM5RVlzc1JFRi9Ua1NQdHQ2dkNibXlOZFdkeWMxTTllVzNDalBmMVdMdVNVQ2t1NzhhcFV3aGlMbTA4am90cmxBRytGaURyck04cW13bzlxWWxjRU1aWlpNMkRLZUpjdXd6cHR4SzJzMDVVMW9zN1lhZWNzTndXUWd6Zm1hczltWkhSVXRqdm9sQ254QkErSXBLaTNxY2E0WXhJUWdQWEY5QnJYckd0VllFTzE0WExBcHQvd2c4Y21DYXV3WGJEQktyU2E2REYwcHFqelIzWExuODRRbDgyNDloWnhPOGJuUXRhWEFIM0xwMmN6RnN3enNVZnJPdVBPZEpxbjdHVGRKdnBsMHh3Tzkya3l4c2ZYSnVlQzR6OFRnSlZib0txaUZYTXNBTS9tYUxMVWZ1ZklWR2tkSERkN25ZbGlVbnJJNE9sbTVEbDh3NnZySVVyZGtpYytTUmpOcUdFZzFjMnR0MnFlb2dUTFkySzlsS2czZWtKRk1WU1NQQ2tWSHp3Sy9PNXc3RE9JNXdvZG5zM1JWTDkzS1VvWWFNRlJsVVRPRG9iQWhFR2I4UG1pUS8zWG5WV05oNm5HRG5GV2NGbWZtN2cxS3lYV240N0Z3MVZTazVCTFRNTXdoR29yNy9MMmErR1ZMaVlSYVB1YUhJY09RRDZ3T2U4VkdPL0xpYWFkVng4eEJVaVRYdk9hU0h3YXhReFhFWGRYZ1kzV0VxdGxBanpxb3RwbzlZcEl1NXEveVBsU1MxOGJhSUM4SmphOWxJRnVncDNGZFRPV3hCcC9qSnFxN2xRenNuak03MkRLN1lUUzhVOTFsU1RBZUNxakoyQmhhenNOd1M4T2FIdldGSGFWTld6OWlBVWVnVzZybzNveWFNTjhKSFVuWElTTDEzYWpCTC9CaXVXTHF2Qzk5RFhhd1RZaVRnYWVWekpxOUJiMXhSVnhPbVZHandtTm1UREZTazJNbmszZkZudHhtNW9EeVlENnBZRjdudFlyNDBYOGZVMGNTQnYxVjRJYjdPaGFpNGhIVWM4TDhPcHF3dTNOVmtJdlJJMEhGcUE0amNYUkNVbmVoOUVPUDFsM082M2xNS0xjU2k4L0lZZGlLR256cXpTYm9FeEUxTzgxOTR1T2xaeVdtdjhtMXo2aUJJY3NxTjB1ZEExdDJCKzUzaEM2bENUVTNCWHN1MXhiZVNGM2JwTzBhMWd4OUpQYlhYUnV1aEIrK0o5d1BSQnVieE9KRGpKd0cvSXgzM3V3Y3NkQ2xUVGd5d0NwRlMxNnp1dU5STXA5dDA4ektXSDhyZzNFdGFuN0RURG00R2M5UkFCMmxyZndvN1VSVzJ3MXY5MGlLNGtZaHB1WGsyeURUeUEzUHpvMTRpdHZPa3BZS0plczZCZDIxcUgzQVBudFV0bnlUZTV5VWRRajFWR2QwaVNOczJHRTJxWVpieEpZcFI0WHZXN3RVanNsaFB1MDhYZTFRNkJNUk90dWxUc0FHRGorU0lHNVFUMnY3UFFsd1ZiSzVwZ2E2UTQvWXhvSXZNODFmdVZIMU8yUE80NXE4YmlFL0UrNkFiK29yWDhwVkpEalBhbDlESHEyenFkcmkycHZGaGw1QW44V3N0dUZ1TmxMdUM3eVVKOVlXcUVBRWJCdGZBVHNjSG5sSExIK0l6YkRuRTdZM0VDbFJJSnRkMmtYTUJSeTFyTWJFd2hTTFlkcHg3WlUwVE1ybStTWjROb1A3cmJpV0dUWHhLNmx0RkZ2TXppZGlSMlkzY1UvbXVSbGRDeDU2T3gvalhGY0U2bWxGelhwV2lMSGZldkQwRk1XMDlWYmpqdkZOcHRVQStlTWxSclZRaVBnc0NLdFlPNENqdWdsd2pCUEJlMFdpMHdnWTdKaFJQRkdxNmM1MVd0RktNeGJLb1I3cWNqTjh2elpSQmpqMUxsaDRTUHhxU1dwOGc3cDBZaDVQdDc1NlVVRzFwZHpoVzhic0dMR0pMeGtpdW1wWkd3NFM4aXhMOWN2TzVVQ2pWMUNwVm9tSXJHSVpYU2xqa3dpVUMzakt6SXc5aXVyNm5GTnZWQzQ1OGFZN3hFdzF0RlorYmpsTFZjL3VnUDF5empBbnZtNTN5L0NJQWZFSzdjMnlwbklldmI5a0tPTythZ0RiVGJ4R2g5TDFFeUZtSTdoeUZSK2VEV2FFYTJWMVc5YjZEVC9pbzZUK1ZnYnpHOVROYlhMTVpsdDJNcFVSM1ZpcXZJTHl1elRzU0puVk5hNUhoNE9ONlhGbHlaUlVmQ0pHc2F5WW9NVGVUZEhFMkI3czRiaXhWVVU3RjRjUngwc01UUjZ3NXNDRHNNWEdzNDFOLzVXSkFrbFRBKzVRVnRhUTJjNm9OaUxnS1VSMUtLaC9ZTFRLb2didThBRXRCb1l0a2prcExOVVdOZFM2R3JDZm00M0ZGT0lZVlo1b1VFTW12eGE2dmtHdmk2QTJPN0hSejNCNlFuR0xzVFFCUDA1UzVnd0pJbmhUTWxLWE5Yb1JSMzFsemJOWm9OTXNkNTFJQXE1TlBQOWxTOVdWVEdxeFk5VXBtaHduYWV5K1FQRTEwWGlCQlFyTEFBVzVOMSt4Wm43bnBnenlobnNLNHFrd3BZek0ybGFXanFIbXZlNGFZZ0wrWFJVcFBtemQwQzhtN1VwYWoyVlQzZGdSOTRBSkI5QmhCZmw3d0lCWnlocjZ0YkdhUlVKRkJSc0pkL2UzaFBVb08xYlYydXdjM25iZ20rcEZOQ1BvMHM4VXFqQmcrcGR0TXM5Rmlodm9ZVU5tUkNQczl5ckZzUWh3RFBVTkZXMTNYRS9lVFFLV0l5YjJTK1laR2VKcHhxc1YrTnVEZnM0QXE1NHdncGhIUG9YNk1zUnBOeElHZlhXSk14SjB0SUFzanR3SUZlYitwbW9iZEphQUM3Q0VubWxFL0RTcDFEL3RUSC9NRE4vZGdRK1VUOWdhNlZNQ2ZTY0t4Z2xzZmxKcE9JcEd4NG5SV2NTdEx1VVM2cHJITDR4Vkh0U2ZhYnZveDRpU0k5UzBBK0FZcVBkeVJZMSt4QUhZWlJuYkxKZ1BvUDhkM29LdU9QSTd2SEZzNkprT3hGTUZ1S0RQZzBFWHJIdkJiWWc0OGwwRkdHaG5vSjYwdW9xYk9ieVZudTM4aU9zYzRWUTIvTUFDWk9XZVAreVFjcUUzNG1KNW1nSGZIQi94SGQ1TEkrVGR1RjFXRHZad2svQXVCRnl4SWt2blh0U1F1UUZmVWdOc2F6a3YwYVJmQzgwZExNRGVMSU42Nk55S0FMSXZ4UlhrNGtRYURsaWR3eU52MEFCRmxwRkhVTmJVWjF6YlhqU3A3Y1pBZWJSVVVIZWNHcWZoUlhpYXhDMjhPUjZQdFVZdU11MGNBYjlaVVMxREZYUU5iK2F4V2pyTFhlM1hOQUNrbXdEKzhPUUZNUEVkc01jTk1PV2RONk9tcG9aY3UxMnBqd2ZoWmJOY1MxbW1xL3Q2NHB2SXM3ZkY0bmtzamp4a2RYeVBqN0VKN3hrajQyR3pOampLNnN6ZU5TdVFjWGJiY2c0TmxXY1FReVBueEdSYTM3Q0dOd3owZzhRbGhnVC9KNUJqWUxjRkN6ekVqdjRTdHhBUFFUVmdqMUI0anhzZy9jZ1JqeFFsTjI1QkxpeDlLVnhITUNzRTNPMGZpemF5ZDJJZUFZN3hDNzY2UnlrNWdxNTlodVNZVXo4dWw5Vk5ISXZyR24yNlJzRnN0a0dycXhEc0txM0lpcmkwNHFOZWJEM2ZpZUh4c21xTlg4UjRETU5mN1pPZENZTVc2UWJOeE05TldWbjBoYWx1TlpXdnN5UHpuK3RqS3RrOWFzKy9MbDgvbkcxN21EYkhyb3FTQmVscEd2N2NmenJjOEtwTDI5dVpyTmJUNjZmSGpQSlAwNXNuMDBEUFB4dXpuOUVIaXF5UENIMjBqVi9zRHgvKzh6R0FlL3JUWE9mUHhPWkg4dy9FZnpmeCtUcXhlL3JUMUFmOXpjam50eWVkdC9zTFVEMUdOdTBlenVqVC90QisvbFhuZTlpYVBlVDV3L0RuNlhHcnYxcTVqN0dkTlh1c0hyTytiMVBKejJWYjVXMVJmcG4xUGYyTFdlei9mNnIwOVB0L0E0UC9NNW1WRndBQSJ9.Qhb3ro_l8TDwaRriUsrRCwYx8bVIdu7jIqdnCPKKD8p2UeyWQNIANjnQLuo1fg3n117bBSs0DDLl_BRKJds4Dw</con:value></con:property><con:property><con:name>Security Updates - Change Security Answers</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWk9qT0pMK0t4MzE4VzUyQW9HcEx2ZW5hOHlMalkxY0NMMkFOalk2TUdLTWpjQ1V3VFptWXY3N3BidTZlMmRtWisvaXJqb3F1aVJTVXI3bmsvbnJVMzRacXRQNU1PWEQ0ZFIrYWZPbWZQcjBsSlRGNVh3WTdoOVlwL0toN0o5KytoUGRRVDE5UWkvR0RIMkVmOGhHSDYzbm41NE9xbXdIT1BYMDZkY2ZmMysvY1h0cnkvT0gweThmV0EvL3UvbVFmOGhiOWNIZE9sOFgzeDU0bkNtK3Z0QS9mZnI3cjMvYSszNFhIUHFpL3VyUSt5NjgzbDEyK2xEOGMzaytqY0RKcGRtVlp6aVBQcjdNbnczYm1GbVc5ZkhwdDUvZysrRUtZbjZqYnk5YXcyWS81TU9sZnlqalVoUmwzLzl5MFVENzczaDZpUFYvWStvQ0o3NGRWbmw3dU9lNk9lME91dnl2MitGY0Z2bFovVnljbXY4YmQvOTRmQ2hPWGZtNC8rc2YzOWxiVkhtN0x6LzhzT3ZudHIrVjU0ZGRnWXZyb1NpL2ZEc0hTbTlLc0RUWTkrbDFtOURmVVh5WDlLdExmTDhwdnBUOVE4cjNDNEVhZHI4MGVWOERKYXdlUEgvNW8rdlU1ZjNCOTk4WElDTCthcEtmUHJ3K0RQUysrQWVjYXZMeFMzRzZ0TU83dUQ4OTdjOTVPM3daN2lEUXcvTm1MNy85NDl2ZFA4UTlsLzNwY2dZMnkxWjFwd09RZitNMy92d3dTZkgxdnQvNWdHRll4dTkrN0kvV094bm84blQrK3NyVDU2K3JUNkNzKzRmdlh4NFNQa3o5djF2dVliaVR1aFREKzJVUHAzdmYrL2V1K05QVE5kY0g5YTZuSDNMc3o2ZEw5LzNCbi8vajZaczZEdTMrWDJUMXFmbkJMYStsUG5VTmVPRFRiK0FRNm5KK3Y3QXZpMU9yUVBlVzhlQ2pQSmR2bDBOL0FNLzZnNEVleXZ5cnBQQnVpWDlOQSsvNy80ejk5L1UzdTd3di9wV0Y5LzMvaVlsM2l1SmMvZ2lpSDllVlkzYzQzLyt3OVVlMkhvN3kvY3Vsei9mbEYzMW9Eais4NlpkTFd6em9jdjI3bVBwZFNPSHk5bkJDZGROZnl2TVp2T0c3dWQ3cGZ2ZGhLTWNmdHc2bnVnUytuOHA3V08yQzRyQTloQ3Myc1RFNmhQT2ZZZFBZbVlQZUhWYlBxM3B2RklaMll1Wi8vOFZjbjB5dW5UZHFoSWNOeXN6YzU4K2lJWG14eE1kZE04UzQxVlJONUVJRmVZdWIvWmsxWFo2bmZzOE52STdxY2JHeFNJZ0RtNVZCZGw2YitKUTA4MkhIMUNVeVE3eUZOM2pOYnNwM0dGLzBWejdGRStXZlI2NlZKQTN4SlplQ0lCWHR2SUhuNElsSllKOXo1Rm1GdTdweVF4dHFValk5ekdkY3pHWkpJODFkNmxEbGhUMmx0VVU0emd0UENsN1ByRFZ5TG9VTHZQblZhOWFFZmF6RFM5UmtOMUVQMjEwai9Td05TYzVWVFQxNUtybnVpMk1ZcTJNMHJnM1VTRXBNNmE1R1pmUlg1YzBua05mZkdET1RtWDRzVFYva2FiZktoTndTWXhDc0tlNDV4eEV6N00zR0NsOXBEZktheXRrZHE3Q3dmQmFaZUl1TnNZc2E3U1dtSFdVQ2JUUE9wOEpFTmhOalJtcy81aForbFdZVmNqTzJ4SkxFc2xVSnRqQVJOZW1MeFpCc0YwTk0yY2c0NjZqa2lwTTZwRlRNbmNKeWNJUTRqN2xhUitubmU4RTFBYnN3Z2xZMlE5M2IycW91Y2VNM2tuR1JCQ1RJbHh4Smk1OHBrd051blpEejJ1SWUzM0FXVmd6SmhoeTFuM00vRlI3YTBBWmQ4eUM4WUYrZGNxdXFlT3RmMVpIZFJkcjU0akRITkpqN0dJVjVyT1VvZFRialZGMlVsbWw4ZEliQ0Q3Y3MzWTlGZWhyQlJsNittQzlVV3FHc1hkMWpnL2lpbG9JWmhpbnFlWmd4ZVdYMXlSUkxrTm9iemNpYjl6c2VHYXJWbUFreVJlbitSbmgxVE5ob2tTWThpYVZUaVdhWU1jdS9ZeE5KckVPUGUvaUU2NWRyemw3T3RNRzRPRllHM1BBSytsOVFFMFhSa2kvanBqZDNRanBsRXk2MkNkZ1ZmRWNkWHE2NDVzK2d0NVJyYmFuZ2RDN2RLa3ZjME5xNjlUWG4wdDVNcXFOZWZ5MGFmT0tXVDB1Qk1FRWtVQ0s4WWpOTXRxNXpKQXluR3hORUVTVEY5ZUNCSHFiaVNEeHU2cWIwOFNJelNVVHA1M0hIcFZPWTZyb3ppeXV0cTB1ZTd1K1J1emR6QVRwZitnMXA4Q1gzeUNacWtPQStubkpLTmpueUc4cmlNZkd6c3d6MnR3enBWYWFyUzRGV0kyZlpMR3ZqVzlUcURtUWRxVEgzc090b0duUUllNTdCdEgvallqUlVHcDJUb3d5anBwaGkxRFVacW1jMDhCRjFjWnFJZVZjZW96dXhxaXpuZXNQdjg1eWx6aVpQcFM2RnY4aXRjRkRhUCtDalArYkI3VXdYL2JRTnVvUHd1MmV3ZVY5cS82M2dwenV6NUhWajZsNlpNc3lRLzd4QjNpejNFSTRNakVDbllKK1ZTYnpoU00zNWpXbStqdGdNSmE3Q2ZERzR1TTV1cEZZSFVSZVcxS291am5pZEdQc3JPNUpaemxiWExkVkxicEFtQ25TUFhja1V4MkpqRHBPa3haMEg4N3Z5SVhKMHQ5NzYzVlJ3bGNkVTVkZ0kzeUx0bURua2d4anVvbG91aVlzUHBPYVZDbFM0c1Q1UHUwYkxEU0xnMS9vdFI5VmJwc01EWVhvamx0aUlndjRjQ1o5dFBWNFRjK1JycTd1VG1wbHJTMjZVNTcrcHhkd1NBVWwzZnJWS0dFTVI4MmxrZE50Y29JMXdNUWRaWnZsVTJGRnR6TXBnaGpKTEptd1p6NUpsV09mTnVKVTFtdkltdEZsYmpiemxobUF5a09aOHpkbnN6STZLRmtmOUdnVytvQUh4RkpVVzlUaFhESHhDa0o2NFBvUGNkWTFxTEloMlBDN1lsRnQra1Boa1FUWDJDellZcFZZVFhZYXVGRldlNkc2NTgzbkNrbm0zbmtKT3AvaGM2TnBTWUErNTlHem00bGtHK2loOVo5ejVUcFBVL1l5YkpOOU11dU9CWG0ybTJOajY1Rnh3M0dkaThCSXJkQlhrUXE1bGdKbDhTNWJhajF6NUJvV2pvd2J2Y3pFc1NrOVpISjJzWElldkdIVjlaS2xic3NSblNhTVpOUXlrbXJtMU51MVQxRUFhYk95M01wVUdiOGhJcGlxU1I0V2lvMmVCM1IzT0hRYitIT0hEaTFtNnFwZHVaU2xERFJpeXNxaVp3VkRZRUhBemZoODA4UCsyODZxeE1QVzRRYzRxVG9zemMvY0dwZVM2MC9GWXVHb3FVbktKYVJqbTRBM0ZmZjZzSm43WlVpSWhsNC81WWNnd3hBT3J3MTZ4MFk2OGVOcHAxVEZ6a0JUSk5hKzU1SWRCN0ZBRmZsYzErRmdkSVdzMlVLTU9xcTFtRDUra2kvbWJ2QStWNUxXeE5zaHJRdU5yR2NnVzZHbGNGMU41ck1IbXVJbnFiaVVEdStmTURyYk1iaGdONzFSM1dSS01od0p5TWphR2x2TXczTkt3cGtkOVlVZHAwOWFQV01BUnlKWXF1amVqSnN4M1FrZlNkWWhJZlRkcThDdjBNVmRNbmVmUzE2QUgyd1EvR1hoYXlhelpXMUFiVjhUbGxCazFLanhteGhRak5UbDJNbmxYN01sdFpnNG9EK2FUQ3VaMVhxdUlILzNubURxU01LaXZBamZjMTdFUUZZOGdueFBtMTlHRTNaMnJnbHlNSGdrcVJuVVlpYU1Ua3JvTHBSOTZ0TzV5WHM5alFybVZXSHhHRHNOVzFHQlRielpCbllpbzJXbnVFeDh2UFNzeC9VMnVmVVlOREZGV3VWbnFITml5TzNDL0kzUXBUY2k1S2VoenViYndSdXJhSm0zWHNHYm9JN0cvN3Rwd0pmendtWEEvRUcxc0Vvc1BNWElhc0RQZWViTnp4RUtYTnVISUFLc1VMWG5MNm81SHlYeTJUVE1yWTlBcUJPTmExUHlHbVhKd001NmpBQ3BLVy9sUjJvbXN0aHZlN3BFVXhZMkNUOHZKdDRHbmtSdWVuUnZ4RkxlZEpTMFZTdFoxQ3FwclVmdUFmZmFvYlBrbTl6Z3A2eER5cWM3b0VrZllzTU5zVWcyM2lDMVRqZ3JmdDNhcEhKUERmTnA1dXRxaDBDY2lkTFpMbllBT0hINGtRZHlnbnRiMk13bHdWYks1cGdhNlE0M1l4b0l2TTgzZnVGSDFPMlBPNDVxOGJTRStFKzZBYmVvclg4cFZKRGpQYWw5REhLMnpxZHJpMnB2RmhsNUFuY1dzdHVGdE5sTHVDN3lVSjlZV3FFQUVkQnRmQVRzY0huRkhMSCtJemJEbkU3WTM0Q2xSSUp0ZDJrWE1CUnkxck1iRXdoU0xZZHB4N1pVMFRNcm01U1o0Tm9QM3JiaVdHVFh4RzZsdEZGdk16aWRpUjJZM2NVL211UmxkQ3g1Nk94L2pYRmNFOG1sRnpYcFdpTEhmZXRDWmltTGFlcXR4eC9nbTAycUErUEVTbzFvb1JId1doRldzSGNCUjNRUTR4b21nWDVIb05BSUdPMllVVDVScXVuT2RWclRTaklWeXFJZTYzQXlmMXliS0FLZmVCUXNQaVY4dFNZMXZrSmRPek9QcDFsZXZLcWkybER0OHk1Z2RJemJ4SlVORVZ5MXJ3MEZDbkdXcGZ0MjVIR2owQ2pMVktoR1JWU3lqSzJWc0VvRnlBVStabWJGSFVWMmZjK3FOeWlVbjNuU0htS21HMXNyUExXZXA2dGtkc0YvT0dlYkUxKzF1R1I0eElGNmh2Vm5XVk02ajlwY01aZHhYRFdDN2lkZm9VTHArSXNSc0JGT3U0c09Md1l4d3JheHV5MXEvNFVkOGxOVGZ5bUIrZzd5NVRZN1piTXRPcGpLaUcwdVZWMUIrbDRZZEtiTzZ4dlhvY05BeFBhNHNtWktLVDhRb2xoVVRsTmk3S1pvWTI0TStIRGUycW1qbjRqRGllSW1oeUFQV0hIZ1F0dGg0c2JIcHZ6RlJJR2xxd0IzS3lob3kyeG5WUmdROEJhOE9CZlVQakZaWjFNQWJQcURGd0xCRk1pZUZwZHFpaGx4WEEvWnpzN0dZUWh5anloTU5hc2prMTBMWE42aDFFZVJtSnpiNkdVNVBLRzR4bGliZ3gwbktuQ0ZCQkc5S1J1cXlScS9pcUsrc2VURUxkSnJscmhOSndMV0o1Nzl1cWJxU1NTMTJyRHBGaytNa2pkMFhLTDRtR2krd1FHRVpvQ0QzNWl2V3pPL2NsRUhlY0UrQlB4V21sSkZaMjhyU01lUzh0MTFEVE1DL3F5TEZoNjBiK3NXa1hVbnJzV3lxR3p2aUhqRGhBREtzSUg0UEdEQkxXVU85TmxhelNLaW9ZQ1BoN3Y2V3NCNWx4NnBhbTUzRDJ3NXNVNzJLWmdSWitwbENGUVpNLzdwTjVybEljUU0xYk1pTWFJVDlYcVU0RmdHT0liK2hvdTJPNjhtN1NjQnl4TVIreVR3alF6ek5lTFVDZTN0UXp4bGcxUk5HNFBQSXA1QmZoamp0UnNLZ3JpNXhSb0tPRmhERmtSdWh3dHpmVkcyRHpCSndBWlpRTTQySW55YVYrcWVkNlkrWjRiczdzSUh5Q1ZzamZVcWc3a1RCT0lIT1R5b05SOUhvT0RFNmk3alZwVnhDWHZQNGhiSEtnL3d6YlJmOUdGRnloSngyQUJ3RCtWNnVxTkdQT0FDOUxHT2JCZk1CNUw5REwraUtJNzlEajJORHpYVEFueXJBQlgwZURMcGczU3R1UThTUjd5ckFRRHNEOWFUVlZkek1vVmQ2c2ZNanJuT0VVOW53QXd1UWxYditzRVBLaGRxSWkrVnBCdmZtK0lqdjBDK05FSGZqZGxrNTJNTk53cnNRY01XS0xKMTdVVVBrQm54SkRkQ3Q1YnhHazM0ck5IZXdBSDJ6RFBLaGN5c0NpTDRVVnhDTEUyazRZSFVPVGQ2Z0FZb3NJNCtncktuUHVMYTlhRkxiallIeWFLa2c3emcxVHNPTDhEU0pXK2c1SHMxYUl4ZVpkbzZBMzZ5b2xxRUt1b1kzODFndG5lV3U5bXNhQU5KTkFIOTQ4Z0tZK0E3WTR3YVk4czZiVVZOVFE2emRydFRIZy9DeVdhNmxMTlBWZlQzeFRlVFoyMkx4TWhaSEhySTZ2c2ZIMklSK3hzaDQyS3dOanJJNnMzZk5DbmljM2JhY1EwSGxHZmpReURreG1kWTNyS0dIZ1hxUXVNU1FZUDhFWWd6MHRtQ0JoOWpSWCtJVy9DR29CdXdSQ3YyNEFkeVBIUEZJVVhMakZzVEMwcGZDZFFTelFzRGQvckZvSTNzbjVoSGdHTC9ncTN1VWtpUEkybWRJampuMTQzSlozY1N4dUs3UjUyc1V6R1lidExvS3dhN1NpcXlJU3lzKzZzWFc4NTBZbXBkVmEvd3N4bU1ZL21LZjdFd1l0RWczYUNiKzFwU1ZSVitaNmxaVCtUWTdNditsUHFhUzNhUDIvTXZ5N2VQWnRvZHBjK3lxS0ZtUW5xYmgzL3JQaHh0ZWRXbDdPNVBWZW5yNy9KaGMvbWw2ODJRYTZPVnZ4dXh2NkNORjFpZUVQdG5vNTQvVzgzOCtCbkJQZjVyci9KblkvR1QrZ2ZpdkpqN2ZKblpQZjVyNm9MOFkrZno2cFBOMmZ3R3F4OGltM2NNWmZkb2YyaSsvNkh3UFc3TUhQMzhZL2p3OVh2VlhLL2N4dHJObWo5VmoxdmQ5S3ZtbGJLdThMY3F2czc2bmZ6T2gvZjlQbFo1KysyOFJrRmx4cXhjQUFBPT0ifQ.AzolvG-wchShYajINq2myESbuocCGqF4KNJ9Zrl48tkGDEt7v3O2O9ESad-yjkIUcc79ltqx2gwAUXVBTtxQyA</con:value></con:property><con:property><con:name>Secured Demographic Updates - Update Phone</con:name><con:value/></con:property><con:property><con:name>Expired Anonymous - Anonymous Services</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFMVlZXMi9hTUJUK0s1R2ZOcTFEdVVCTDh4YjFKclJSYU5QdFphb2lOemxRcjRtZCtVTEpLdjc3amlHa0lVT2FOQUdLaEgwdTN6bjJaNTN2alZDam40Vmt2NmxtZ2llY0ZrQkNFbkhCcTBJWVJVNDZBU3dqb1RkMEEvL002d2NEUHdoT3ZSUENNdUNhNllxRWI4MTZDelY1NVNBZE1YT2lOQVdsaEhRdXFhWTFyZzFOMThDS2hEL2VPcmFtbXpvenlmWmxicXhZdVRSUE9VdWJMZDFtMVNoZng3Zk8yT1NhT1JkR1N1QnA1ZHdpd0FJKzNFVWZMV3JKa29MK3hJUUZTSVhBbU9QM2xyMGwrbFFKS1p1MXdFZmpxeEg2ejg5ZC9BMVAvZjZaTnh6ME1iS2czTXhvcW8wRWFWc3Z5eHlzV1dTUTI3MDNHSjZTbGExV3R1cTRQUTgvak1zcG54czZ0LzBDbjZPaHpLbWVDVm1nZ1UxaU5GeVBScGU0OFlLK2EzRkt5UlpVUTkwWU4zbU9ScVdwUnU1Q0VwdjFKY3hNVGxhUDFwR0tFbXovNjhWZmJEc3h5QVhEREh2a3pUS3BVNUNjQXZBaElQM2s1dXFoRlZDRDNJQ09JWldndjBDRlhpUHRiYW9YOU9ET2RwZnNQcVFYcUd5SHR4R2U0bC9ZMTBMT2hmNkcxbEgybmVZc1cwTk1xVVMzeGt1ODRzK1VwNUFkcCs2VUt2VXE1TDdLeHlwc2ozb1BjNmEwWENjZjZkRFRTYnluK0FXVldaUnErNjR3TjQ0UFhxQk41OEhCNjZ1Q3ljTTBIaCsrOXk0emgyWis5L0wzOEI3SFJ5Tis5N2tmSEQ0R252MFhLNDkxUURPOW10RnUxYWlXaDlDSmVPVnNQZnRHYVN0cnQ1YkZhTzgzVUtnWG5TUXBqR1lJRlpMN3pXb1RHRTJqQytjdWFnU3VrMVYzVFdMNy93Njl3bkdjbWMwalNoU2tnbWRxTGEydUhlb2c0WmRoaXVGazc3UnFSL3dKd1VIYmlKOEY5MTF2K05rTlB2dG5ENTRiQm9QUUQzb296WitzUEdFL3NDeVpyUFlGZTZIYkRkN2xRVmZsdXdaYjRoVGVhWkt6Z3VsdE16UERVeHRMODBZZk95cTFUNUJRRkxQWFBBRXByVWFiNHNrSzVnYXc1ZEN3Yk9wbzhRS1dMTEw2QTdPaCs1bTNDQUFBIn0.K2Xwu9dDebbNw3hb1g4N0QQiGDRlTaym_fX_iz5MfsdNQB_Z8iTxED9iIiJa248iv0kcxYLAQ8lnO0JVqUDXZw</con:value></con:property><con:property><con:name>Expired Read - Main Screen</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFNVlo2M09qT0JML1YxS3UyaTk3czdNODdFeWNMM2V4QWNjUDVBQ1NzTm5kY2dsSk1SZ0JIc0R4WTJyKzl4TzJremk1M094a2RpYVRxc1NXNk1kUDNhM3Vwdk9wUVZaVmxCZnhqbFJ4bnMweWt2TEdaY1BsaERYZVBYc1dzOGFsZXFIbzJnZTFxYmMwdmEycjd4b3g0MWtWVjl2RzVhZUg3L2RTeHV1TUYyZjU3UmtxNWFkQktuS1VXWlBSdmRDeWNmbkhwMmQ3OSt3MTE0eTl4SFhZbFJxWHExREU5R0c1a2h4SFprYXllRXRFbW9leDRQOVp4d1ducEdEdmFaNDJQcjlyTEl2NGpsVDh5Sml0aEpDYlpVV3FsUVRVOEZhVThySzhYWW5HNTcvcUJ6UmY4bHIrL3NzOVBKdkUyWmxIQzg0ekNWQnF2b3NwbngxcDVhRlNMbzBuVGRib21mQ0U0TWpkNDlWTmtiTVZyVzVJSWJjcVhwUm1GcEdNOHRyeXF5S2VwYVJNSktWYzFUQm5UNTJSOEcwTjlZK2prTDd4bHp6WGlkS2JzZmVDVmh3WDFZcUlyalJGdCtEU0FxOVJWWE9CVlJyeTR0MlpWTHZaSGhiUEZMOTRXaXN2NW5sMTB3ZVlpSmp0eFQ0ZSs0MHdHRGxkcFRLR1pwS01ITVBxUk8vN1gvLzk1NSsvLzBMMnJzOExHZTIveVBWaDkvMnZYMFFGcnI1Q3ZjY3JUd1lZcnlFWVA4VHlMN3U4NXIyaVZSM3ZVcVRudlVMdlY1M0xtcmp5TkI0bkJZMit0K3dIZy9XejI3eEk5d0xzbGFqaTdxb29lRWEzMzhHSTc4NnVLTTFYV2ZVS205YVp5ZVh6dUt5S3ZZNS9jTzZYRlJ6dkN5bkxkVjY4Smg5OGxWbnZiOExiWGdDWjhXQkJzcExRbXZWYUdpOHZmcndEdjVDT2FpLzIyVXNaNlJzUzhkZmRsU2R1ZlVIemoxSXNiZC9GM1RkS3RJZGM0Qk1oZUhWMHpVKzZwMGNMOHpHODhlelhaTDUvY3Z6bnllRXRBK3doWVpZbkdmTW5HZi8wa24zM0JPbnhqTDJwVitzYkpMa04yVHZFNGxzYXRlOW8yVnJVS0tjSnlvVDg2L0tQSzE1K2p5djIyaFlTTGRrYk5qSW5sL250Zkg1U3NRNnUvMGt1OXpWL0QrV1dGOTA4dTQyTDlPZFVUbWtTajh0M25tcklYMU83dis1U0grTHBVRGh1aWxoS3FYNVdoL2Z3d3ZKVzBkM2o4bDM1UjBYMzM4WlVQNHVyV0dwL3M4VDJZbkRWa2c3Tnc4L0g4ZmpLOUVMOTlyeHZMT0IvSFFrZUpncmtnRzJXN2NGSktsVlJkT1hrcC9WQnI4Y2ZqMDI1cExuYXJ5N1Byckx0MmYyVEdrZzlML243OFVjOS9kalBEQTdDMUE4WDdjUGVabnNDUSs2ZUt5MmxxZXY2Qi9sWWtHeStJdk5hTk0vbVR4RTlQVzZONzNSOWdEbXl3VE9tSWw5VnNSUjEyWEFQM3c2RVZ6ZFgzVFBuNnV6cThWeW5YRWZETmJ6NjgxSDA1OC9Tc0t0RHZ6VXJPYzB6VnU2SFZVcDlNbDdJRWhtWGNjV2ZRLzMwNHZpcm5nZTlOUHc2N0Q5T3ZBN3JJNlRENG45QkhQYS9CT0pBUWV0NXpIRzI5U0NPYjVaeHNYMnk5UlJXdFgzVXZTcWxnMllpVHVQcWZ1dDJsZTFyRnhFbm82NlRTUmZnYTJuZ2xLM0ZqQmVGTlBGOUFCem9UaDVVZlBNZ3Rjb1RYdnVaYndkUjJLUHhPQjcwMFE1dDdIalFmaTgzbFZDclJCajN6L3ZKWEtHSzZEakl1disxc1FnbWR0eU9JQnFnb1ZLcXJoYU1LYlJNaG5FWEdsRnp1ckNHVkF5OEtXbzV6RnBHb1NiR1BOMjRkT0ZXUWJmQzBGeU8ySUxxSkJYWFJCRVlhdGJZUVd4RXpQbWFRWEFlTGdZRVFLQVJFUmdrYlNvNHJUU1FicXBBRTJLcUJJV1RBQ3RNb2k2Rm5ZR1BCeGdZUVFmcDdHT291b2x0bW5jalJkR1lCa3gwelhLb0J4NHlBV0FJUkVDSWpldjNtellNREM2bUtzQ2dFNWpxRkVwOERtWWxNU09YVGF6SWg5WTIyRmxqRzBhR3AwWG1TTU0zTkxXcWNMSzg0NWxJL1hRVDAwa1VNT3hLMlczTS9JRWRHRlpsWTVBSDJWd1Brb3N0VkVFRTFVSGlxa0Ixc2lzMXVHWkxwbGlENFE1WTJBOXNyQStHUkd2YlF6MGFJQlJBRDBlZEVMVWRXOXRzN2Q2NkNDMXI2S2xMMVo0d0swaVhHMjdPTmI2WXQ0SnV1MlBqcTd0Z0VSQ1lSZWUycWNhZVJuZHdFdDFSLzJMdCtwWlA5YURGcjhVT3F3d2kyTmR0QTF4N2l3Q0dQWE9EZFZlbDBIVVFuTitSUk4zUlhxdEpkNEV5Mm5XTWNCSGNrT3ZsS1BTeGdWTTFDMVMwSWFqVjQ3amowUjVTeHBZWURUVno1eVpWQzRrbFJqQlorNmk1azdnOWl0a2FaVWgxRkx4bTB2OVRQUUs0dDRtUVlhMWRwYkxDU1g0SEZwRWZwQU9UNmxITHdaSHBtcEZHOUNYeTlBNEdDQ3ljU2RBaHBwQTJLRlhwaDl5Vi9uY05NSENVOXNBWExHT0xqdUdLYUltdTNYanF0NmRqMURhaDVxNkRERGdVVzFPS1dNdTdkcHV1aHBTdzJ3NXMyTEdoRnFVZ29adlFuRy9ERkFkVXBXdVlxQnVNN1IzdlZlclljSGRERmE4QnNoTGFMVFdNS2cxUFRCVWFiQ1J0dUtaYXZndlZ6Z0trNXRvM3dVTGFQWEV0RjA0enNSb3ExZ1FMUmxCbUZtRGg2bkRoS01pS05rN1NWTWRtMUpYVXFxT0xCWVNkUHVtV3hYaVNLRHlkYi8yNGJJMlU5VzVzOW5YUEdyU2dYQU90U2ozVFVWeXRwZGxXTkFKR3NrSEl2Um43cXVKbWFEUDF4WVFZd3ZCU2ZJUGxlWVBNdlo1aW9ORE1VYWRKRU1IZGZDZXhaMzZ2QmRHazg5RlZ4Y0FWU3h2b3k0bThGOWN1SEh4MHR0V0MrVmFHZEZ6WWVMckRGclBCdHEyRGhkRERoQzFDMzE0VEFYS2tWVm5vdXh2WU03Y01SU0xVcU9LbmJrNG11RWQyVkVlWjVZMTBObVFxN2s5VE1SeWIwNVlOTFcyb3RBb29PaHJydFV3QTNkaEoydzVDemk3VTJ1ZCtYTzJReWF5UkRneU9sMXRraVY0QWcvNDBjUk9nYlZ5Y0JpV2JNREpkdURudTRjaFBxdk5BeHlVejFYTmt1cGhmdS9iWTZBUkIwbTdKWElNQUdyaHVzbkY4cTlOeEo1MHQ5cTBZWElQQzIrRnNPcUZxWUFKOW1yVFg0UzV5UFpYWjBGeHJEbVEzMGc5cUNJRlI1N0orcHJ3ZmFwUDFxaTFmQ3NNUXJQVW9WT2ROb0RoTzNKT1JCc2sybmQxT1p2R3VaZCtXRERpZFdYQVJ3NDFwdE9OK1BDQmE4eUsrVTJSd1RVZFh6b1hJeHNvQWYwVEdKRmpYLzZCNFZnMGFtcUplL0tib3Yya2ZvS3BjNnExTFRYL2YxdFYvMVMxQzQxbWRlRUtzWGlyUGlWK3FJTWVlb3ZGMVZlUlRRK1R6T0p2ZENsSVg4R2FONEVuNWFOUjZySDdmcUZzSnZWbXY2djVqcjZ3dTQveStmWktQRy8vblh5L2ZYcGNhbi84TDM3SEJTTmNhQUFBPSJ9.-GsMiM4ljcNz7tI3Rbnix7jZHKfWpFkmLwksqYjQEqoR4g8nKYeqtXVz19Qal0SYqxYAB8IwLIYvSM9DaIvv1w</con:value></con:property><con:property><con:name>Expired Demographic Updates - Update Profile</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWStqdUpiK0s2MzZ1ak5YNXEyNjBwOXVVV0FJRlp6QytBVjhkZFVDeklRRVE2aUVWSURSL1BkMXVucDZ1dnZPN2tvYktRS2I0K1BqOC9yNC9INVhYTWJtZU5vdnhiZy85cC83b3F2dlB0MTVkWGZjbllxaDJWY2Y2Q0NMc1Q3Zi9mSVQ2VjdlZlRJZWdHVitOR3pMTVczSHZ2L2xiaS9yZnR5UDg5Mm4zNys5LzhsMGUrM3IwNGZqYngvb1dUKzlZaXkrOHJ5UlZWK1ludTgrL2V2M24rYitYSDViOVZuKzNhcjNXYjNqY0NuVnZ2bzJ2T2dWWHhmTG90L1BoZXFPNVY3Vi83enVUM1ZWbk9RL3FtTjM5OGN2ZDhOcC82YlArSFZoZjFGS1Q1N0hZcnhvZ2U3U1MxWFY1L052RjNYM3g3OXZINnJqVU4vNGYzbjVKdDRYTlgxNE9SMS8wMXRvR2ZYbWIvdXEvdnlWWEorcnE3WCt0TmJ1WHJZcCtZN2lCdzVmR2ZDOXByMk1MODJ4dnpHN25QYWZ1K0xjYWpJOXVzbjUrVWRydFBWOGsvVmZUL3BZNk5LVjllbVhteXpUL0Q3NHR4Yjk2N3B2NGhkVmRiejA0K2YrQzRWZWJBQmdnZTkremtmcnB1c3ZweitldmhqODd2SEw2Tk9IeDM3KzhPZVhtM3czNC96ZnVyNnAraWd2MWZqT3pQajRzSHFmbStidnhOQ3o5OEFCdG1WWkgvVm5WZlM3UzdHN3NhNzczWThTL2FpRm0zemZqOS9GM01Ub3AwVW5yZG05WnZYcERyKy92Uk0rdmp3K2ZVZ2VQenorZGE3dlYzMVYzRjE2ZS83RitnL3RFdkp5ZWpmRHVhNk92ZFNXc01EdFhQV3BmcjNzejN2dFd6OEordnZmQnQ3TjlmNHV6dDduL3dxdTkvRlhnZDRIL3luQysvei9Kc1E3UlhXcXY0WFJOM2IxTk94UDh3OVRQNG8xem4vdGZUbHI4M3hXKzI0Ly9qbjEyNld2Ym5TRitpNnF2Z3NxVkYrMWVqdDVWWi9yMDBrcitFL3p2OU45OTJHc3AyOWN4Mk5iMzZ4Y3oxRlRCdFYrdTQvV2RLRlR2STlXLzlDVG9EUkhWZTdYOSt0MkJ5cWczSVRDUC8rSXFhTVpnOVVyQVZHOE1mSXB0ZWhja05hcUZvbTJub1ExUjNGc01qdmg2RUE5NWlZR1dram50TGtwejJscnBBSkU2d3BnbTVOb2ZsNlVUWmJvVkhldG9YbmFoWW1Ibk9HcE1sQ0dXcU9sSG1waWkxMWx1N3BTSmdyV1RVK2liMTVMR05sbEgxOXJQcHJFbDBWdXVPZkN4N2xnYmw0WmN0a0c4Q3d5dUM2WHFCY0VUbmtYWDJYbno5VkIycVcxQXpFZk9Uc29FeStzRVhSbmJVeE02cEFaaE9hek9GQ0xkdU9FT0d5VGRyeWtCc3U0Y2xQWllVK2ZyU3ZiNWhwM2liVk5SeXNtUHFpSnNsUFlDQzNUeEVOL3dqNTFNS2lNd216MC9IREtNNlZ3aG1ISlY2cjJjTEpsZ3kwTkhiMis5R1VIQytSRlNYVlFNL0dWaVlMaHpMekdTVHNGQ24vd2NqVXdac0V6WlpodGZkRXcwc3pwMHVTY095RWkxVnRGbzN2YTVYWVpyazhiQ3kxYjVqN0xsczY4bTliSnNnTjFpM2pTUTdPMDBMWHNkMVBsc1FZckZKZUxlMkVCM3BlbTBTV0FBc0tIRm5tS2syN2NFeVptdHJBbzVkR2hZczJWZGthZ1pVWGJFTTkxQnAzVVpOZWNSU2h0UjU0dmtDYWRReEdKMHExZlhjbEJpV2R6T0JGUDZ6a2M3bm1nMnRTTUZ0RXhqM1dOeFQwb0txcDBXb3NDK1RUNkZNQnB5eUxPL2RVVFU5RmNFd3hpTlhBU2lpSU5tajMxUmJ3bE9Dc3laQ0x1bkdQaVdvS3BJZTBHVU1NRWlQUU00bENHT0pqYUN1SU5Ob1pyQ293MVllNUUyNGMzWk96ZU5rdHJvUFNzbjI0Yzk5R3k5YWRRa1BWYnpWeGVlTzFiM0lzOGhqQ28rcldSV09LUVd4R1ZoaEpWcnlCbmp6WUxWWXdzYXFOc1BSZE1wTEdXb0dMNEloV0xwY3ExMzA1ajFRME9hZGVnYkNNUjcwZndiTW0xbUZkWmZWaGJ0ZDg2RWt4TEdjRFhnc2lwTkZjS2MzK0pseVpNU1dXam5tMElnVGt6QlV0TjRPUnNjQVJyN2lVZG5kUVNBcVdyQTFsRWpsVjBMMXZrbE8zVXNrTnVwOTNPMlFZVEwzdXgxMmZhODBCNi9OQmtTUnN0bFhiRE1oTThwM0xZaHFLcmV1MXJCK1lSRXc2YlpUMnpEQlZJUlF0ZG1sWjArRXhOYkFqRjFocXZUR21HOXVKcEZjUUdibE1MUnlLSVFkSWFSMEViSG9jRGUxN0VOUTVRdkEySGNPczFxbFpOUVR6Nmxsdml2dXkvK0xxcnozL2tiQkJsS3p1aWZWWHNINjZGYVM4eGlGNUtIYi9FaTY1c1B5NTVPOFFGc0djV0NvaUNhY2t6ckxiOFlXWjl4Rkl3SHRKZXZURnZaMjdBbUtTTGIyamZjdVJCMndFcVFnSjh5bHZuTmRWK3NURWRJTnFkUVMyRVVVL2Y0bUEwdHRuQU55QTVNVU1HVy9Kb1M1TE14Rk12QWpKYThwRVVod2JFcGpOV3JjcGorbURKL2RtZ1lIY2lvY3R3MEJnRm40NnBCWFBFNUhGakNrdGE0cGt0Ymh1YlI3djBZb01lM0R4ZVlwc3JscUNRelF6STY4YUtiZVpGK3R5WUYyWmxrYjZ5TjJCbmkyN1liQ25UdnF6bU9oUXhBZXUzRk1LVG9FTmZkV09QbCtqbTRZR09xYk9PZzVZWXphbDZXdW5ZWGR1NUtWNWpiMjFvbTE3eUxIS1E0YzVWTzRHNHkyZm15NU5ZVkx3eGJXc0wyV0dicnRwQ3VYNUNwQmRUMythZVBOQ0FGV1dQUEpxZVRhRjlLdTZtU1dTNW1leFhaODdIc0U3SFNMWk9RMXJ3VmpKc1k2SVN0b2d0V2xDNjVkSXZNMlV4ZnpXbS9PcXdIcVgwNE0vY2gwbHNWU1ptNGw3QTNjS2dlOUYrZkYrUmh0ZmN5VEVYUHVtaWUzVFlUYW4zYUd5ZlZxUUNJOENodUdkWjlKSXY3ajNycVpsQ0hVdWVRcVVuSTh5YmtRZm9vT01BYjViNGlrSXhWSjJqODdmYTByQXlFVWdjWWdrWFdWR0VGUFpSWUR0SjJ5UjV1bm9pWUhBcFp3Qmx3eG92YTRjQzlKSWZXRkdIS0kvNzFxRXF5dVJOemt5UWlrOTlySFJpRFZsU2NXRklMenJyR2pIanZvRmw5MkJxM29SMm9zOUpkQkhtdEltQmVFMDZGaERsQmxzS24rcHVSUXVQTWFGY0pDeDhLQTJjeTU0VmVhOHo3eUhhMExCNVNRN1ZOWWErNWkzWGhZSmRRWFpMQ1lWWHFlaXBPS0Q3amZZbDdvOWh1Z2kvYUpXaGZVL1hQTmlYSElPYXJpS2RzL3ZTRUpzcWk0NDVOVGE1aWxBUk9KRDc4b3o3d2FoYTdYRXRkTGIrbUpVTHU4ZTlHNVlHMm1QRDNjWUgzQklnTXNxakxsbmNvS1lQYzBxbktXMmpuTVBvQ1RQVnlDQVNsRWtiWjBOU2NxalRrUTZvUUFyTTRDWmhFYVNkUE9VS3ZhRXdvdFNBK3lwelhVeWlqYTQzRVRPd20xZ1lsV1pyNHM0UmVzK25XcStsREhhVkowTmlyb3pTbkVESm5ZUE84eTAyMUZOaDdhNDZUMnhLRU5rb1ZDNERNS0l0ODFJK0tIbEFZNjBVd241c2xuUmNFbE5DeEljSnQreTY5ZkhJK1lRb1dPVXNnUGNwM3ptY3JHZmNUYTk0Y1J0c1BWNTVZQkJDd1VMYUthczA5a2gxM1VOOGlqWkdnNW4zZUMwTWhvalZiR0pWTFNSZGFUL0RJVmJEbWVzaWtYb1JsNFo3MHZVUnNKWkJUQ0JMQXpVVllEMVZwbHJpaklXOG5hNWxvSHlrN2FreGk3dk4wSnlrWTBoYmFlWUszc2NCakJJVnVkaHpsZkJaekRqT3RobGVrSm1ZU0ZmVk9GdWJxVG5GTVRzQ0NjN1hnalZoZkpBdnBGdWJQRXRBMmpNalZ1NXJSU1FRZ0tXSm9WTEI2YXpQMGdpbWZUQ1VVSG93M1N4UnJHdm1sYXRISjZjNHFBNGFEbGpRa21ZN2t3NkRoRUFibWNwS2dFeDBQZlVGRktyMDNEVmo4RUwyWTBwYmU2R3FtYVN2YTczUGRCNXdNc0xSVXhxZ2s0NnJjMnE0Uk51UjYxcmt4U3krcGh5K3NrTmlGZDN4U2c5TTR5TlhpNFVwNjQ5R3pRYWVMUGlrTWM5cm9vNG5wUEZic2NoK3l6VnVNV0hCK0U3YmI3Skw0cHBiaGhOS3owQjZlS1RhOTJLT3IzazdlZFRZZ2RRWFY1MHJyZ2xkVWFReEN3bGxrWWJ1V1BraTNGS1VhMnpsSWw5NmlhVU91a2E1UmVoZUUrMkhXRFhYd2xNTzI2OHVPWEJRNmlPbTdlSnlYZHNKbUY0bGxadWNxbEVTbEJjOUJLakRyekhGalk3YkNiWFl4NEZrYklFdnFTR1JKTEt0TlBiVHZJbGNJZ3Rsc2NaaThvaDd5SVM1S3FTQ0Z6eXZmTnpDbG1WdUpwbWFrcDRoWkt3WHFZU3FsRHFrZ2ViWitYYlNveU1KWU15Z1JLbFpUUlRpSjhiaFBqRWlvT3Q1a1dlaTEydnVCUmhQS01OdnNTV1pwdGYyWWdBZkhrR3Q4MnRwK1pNd1lFdzExaTJwR0hHd00zVTlPV3BjTTZUQU9TRURjY0x4R0ZNTmxUTTQ2Zk0rY1laYUdyS1JXVTFlTUxUQm9XcnovY09NZ2lpS0ZYVTBubHUyT2k5VFg4N1VsTG5XTjZEbVVlZHR4dXNNWDBVd1phU0Z6OWhDcDFUalVOclpWcFd4WjUwYmZPcEJtek1vZFAxN29xYUlhREFwemx3azFWSFh5TlVXK3diTE9YN0cxRmlMUUhnaWE0cDRFV2JTNGJCWWRnNVd3czRCNU5ScU5BNXRRVW1hWU11UmtmcU5IWWNZTUJDZldBZEQ0WXQ3emxsY3RkcTNsZnNrUTMvV2RmaG1yV095YUo5Y2ZNQjhtS2VteHU2ZDh5YXp4dVFVV0Rrd1Vnb21WdEhWcHV5aUV3b01BL05rMXZHcytJSHBZdXR1U3dZblpKNGQ1aHRwemRkWGZZblpFbGpOcFlWZGpjZGVpakNhSldSV1FsQmIrTWRaTHN6VGR4S0xrY2dRVDJPdTd5aTQ1dENoTGU1MWZqN0hHVDRWTEFjSnI5NlE1eDVvdStwekpad2NSQU16STUzTGhsWlNqUkVKUGhUUW5YUjlkZXRRc2ZvQWM0MnhqU3BvT3BtdTlwd0lsN2JyYTBta3JnY0tKVlRPUmNpV3NzM3RTdGU5Mmo4YWNaZzRGZEd4NTZza1dkWW4zS09YaW9xSlUvaTg1Y2JNNEE3UWhUa1VEamsvNkh3ZlJuN0pOTDRNS3FlaUtNSnFiU0J3UEZWaFpJa09YclU5cDRKQWZZTkJpR1pSd3ZpS0V4TnZTNENQWkVIUHhJaWVLdk04bDEweUVXTXdzY1VLcllOTTIyRVFVUHNPMHpIaXdhdjBWOXRudy9VUzdmYzFQWiswcmxKcGFFUUFtL3ZTYUNKZGU5OFNubDgxUm5uRzNaQnZGdkdFb09oMXZod3JPaWlONmZhbGxjK0ZLZDVTeXoyZzNwOEl4UG5HekNjSjh6ZWRnNlprU1NaZEV4WFdkVUhmSldZYUtQNXN3WWh3cGtwTEkxTmRoYW5DK05uQTl4b0RtTUpINTVUdGJHekNyYzV4RjMySDI5S0RtRk5QZGxwblM5b0xYbXJzbzdId2EzWFFtSTRrYnhyL2RMd2RFencvdkpXcWNUVFd5NnNBTmVYK3dTWmViS1YrUkVpSG10djk5eVhWRitSZmczTzhqMjExcU5EeWNWeGJ1T3ozMDhlRENKOS80d05zdTgyMVBiL21oOFIvUFdKNzk5QS81L1hybUxIRldDV0ZBbW4rT3VXUDdzUDZ1bG5uYjJtODhvcjEyNXR4dlRYUWZtb2gzSm5BZVBnVldMK2FINGtCUGxuT0o5UCtoMlBmLzlldHEzVDNVM1BoUDRtZEg0ai9ydTN3dFExMTkxUHJ3ZmlidnNQdmQrcTQyL2VmZjFQRnJlRmozN2Ivb2VGd2Q5c0VydGZlcmZWazJiZlJyVi8xWmFkYjI2ZnVtNkt2NmkvOXFydi9vUy80Lys5azNQM3gzNlltS291REZRQUEifQ.4V1WZFpHYQKfrbC2GBOIkJb12AbWcmbnZSfEwsvwskwoYdUZO5J5CORmWLLB9AnWaunHBH--y3s36zwQW7FJLw</con:value></con:property><con:property><con:name>Expired Security Updates - Change Password</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWk9qT0pMK0t4MzE5V1kzQkpqcWNuKzZva0JneW9oQzZBVzBzZEVCaURFMkFsTTJMZ01UODk5UDd1cWU2ZTZkdll1OWlxaXdKVXVwVk9hVG1ZL3l0N3ZpTWpiSDAzNHB4djJ4Lzl3WFhYMzM2UzZ0cTh0cFA4NGY2Q0NMc1Q3Zi9mTFR1cjI4KzJROEFNdjhhS3dzMjdSdDhQR1h1NzJzKzFIdnV2djAyeC9mdjBtTXIzMTkrbkQ4OVFNOTYwKzNHSXNQUlM4L3VMSHpaZkQxZ051ZTZzc0o1N3RQLy9qdHA3bHZzbTRpUHN1LzJ2VStxNDhmTHFYYVYzOE1MM3JIMTgyeTZQZHpvYnBqdVZmMWYxLzNwN29xVHZMdjFiRzcrLzJYdStHMGY5TVgvcnF4dnlpbEo4OWpNVjdPTjdOY3FxbytuMys5S0wzMjMybW5yL1NmS1RlY2pwTzIwNlVyNjVQZWIzeDhXTjhERzZ3c3kvcjRuK24wejlzUDFYR29iMksvZlBtbTFGTlQ5THY2dzB0eFBsK1BKNmwxMHhaNTIxZjE1Ni9ydGJHN1dudFkrL1h1SlU3SmR5dCtFUEdkQkkyUXoxMXhidlZ2ZW5UVDd2T1BJR25yK2FiaFA1NjBnZEdYNi8zeTRlVjIyZmZCUDdYQ1gvZjlvWFJSVmNkTFAzNW5EUUFzOE4yZi9kRzZHZmJMblkrbkx6aThlL3d5K3ZUaHNaOC9mUHZscHQ4Tkp2KzMxMjhHUHNwTE5iNEx1NW4vZmU3Zk8rV1hPNlZ0Y1NsMk45RjF2L3RSb3grdGNOUHYrL0c3bXRzSS9iVHBkTHlNZXkzcTB4MSsvL2ErOFBIbDhlbEQ4dmpoOGM5N2ZiL3JxK0h1MHR2bm42Si8xMENRbDlPN0c4NTFkZXlsOW9RRmJ2ZXFUL1hyWlgvZWEwVDlwT2h2ZjVrTWJvRDdxL0Ivbi84ejV0L0hYeFY2SC95ckN1L3ovNXNTN3l1cVUvMUh6UHdocnA2Ry9XbitZZXBIdGNiNXo3TXZaKzJlejJyZjdjZHZVNzllK3VxMnJsRGZ4ZEozb1lUcXF6WnZKNi9xYzMwNmFRTi9jLy83dXU5K0dPdnBENm5qc2ExdlhxN25zQ245YWgvdnd3MWQ2QlR0dy9YZjlTUW96VkdWKzgzOXB0MkJDaWdub2ZEYlAyTHFhRVpnL1VwQUdHMk5mRW90T2hla3RhcEZvdGlWc09Zb2lreTJTamc2VUpjNWlZRVcwdGx0YnNwejJocXBBT0dtQW5qRlNUZy9MMnBGbHZCVWQ2MmhaYTRLRXc4NXcxTmxvQXkxUmt0ZDFFUVd1OHAyZmFWTUZLeWJua1RmdkpZd1hKVjlkSzM1YUJKUEZybmhuQXNQNTRJNWVXWElKZmJoV1dSd1V5NWhMd2ljOGk2NnlzNmJxNE5jbGRZT1JIems3S0JNdkxCRzBKMjFOVEdwQTJZUW1zL2lRQzNhalJQaXNFM2E4WklhTE9QS1NXV0hYWDIzcm15YmE5UWxWcHlPVmtROFVCTzFTbUVqdEU0VEQ3d0plOVRHb0RJS3M5SHp3eW5QbE1JWmhpVmZxOXJGU2N5R2xUUjA5SHJTa3gwc2tCc20xVUhOeEZNbThvY3pjeHM3N1JRb3ZNSE4xY0NZQmMrVVlSWjdvbUdrbWRPbHlUbTNBMFNxdDRxRzk3VExWMld3T1cwdHRNVE1lWll0blhrM2JaSmxCK29XOGFTSFptbWhhOW52cHNwbERWWW9LaGZud255OEwwMmpTd0FGaEE4dGNoVW4zYmduVE14c1lXSEt3MFBGbWl2dERGL3JpdUlBejNVRzdkUmsxNXlGS0cxSG5pK1FKcDFORVFuVDJLdXU1S0RFc3ptY2lLdnRIQXozM0ZkdGFvYUw2SmpMdXNiaUxoUVZWVHF0aGI1OEdqMEs0QlN6a0hOdi9jUlVPTmNFZzBnTm5BU2lTUDFtVHowUnhRUm5SWVpNeE8xelJCeExNRFdrM1FCcW1BQ1Jua0VVeUFEN1UxdEJ2TVhHY0UyQnNTSE1tV2o3OElhTTNkdDJhUTJVbnZXbkUwVjl1TVRlRkFpeWVhdVp3d3UzZll0NmtVY1ErbFcvTVJKTEhISXJwTkpRb3VvVjVPeHh4UUlWSVl1dVVMYVpDeWJTU0d0UU1YeVJpa1ZTNVJxMzAxaDFnMDNhRFNqYlVFVDdFVHhiY2lQbWRWWWZObGJ0dGJZRTAxTDY4TFVnY2lyTnRjTGNXNktsQ1ZKU3JWRFB0b1RBbkptQ3BTYXdjemJZZ2pYM2tvNTJhZ21CMHZXQkxDTEhLcnlYTGJMTGRtclpJVitsM2M2Ty9ZbVh2ZGpyTysyNUwxMSthTEtrRFpkS3c3RE1CTStwSE9KQWRGV3ZzWFpnTGpIaHNGMDJNOHRRZ1ZTNDBLVnBSWWZQMU1TR1VHeFRkOGNwemRCZVBLMzl5TUJ0YXVGUStCRklXdU1vYU1PallHRFBpN2hHUG9yaVlBaGl0MUcxYWdyaTByZmNFdmRsL3dYcmpyNy9rYk5CbEszc2lNYXEyRDljQzNPMVJDQjhLWFg4RWplOHN2MjQ1TzBRRldBMXMwQkE1RTlMbm1FVjg0ZVo5U0ZMd1hoSWUvWEczSjI1QldPU0xwNmhzV1hMZy9ZRFZJVDQrSlMzOW11cWNiRTFiU0RhblVFdGhGRlAzeUovTk9KczRGdVFuSmdoL1pnOHJpUkpadUtxRndFWkxmbElpa01ESXRNZXExYmxFWDJ3NVA1c1VMQTdrY0JoMkcrTWdrL0gxSUk1WXZLNE5ZVWxMZkhNRnFlTnpPT3FkQ09ESHB3OFdxSVZWeXhCQVpzWmtOZXRGYTJZRytwN1kxNllsVVg2YXJVRnU1WG9obTFNbWNheW11dEFSQVJzM2xJSVQ0SU9mZFdOUFY3Q0c4SjlIVk5uSFFjdE1acFQ5YlRXc2J0WjVhWjRqZHlOb1gxNnliUFFSb1l6ViswRW9pNmZtU2RQWWxIUjFseFpNV1NIT0YyM2hYSzhoRWczb3Q2S3UvSkFmVmFVUFhKcGVqYUZ4bFRVVFpQSWNqUFpyOCtjajBHZGpxRnM3WWEwNEsxa2VJV0pTdGdpWXJTZ05PYlNLek5sTVc4OXB2eHFzeDZsOU9ETjNJTkpaRlVtWnVKZXdOM0NvSFBST0w2dlNNTnJidWVZQzQ5MDRUMDY3S2JVZlRUaXB6V3B3QWh3SU81WkZyN2tpM1BQZW1xbVVNZVNxMURweWhEelp1UStPdWc0d05zbHVxSkFERlZuNi95dFlocFVKZ0tKVFN6aElDc01rY0llOGxkMjBqWkpucTZmQ0JnY3lobEEyYkRCeThhbUFMM2tCMWJVQWNxanZyV3BDak41MHpNVHBPSlRIeW1kV0FPV1ZGd1kwZzNQdWtiTXVHOWcyVDJZV2phaG5laHpFbDZFT1cwaklGNlRqdmxFT1g1TTRWUGRyV25oTWlhVWc0U0ZENldCYzltekl1OTE1ajJFV3hvMEw4bWh1a2JRMDdMbHBsQ3dLOGh1S2FGd0t4VStGUWQwdjlWWTR0NFlwSXZ3aWxZWkdudTY1c0crNUJqVWRCM3FuTjJYaHRoV1dYak1xYkhOVllnSzM0YmNrMmZjRDBiVmFzUzEwSTY5TVNzWGRvOTdKeWdOdE1lR0UwY0gzQklnTXNyRExsa2N2NllQYzBxbktXM0RuTVB3Q1RQVlNEOFVsTWtWem9hazVGQ25JeDFRdmhTWXdXM0NRa2c3ZWNvVmVrTkJTS2tCOTFYbU9KaUVXMTF2UW1aZ0o3RXdLczNXeEowdDlKbFB0ZDVMR2V3cVZ3YkVYQnVsT1lHUzJ3ZWQ1MXRzcUtmQzJsMTFudGlXSUZ5aFFEa013SkMyekUzNW9PUUJqYlZTQ0h1UldkSnhTVXdKRVI4bTNMSnI3T0dSOHdsUnNNNlpEKzlUdnJNNTJjeTRtMTd4NGpUWWVyeHkzeUNFZ29XMFUxWnA3cEhxdW9mNEZHNk5CalAzOFZvWURCR3IyVWFxV2tpNjFqakRBVmJEbWVzaWtib2hsNFp6MHZVUnNKWkJUQ0JMZlRVVllETlZwbHFpakFXOG5hNmxyenlrL2FrNWl4Tm5hRTdTTWFDdE5ITUY3eU1maG9rS0hldzZTbmdzWWh4bmNZWVhaQ1ltMGxVMXlqWm1hazVSeEk1QWd2TzFZRTBRSGVRTDZUWW16eEtROXN5SWxQTmFFUWtFWUdsaXFGUndPdXU3TklKcERBWVNTaGVtMnlXTWRNMjhjdlZvNXhUNzFVSFRBUXRhMG14bjBtR1FFTGhDcHJJU0lCTmRUejBCaFNwZFo4TVl2SkQ5bU5KMnRWRFZUTkxUdGQ1ak9nL1lHZUhvS2ZYUlNjZlZPVFVjb3YzSWRTMXlJeFpkVXc1ZjJTR3hpdTU0cFFlbStaR2oxY0tVOVVlalpnTlBGbnpTbk9jMVVjY1Qwdnl0V0dRZmM4MWJURmd3dnRQK20xWWxjY3lZNFlUU001QXVIcW5HWHNUeE5XOG5seG83a0hyaXFuUEZOYUZyaWpSbklZRXMwc0FaSzA4RU1VVzU1bFlPOHFTYldPcWdhNVJUQk00MTBUakVxcmtXcnJMWmZuM0pnWTFTRHpIdEY0ZnIyazdBOUNxcDNPWlVqWktndk9naFFCMStqU2h1ZE54T3FNVWU5aVZqQzN4SkRZa2trVzJsdVorV1RlUVNXaWlMTkJlVFI5eERKc3gxSVJXODRIbnQ0UmEyTEhNeXlkU1U5QXdoWTdOSUpWU2wxQ0gxdGN6T1d5VTlPaElmUmd4S2xKclZSQ0YrWWh6dUV5TUV1cDRYZVNaNnZlZGVnUEdFTXZ3V1daTHA5ZHBmRE9EREk2aDFmaTB0YnhJR2pLam11aVVWSS9aM3BxNG5SODFyaGhUWUoyUWdUamdlSTZxcGNnWW5mZDhuemxCTEF6WXlxOGtMaHJZNFVHMitmNWlSSDRhUm9yYm1jMHVzOHpMMTVFeE5tV3Q3QTJvZWRkNW12TTd3VmZoVFJscjRqQzEwU2pVUHBkM0txakwyckhPRFIxMjQ0Z3dLWGYrZXFDbEM2aytLTXdkSmRkUTFjaDFqejJBNXg4K1lHaHZoQzFka1RSRXR3a3c2SEJUTHpzWktySElBT2JVYXpVTmJVSkxHanpreVVxOVpSUUVHREVRbjFzRkFlT0tlY3haVnJjYTJjcDVrNE0yNkR0KzhkVXdXamNuRkE4eURlV3BxN3Q3WmJ6SnJURTZCbFFNanBXQmlGVjF2eXk0OElkOHdNRTltSGMrS0g1Z3V0azVjTWpnaDgyd3p6MGhydnJucVIweE1ZRFdYRm5ZMEgzc3BnbkNXa0ZrSlFXM2hIV2U1TUZlL1NTeEdRa004amJsK28rQ2FRNXUydU5mNStSeGwrRlN3SENTOGVrT3VjNkR0dXMrVnNITVFEc3dNZFM0YldrazFSeVQ0VUVCbjB2WFZxUVBGNmdQTU5jYzJLci9wWkxyZWN5SWMybTZ1SlpHNkhpaVVVRGtYQVZ2S05sOVZ1dTdWM3RHSWdzU3VpSTQ5VHlYSnNqbmhIcjFVVkV5Y3d1ZVlHek9ETzBBWFpsTTQ1UHlnODMwUWVpWFQvTkt2N0lxaUVLdU5nY0R4VkFXaEpUcDQxZjZjQ2dMMUN3WWhtb1VKNDJ0T1RCeVhBQi9KZ3A2SkVUNVY1bmt1dTJRaXhtQmlpeFhhQnBuMnd5Q2d4ZzdUTWVMQ3EvVFc4YlBodUluR2ZVM1BKMjJyVkJxYUVjRG12alNhVU5mZXQ0VG5WODFSbm5FMzVOdEZQQ0VvZXAwdng0b09Tbk82ZldubGMyR0t0OVJ5RHFqM0pnSnh2alh6U2NMOFRlZWdLVm1TU2RkRWhYVmQwRytKbWZxS1Axc3dKSnlwMHRMTVZGZGhxakIrTnZDOTVnQ204TkE1WmJzVk5tR3NjOXhGditGaWVoQno2c3BPMjJ4SmU4Rkx6WDAwRjM2dERwclRrZVJOODUrT3QyT0M1NGUzVWpXMjVucDU1YU9tM0Qrc2lCdFpxUmNTMHFIbTl2NTlTZlVEK1cvK09kcEhLM1dvMFBKeDNGaTQ3UGZUeDRNSW5uL2xBMnk3N2JVOXYrYUh4SHM5NHRYdW9YL082OWN4WTR1eFRnb0YwdngxeWgrZGg4MTF1OG5mMG1qdEZwdTNOK042YTV2OTFFSzRNNEh4OERkZy9jMzhTQXp3eWJJL21mYmZiZkR4djI1ZHBidWZtZ3YvdXRqK1lmRmZ0UjIrdHFIdWZtbzlHSC9SZC9qdFRoMTMrLzd6cjZxNE5YeFd0K04vYURqYzNRNkJtNDE3YXoxWnE5dm8xcS82Y3RLdDdWUDNUZEZYOVpkKzFkMi82UWIrL3pzWmQ3Ly9EM01SQVhnWEZnQUEifQ.SVHpMM2YaXcQTwqLHh5kgLDUV8rApR6DZeQotFJiVsORQns5R3z715afufb0oruVVmxFpG0xJ8qsQ9_05v2Z7Q</con:value></con:property><con:property><con:name>Expired Security Updates - Change Security Answers</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVliWE9qdUxMK0sxUDVlbmRQQ1RDWmVEN2RFQkNZR0JHRVhrQ25UazBCWW8yTndJNk5iV0JyLy91Vms1blptVG03OTlhNXFVclprcVZXcS92cDdrZjkrMTF4SHByOWNUc1h3M2JmZis2THJyNzdkSmZXMWZtNEhhWVA5Q0NMb1Q3ZC9mTFR1cTI4KzJROEFNdjhhQ3dzMjd4ZjNDOS91ZHZLdWgvMHJydFB2My83L2xWaWZPM3I0NGY5Yngvb1NYKzZ4VkI4S0hyNXdZMmR0OEdYQTI1N3FyY1RUbmVmL3ZuN1QzTmZaZDFFZkpaL3RldDlWaDkvT0pkcVczMGJudldPTDV0bDBXK25Rblg3Y3F2cS83NXVqM1ZWSE9VL3FuMTM5OGN2ZDRmajlxSXYvR1ZqZjFaS1Q1NkdZamlmYm1ZNVYxVjlPdjEyVm5ydDMybW5yL1NmS1hjNDdrZHRwM05YMWtlOTMvajRzTHdITmxoWWx2WHhQOVBwWDdjZnF2Mmh2b2w5Ky9KVnFhZW02RGYxaDI5K2ZleFAxL3A0ODZ1MnpHVmIxWisvN05ORzcycnRhZTNmdTVjNEpkK3QrR3I5TjBoOGxaU2M2OVB0Y3U4QzlXbzkrN2tyVHExZXFVYzNuVC8vQ0oyMm5tNTYvL05KbXgyOVhmcVhEeTgzRTd3UC9xV3Y4V1hmdDZzVVZiVS85OE4zTmdMQUF0LzkyUit0bTduZkxMRS92cUh6N3ZGdDlFbGZkZnJ3OVplYmZqZncvTjlZdUpsOUw4L1Y4QzdzNXBUM3ViOTMxUzkzU2h2NVhHeHVvdXQrODZOR1AxcmhwdC8zNDNjMTF4SDZhZE54Zng2Mld0U25PL3orN1gzaDQ4dmowNGZrOGNQam4vZjZmdGNYdzkybHQ4OC9SZitoNFNIUHgzYzNuT3BxMzB2dENRdmM3bFVmNjlmejlyVFZPUHRKMGQvL01rWGNZUGhYU2VGOS9zOU04RDcrb3RENzROOVZlSi8vMzVSNFgxRWQ2MitSOUUxY1BSNjJ4K21IcVIvVkdxWS96ejZmdEhzK3EyMjNIYjVPL1hidXE5dTZRbjBYWWQ4RkdLcXYycnlkdktyUDlmR29EZnpWL2UvcnZ2dGhxTWR2VW9kOVc5KzhYRTloVS9yVk50NkdLenJUTWRxR3kzL29TVkNhZ3lxM3EvdFZ1d0VWVUU1QzRkZC94TlRlak1EeWxZQXdXaHY1bUZwMEtraHJWYk5Fc1N0aHpWRVVtV3lSY0xTakxuTVNBODJrczl2Y2xLZTBOVklCd2xVRjhJS1RjSHFlMVlMTTRiSHVXa1BMWEJRbVB1UU1qNVdCTXRRYUxYVlJFMW5zS3R2bGxUSlJzRzU4RW4zeldzSndVZmJSdGVhRFNUeFo1SVp6S2p5Y0MrYmtsU0huMkljbmtjRlZPWWU5SUhETXUrZ3FPMitxZG5KUldoc1E4WUd6blRMeHpCcEJOOWJheEtRT21FRm9Qb2tkdFdnM2pJakRObW1IYzJxd2pDc25sUjEyOWQyNnNtMnVVWmRZY1RwWUVmRkFUZFFpaFkzUU9vMDg4RWJzVVJ1RHlpak1Sczhmam5tbUZNNHdMUGxTMVM1T1luWllTRU5IcnljOTJjRUN1V0ZTN2RSRVBHVWkvM0JpYm1Pbm5RS0ZkM0J6ZFdETWdpZktNSXM5MFREU1RPbmM1SnpiQVNMVnBhTGhQZTN5UlJtc2ptc0x6VEZ6bm1WTEo5Nk5xMlRlZ0xwRlBPbWhXVnJvV3ZhYnNYSlpneFdLeXRrNU14OXZTOVBvRWtBQjRZY1d1WXFUYnRnU0ppWTJzekRsNGE1aXpaVjJocTkxUlhHQXB6cURkbXF5YTg1Q2xMWUR6MmRJazg2bWlJUnA3RlZYc2xQaTJUd2NpYXZ0SEJ6dXVhL2ExQXhuMFRHWGRZM0ZYU2dxcW5SYUMzMzVOSGdVd0RGbUllZmU4b21wY0tvSkJwRTZjQktJSXZXYkxmVkVGQk9jRlJreUViZFBFWEVzd2RRaDdRNmdoZ2tRNlFsRWdReXdQN1lWeEd0c0hLNHBNRmFFT1NOdEh5N0kyRnpXYzJ1ZzlLUS9uU2pxd3puMnhrQ1ExYVZtRGkvYzloTDFJbzhnOUt0K1pTU1cyT1ZXU0tXaFJOVXJ5Tm5qZ2dVcVFoWmRvR3cxRlV5a2tkYWdZdmdzRll1a3lqVnV4NkhxRGpacFY2QnNReEZ0Qi9Cc3laV1lsbG05VzFtMTE5b1NqSFBwdzllQ3lMRTBsd3B6YjQ3bUpraEp0VUE5V3hNQ2MyWUtscHJBenRuQkZxeTVsM1N3VTBzSWxDNTNaQlk1VnVHOWJKRmR0bVBMZHZraTdUWjI3SSs4N01WVzMybkxmZW55WFpNbGJUaFhHb1psSm5oTzVTRU9SRmYxR21zNzVoSVRIdGJ6YW1JWktwQUtaem8zcmVqd2lacllFSXF0Nm00L3BobmFpcWVsSHhtNFRTMGNDajhDU1d2c0JXMTRGQnpZOHl5dWtZK2lPRGdFc2R1b1dqVUZjZWtsdDhSOTJiOWgzZEgzMzNOMkVHVXJPNkt4S3JZUDE4SmN6QkVJWDBvZHY4UU5yMnc3ekhsN2lBcXdtRmdnSVBMSE9jK3dpdm5EeFBxUXBXRFlwYjI2TUhkanJzR1FwTE5uYUd6WmNxZjlBQlVoUGo3bXJmMmFhbHlzVFJ1SWRtTlFDMkhVMDB2a0QwYWNIZmdhSkVkbVNEOG1qd3RKa29tNDZrVkFSa3Mra0dMWGdNaTBoNnBWZVVRZkxMazlHUlJzamlSd0dQWWJvK0RqUHJWZ2pwamNyMDFoU1VzOHM5bHBJM08vS04zSW9Ec25qK1pvd1JWTFVNQW1CdVIxYlVVTDVvYjYzcGdYWm1XUnZscXN3V1lodXNNNnBreGpXVTExSUNJQ1ZwY1V3cU9naDc3cWhoN1A0UTNodm82cGs0NkRsaGpOc1hwYTZ0aGRMWEpUdkVidXl0QStQZWRaYUNQRG1hcDJCRkdYVDh5VFJ6R3JhRzB1ckJpeVhad3UyMEk1WGtLa0cxRnZ3VjI1b3o0cnloNjVORDJaUW1NcTZzWlJaTG1aYkpjbnpvZWdUb2RRdG5aRFduQXBHVjVnb2hJMml4ak5LSTI1OU1wTVdjeGJEaW0vMnF4SEtkMTVFL2RnRWxtVmlabTRGM0F6TStpY05ZN3ZLOUx3bXRzNTVzSWpYWGlQZHBzeGRSK04rR2xKS2pBQUhJaDdsb1V2K2V6Y3M1NmFLZFN4NUNwVXVqTEV2Qm00ajNZNkR2QjZqcTRvRUllcXMzWCtWakVOS2hPQnhDYVdjSkFWaGtoaEQva0xPMm1iSkUrWFR3UWNITW9aUU5saGhlZVZUUUY2eVhlc3FBT1VSMzFyVXhWbThxWm5Ka2pGeHo1U09yRUdMS200TUtRYm5uU05tSERmd0xKN01MVnNRanZSNXlROEMzTmNSMEM4SmgzemlYTDhtTUtudWx2U3dtVk1LQWNKQys5S0ErZXlaMFhlNjh5N0M5YzBhRjZTWFhXTm9LZGx5MVdoWUZlUXpWeEM0VllxZkNwMjZINnRzY1M5SVVobjRSV3RNalQyZE0yRGZja3hxT2t5MURtN0x3Mnhyckp3bjFOam5hc1FGYjROdVNkUHVEOFlWYXNSMTBJNzlvYXNuTms5N3AyZ05OQVdHMDRjN1hCTGdNZ29EN3RrZHZ5YVBrd3BIY2UwRFhNT3d5Zk1WQ1A5VUZBbUZ6ZzdKQ1dIT2gzcGdQS2x3QXl1RXhaQzJzbGpydEFGQlNHbEJ0eFdtZU5nRXE1MXZRbVpnWjNFd3FnMFd4TjN0dEJuUHRWNkwyV3dxMXdaRUhOcGxPWUlTbTd2ZEo1dnNhR2VDbXR6MVhsaVhZSndnUUxsTUFCRDJqSTM1UWNsZDJpb2xVTFlpOHlTRG5OaVNvajRZY1F0dThZZUhqZ2ZFUVhMblBud1B1VWJtNVBWaEx2eEZjOU9nNjNISy9jTlFpaVlTVHRtbGVZZXFhNTdpSS9oMm1nd2N4K3ZoY0VRc1pwMXBLcVpwRXVOTXh4Z2RUaHhYU1JTTitUU2NJNjZQZ0xXTW9nSlpLbXZ4Z0tzeHNwVWM1U3hnTGZqdGZTVmg3US9OV2R4NGd4TlNUb0V0SlZtcnVCOTVNTXdVYUdEWFVjSmowV000eXpPOEl6TXhFUzZxa2JaeWt6Tk1ZcllIa2h3dWhhc0NhS2RmQ0hkeXVSWkF0S2VHWkZ5WGlzaWdRQXNUUXlWQ2s0bmZaZEdNSTNCUUVMcHduUTloNUd1bVZldUh1MmNZci9hYVRwZ1FVdWE3VVE2REJJQ0Y4aFVWZ0prb3V1cEo2QlFwZXVzR0lObnNoMVMyaTVtcXBwUmVycldlMHpuQVRzakhEMmxQanJxdURxbGhrTzBIN211Ulc3RW9tdks0U3ZiSlZiUjdhOTB4elEvY3JSYW1MSitiOVRzd0pNWkh6WG5lVTNVL29nMGZ5dG0yY2RjOHhZVEZveHZ0UC9HUlVrY00yWTRvZlFFcElzSHFyRVhjWHpOMjlHbHhnYWtucmpxWEhGTjZKSWl6VmxJSUlzMGNJYktFMEZNVWE2NWxZTTg2U2FXMnVrYTVSU0JjMDAwRHJGcXJvV3JiTFpkbm5OZ285UkRUUHZGNGJxMkV6QytTaXJYT1ZXREpDZ3ZlZ2hRaDE4amloc2R0eU5xc1lkOXlkZ01YMUpESWtsa1cybnVwMlVUT1ljV3lpTE54ZVFlOTVBSmMxbElCYzk0V25xNGhTM0xuRXd5TlNZOVE4aFl6VklKVlNtMVMzMHRzL01XU1kvMnhJY1JneEtsWmpWU2lKOFloOXZFQ0lHdTUwV2VpVjd2dVJkZ09LSU1YeUpMTXIxZSs0c0J2SHNFdGM2dnBlV053b0FSMVZ5M3BHTEEvc2JVOVdTdmVjMGhCZllSR1lnVGpvZUlhcXFjd1ZIZjk0a3oxTktBRGN4cThvS2hOUTVVbTI4Zkp1U0hZYVNvcmZuY0hPdThURDA1VVZQbTJ0NkFtbnVkdHhtdk0zd1YvcGlSRmo1akN4MVR6VU5wdDdDcWpEM3IzT0JSRnk0NGcwTFh2eWRxaXBENm8rTE1RVkx0ZFkxY3h0Z3pXTTd4TTZiR1N2akNGVmxUUkxNd2t3NEh4Ynl4c1JLTEhFQk9yVWJ6MEJhVXBQRmpqb3pVYXhaUmdBRUQwWkYxTUJDZXVPZWNSVldyc2EyY0p4bDRrNjdETjIvdGsxbGpjdllBODJDZW1wcTdkL1pGWm8zSktiQnlZS1FVakt5aXkzWFpoVWZrR3dibXlhVGpXZkVkMDhYV2lVc0dSMlNlYk9ZWmFjMVhWLzJJaVFtc3B0TENqdVpqTDBVUVRoSXlLeUdvTGJ6OUpHZm02amVKeFVob2lLY2gxMjhVWEhObzB4YjNPaitmb2d3ZkM1YURoRmNYNURvNzJpNzdYQWs3QitHQm1hSE9aWWRXVXMwUkNkNFYwQmwxZlhYcVFMRjZCM1BOc1kzS2J6cVpMcmVjQ0llMnEydEpwSzRIQ2lWVVRrWEE1ckxORjVXdWU3VzNONklnc1N1aVk4OVRTVEt2anJoSEx4VVZJNmZ3T2ViR3hPQUcwSm5aRkI1eXZ0UDVQZ2k5a21sKzZWZDJSVkdJMWNwQVlIK3NndEFTSGJ4cWY0NEZnZm9GZ3hETndvVHhKU2Ntamt1QTkyUkd6OFFJbnlyek5KVmRNaExqWUdLTEZkb0dtZmJEUVVDTkhhWmp4SVZYNlMzalo4TnhFNDM3bXA2TzJsYXBORFFqZ00xOWFUU2hycjJYaE9kWHpWR2VjWGZJMTdONFFsRDBPbDhPRlQwb3plbTJwWlZQaFNrdXFlWHNVTytOQk9KOGJlYWpoUGxGNTZBeG1aTlIxMFNGZFYzUWI0bUorb28vV3pBa25LblMwc3hVVjJHcU1INDI4TDNtQUtidzBDbGxtd1UyWWF4ejNGbS80V0s2RTFQcXlrN2JiRTU3d1V2TmZUUVhmcTEybXRPUjVLTDVUOGZiSWNIVHc2VlVqYTI1WGw3NXFDbTNEd3ZpUmxicWhZUjBxTG05ZjE5Uy9VRCsxVDlGMjJpaGRoV2FQdzRyQzVmOWR2eTRFOEh6Yi93QTIyNTliVSt2K1M3eFh2ZDRzWG5vbi9QNmRjalliQ3lUUW9FMGZ4M3pSK2RoZFYydjhrc2FMZDFpZGJrWTExc3o3YWNXd3AwSmpJZGZnZldyK1pFWTRKTmxmekx2LzdINENQN3IxbFc2KzZtNThPK0w3UjhXLzFYYjRVc2I2dTZuMW9QeEYzMkgzKy9VZnJQdFAvK21pbHZEWjNFNy9vZUd3OTN0RUxoYXViZldrN1c0alc3OXFyZVRibTJmdW0rS3ZxcmYrbFYzZjlNai9QOTNNdTcrK0IvbENtNGNMUllBQUE9PSJ9.bRUXRRIkYTdn5a-Eclvs9_ImlRGhANjuYC3flNQxBEs9GcBwN3kn_rYom2hkHMVOwLLObFqiuEzRt8EvegB87g</con:value></con:property><con:property><con:name>Expired Secured Demographic Updates - Update Phone</con:name><con:value>eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6Ikg0c0lBQUFBQUFBQUFKMVk3NU9iT05MK1Y2Ym02KzF1Q1RDVGNUN2RNQ0F3WStSQjZBZm82aW9GaURVMkFqTTJ0b0d0L2Q5Zk9aUE5Kcm05dTdvM1ZhbXhoTlJxZFQvZC9haC91OC9QUTMwNDd1WjgyQjI2VDEzZVZ2Y2Y3NU9xUEI4cmVlZFc3V0Y3elB0NlY5N1JYdVpEZGJyLzZZY3RPM24vMFhnRWx2bkJXRmkyK1dnOUdqL2Q3MlRWRGJ0aHV2LzQyOWZmZndqZlhMdnFlSGY0OVc1RFh1L2NmTWp2OGs3ZTBaT2V2STIrSEhEYlUzNCs0WFQvOFIrLy9URDNWUlo1L1NUL2F0UDdyRDY5UHhkcVYvNDVQQjVHcmNtNUxhcWozbTk4ZUZ3K0FCc3NMTXY2b0lYMDlhR3Ivdno4dCtVSHc3YVhGdmdBSGgvMTU4UFFmNzd2L2YzdmV1MXhkOUVXK1NLNk95dWxKMDlEUHB4UE54T2V5N0k2blg0OUs3MzIzNmwvdS9UL3B2OVo3L2l5V2ViZGJzcFZleWgycXZyN2RYZXN5dndvZnlrUDdmK20zVDl2SDhwRFg5M2tmLzd4VmIzUExyOTd2UmxGYTZpUHZ1eks2dE9YeGRvcGJhV1JjTFBINnlZaDM2ejRidi9yOGZDcjFwRHZodm9QU2VmajdsT2JuNXFiSlgrNnY2bjQ2WHRRTmRWMFUvTWZ6L3BHNkxNM2ZycDd2Ym51NitBbTZYM3dUMzJGTDBLK1hpTXZ5OE81Rzc1eE5BQVcrT2FmL2NHNjJmeXpGUTdIZDZjK2ZSNTl2SHZxcHJzL3Z0eVV2VG5wdjl2OFp2S0RQSmZEdTdBYnN0N24vaFBlVk41dHovbjJKcnJxdHY4ZGdOOG8vTDNGYnVwL08zNi94VHBDUDJ3NkhzN0RUcC8wOFI2Ly8zcGYrUFQ2OUh3WFA5MDkvWG50YjNkOXNldDljdnY3cCtqZk5YTGsrZmp1c2xOVkhqcXB2V2FCMjdXclkvVjIzcDEyR29JL0tQcmJYK2FjRzBML0tyVzh6LytaVDk3SFh4UjZIL3lyQ3Uvei8wbUo5eFhsc2ZvYWJWL0ZWV08vTzA3ZlRYMnYxakQ5ZWZiNXBMMzNTZTNhM2ZESDFLL25ycnl0eTlVM3dmZE43S0hxcXMzYnlxdjZWQjJQMnNCL2VQdDkzVGNmaG1yOEtuVTROTlhOeTlVVTFvVmY3amE3Y0VWbk9rYTdjUG1MbmdTRk9haGl0M3BZTlZ0UUF1WEVGUDd4SHpGMU1DT3dmQ01nak5aR05pWVduWExTV09VczBjYVZzT0lvaWt5MmlEbmFVNWM1c1lGbTB0cE5ac3BUMGhpSkFPR3FCSGpCU1RpOXpHcEI1dkJZdFkyaFpTNXlFL2NadzJOcG9CUTFSa05kVkVjV3U4cG1lYVZNNUt3ZG4wVlh2eFV3WEJSZGRLMzRZQkpQNXBuaG5ISVBaNEk1V1duSWVlUERrMGpocXBqRFRoQTRabTEwbGEwM2xYdTVLS3d0aVBqQTJWNlplR2Exb0Z0cmJXSlNCY3dnTkp2RW5scTBIVWJFWVJNM3d6a3hXTXFWazhnV3UvcHViZEhVMTZpTnJVMHlXQkh4UUVYVUlvRzEwRHFOUFBCRzdGRWJnOUxJelZyUDk4Y3NWUXFuR0JaOHFTb1h4eHZXTDZTaGc5dVRubXhoanR3d0x2ZHFJcDR5a2QrZm1GdmJTYXRBN3ZWdXBuckdMSGlpRExPTkoycEc2aW1aNjR4ek8wQ2t2SlEwZktCdHRpaUMxWEZ0b1huRG5CZlowSW0zNHlxZXQ2QnFFSTg3YUJZV3VoYmRkaXhkVm1PRm9tSjJ6c3pIdThJMDJoaFFRSGpmSUZkeDBnNDd3c1RFWmhZbVBOeVhyTDdTMXZDMXJtZ1Q0S2xLb1oyWTdKcXhFQ1hOd0xNWjByaTFLU0poc3ZIS0s5a3I4V0wyUitKcU93ZjlBL2RWazVqaExGcm1zcmEydUF0RlNaWE9lcUV2bndlUEFqaHVXTWk1dDN4bUtwd3Fna0drZWs0Q2tTZCt2YU9laURZRXAzbUtUTVR0VTBRY1N6RFZKMjBQS2hnRGtaeEFGTWdBKzJOVFFyekdSbjlOZ0xFaXpCbHA4M2hCeHZheW5oc0RKU2Y5MTRtaUxwdzMzaGdJc3JwVXpPRzUyMXlpVG1RUmhIN1pyWXpZRXZ2TUNxazBsQ2c3QlRsN1dyQkFSY2lpQzVTdXBweUpKTklhbEF5ZnBXS1JWSm5HN1RpVWJXK1RaZ1dLSmhUUmJnQXZsbHlKYVpsVys1VlZlWTB0d1RnWFBuekxpUndMYzZrdzkrWm9yb09FbEF2VXNUVWhNR09tWUlrSjdJejF0bUQxZzZTRG5WaENvR1M1SjdQSXNBb2ZaSVBzb2hrYnRzOFdTYnUxTi83SWkwN3M5SjEyM0pjdTM5ZHAzSVJ6cVdGWXBJSm5WUGFiUUxSbHA3RzJaeTR4WWIrZVZ4TkxVWTVVT05PNWJrU0xUOVRFaGxCc3BTbmFtS1JvSjU2WGZtVGdKckZ3S1B3SXhJMXhFTFRtVWRDemwxbGNJeDlGbTZBUE5tNnRLbFhueEtXWHpCSVBSZmNaNjQ2Ky80R3pYaFNOYkluR3F0ZzlYbk56TVVjZ2ZDMTAvQkkzdkxMZE1HZE5IK1ZnTWJGQVFPU1BjNVppdGVHUEUrdENsb0JobjNUcXd0eXR1UVpEbk15ZW9iRmx5NzMyQTFTRStQaVlOZlpib25HeE5tMGdtcTFCTFlSUlJ5K1JQeGlidE9kckVCK1pJZjBOZVZwSUVrL0VWYThDTWxyd2dlVDdHa1NtUFpTTnlpTDZhTW5keWFCZ2V5U0J3N0JmR3prZkQ0a0ZNOFRrWVcwS1MxcmloYzFPRTVtSFJlRkdCdDA3V1RSSEM2NVlqQUkyTVNDdmF5dGFNRGZVOThZOE4wdUxkT1ZpRGJZTDBmYnJEV1VheTJxcUFoRVJzTG9rRUI0RjdidXlIVG84aHplRSt6cW1Uam9PR21MVXgvSjVxV04zdGNoTThSYTVLMFA3OUp5bG9ZME1aeXFiRVVSdE5qRlBIc1dzb3JXNXNEYVE3VGZKc3NtVjQ4VkV1aEgxRnR5VmUrcXp2T2lRUzVPVEtUU21vblljUlpxWjhXNTU0bndJcW1RSVpXUFhwQUdYZ3VFRkppcG1zOWlnR1NVYkxyMGlWUmJ6bGtQQ3J6YnJVRUwzM3NROUdFZFdhV0ltSGdUY3pndzZaNDNqaDVMVXZPSjJocm53U0JzK29QMTJUTnduWS9POEpDVVlBQTdFQTB2RDEyeDJIbGhIelFUcVdISVZLbHdaWWw0UDNFZDdIUWQ0UFVkWEZJaStiRzJkdjlXR0JxV0pRR3dUU3pqSUNrT2tzSWY4aFIwM2Rad2x5MmNDZW9keUJsRGFyL0M4c2lsQXI5bWU1VldBc3FocmJLckNWTjcwVEFVcCtkaEZTaWZXZ01VbEY0WjB3NU91RVJQdWFsaTBqNmFXVFdncnVveUVaMkdPNndpSXQ3aGxQbEdPdjZId3VXcVhOSGNaRThwQndzTDd3c0NaN0ZpZWRUcno3c00xRGVyWGVGOWVJK2hwMlhLVks5am1aRHNYVUxpbENwL3pQWHBZYXl4eGJ3aVNXWGg1b3d5TlBWM3pZRmR3RENxNkRIWE83Z3BEck1zMFBHVFVXR2NxUkxsdlErN0pFKzU2bzJ3MDRocG9iN3doTFdiMmdEc25LQXkwdzRhemlmYTRJVUNrbElkdFBEdCtSUituaEk1ajBvUVpoK0V6WnFxV2ZpZ29rd3VjOW5IQm9VNUhPcUI4S1RDRDY1aUZrTGJ5bUNsMFFVRklxUUYzWmVvNG1JUnJYVzlDWm1BbnRqQXF6TWJFclMzMG1jK1Yza3NaYkV0WEJzUmNHb1U1Z29MYmU1M25HMnlvNTl6YVhuV2VXQmNnWEtCQU9RekFrRGJNVFhpdjVCNE5sVklJZTVGWjBHR09UUWtSNzBmY3NPdkd3d1BuSTZKZ21URWZQaVI4YTNPeW1uQTd2dUhacWJIMWRPVytRUWdGTTJuR3ROVGNJOUYxRC9FeFhCczFadTdUTlRjWUlsYTlqbFE1azJTcGNZWURyUG9UMTBVaWNVTXVEZWVvNnlOZ0RZT1lRSmI0YXN6QmFpeE5OVWNwQzNnelhndGZlVWo3VTNNV1o1T2lLVTZHZ0RiU3pCUjhpSHdZeGlwMHNPc280YkdJY1p4dVVqd2pNemFScnFwUnVqSVRjNHdpZGdBU25LNDVxNE5vTDE5SnV6SjVHb09rWTBha25MZVNTQ0FBUzJKREpZTFRTZCtsRmt4ak1KQlF1akJaejJHa2ErYVZxeWM3bzlndjk1b09XTkNTWmpPUkZvT1l3QVV5bFJVREdldDY2Z2tvVk9FNks4YmdtZXlHaERhTG1hcDZsSjZ1OVI3VGVjQk9DVWZQaVkrT09xNU9pZUVRN1VldWE1RWJzZWlhY1BqRzlyR1Z0NGNyM1RQTmp4eXRGcWFzT3hnVjYzazg0NlBtUEcreE9oeVI1bS81TExzTjE3ekZoRG5qVysyL2NWRVF4OXd3SEZONkF0TEZBOVhZaXppK1pzM29VbU1MRWs5Y2RhNjR4blJKa2VZc0pKQjVFamhENllsZ1ExR211WldEUE9uR2x0cnJHdVhrZ1hPTk5RNnhxcSs1cTJ5Mlc1NHpZS1BFUTB6N3hlRzZ0aE13dmtrcTF4bFZneVFveXpzSVVJdmZJb3BySGJjamFyQ0hmY25ZREY4VFF5SkpaRk5xN3FkbEV6bUhGa29qemNYa0FYZVFDWE9aU3dYUGVGcDZ1SUVOUzUxVU1qWEdIVVBJV00xU0NWVXF0VTk4TGJQMUZuR0hEc1NIRVlNU0pXWTVVb2lmR1llNzJBaUJydWQ1bG9wTzcza1FZRGlpRkY4aVN6SzlYdnVMQWJ4L0FwWE9yNFhsamNLQUVkVmN0NkJpd1A3VzFQWGtvSGxObndEN2lBekVDY2REUkRWVlR1R283L3ZNR1dwb3dBWm0xVm5PMEJvSHFzbDJqeFB5d3pCUzFOWjhidDdvdkV3OU9WRlRadHJlZ0pvSG5iY1pyMUo4RmY2WWtnYStZQXNkRTgxRGFidXd5cFM5Nk56Z1VSY3VPSU5DMTc5bmFvcVErcVBpekVGU0hYU05YRzZ3WjdDTTR4ZE1qWlh3aFN2U09vOW1ZY1l0RHZKNWEyTWxGaG1BbkZxMTVxRU5LRWp0YnpneUVxOWVSQUVHREVSSDFzSkFlT0tCY3hhVmpjYTJjcDVsNEUyNkR0KzhkWWhuamNuWkE4eURXV0pxN3Q3YUY1bldKcWZBeW9DUlVEQ3lraTdYUlJzZWtXOFltTWVUam1mRjkwd1hXMmRUTURnaTgyUXp6MGdxdnJycVI4eUd3SElxTE94b1B2YWFCK0VrSWJOaWdwcmNPMHh5WnE1K2sxaU1oSVo0SGpMOVJzRVZoelp0Y0tmejh5bEs4VEZuR1loNWVVR3VzNmZOc3N1VXNETVE5c3dNZFM3ckcwazFSeVI0bjBObjFQWFZxUUxGcWozTU5NYzJTcjl1WmJMY2NTSWMycXl1QlpHNkhpZ1VVem5sQVp1TEpsdVV1dTVWM3NHSWd0Z3VpWTQ5VDhYeHZEcmlEcjJXVkl5Y3dwY05OeVlHdDRET3pLYXd6L2hlNS9zZzlBcW0rYVZmMmlWRklWWXJBNEhEc1F4Q1M3VHdxdjA1NWdUcUZ3eENOQTFqeHBlY21IaFRBSHdnTTNvaFJ2aGNtcWVwYU9PUkdMMkpMWlpyRzZUYUQ3MkFHanRNeDRnTHI5SmJibDRNeDQwMTdpdDZPbXBiSmRMUWpBRFdENFZSaDdyMlhtS2VYVFZIZWNGdG42MW44WXlnNkhTK0hFcmFLODNwZG9XVlRia3BMb25sN0ZIbmpRVGliRzFtbzRUWlJlZWdNWjdqVWRkRWhYVmQwRytKaWZxS3YxZ3dKSnlwd3RMTVZGZGhxakIrTWZDRDVnQ204TkFwWWRzRk51Rkc1N2l6ZnNOdDZGNU1pU3RiYmJNNTZRUXZOUGZSWFBpdDNHdE9SK0tMNWo4dGI0WVlUNCtYUXRXMjVucFo2YU82MkQwdWlCdFppUmNTMHFMNjl2NTlUZlFEK1dmL0ZPMmloZHFYYVA0d3JDeGNkTHZ4dzE0RUw3L3lIamJ0K3RxYzNySjk3TDBkOEdMNzJMMWsxZHVRc3RsWXhya0NTZlkyWmsvTzQrcTZYbVdYSkZxNitlcHlNYTYzUHRzUExZUjdFeGlQUHdQclovTURNY0JIeS81b1B2NWlQUnAvdXpXZDduOW9MdnpyWXZ1N3hYL1ZkdmpTcGJyL29mVmcvRVhmNGJkN2RkanV1aysvcXZ6VzhGbmNqdit1NFhCL093U3VWdTZ0TTJVdGJxTmJPK3Z6U2JlMlQ5WFZlVmRXbjl0WjkvK21mZmovNzJUYy8vNS9nQUwxcVg0V0FBQT0ifQ.m8Swr7_fAofYqRNFcaAreMgZZuav60yH2-EYKVfP66xrL2NK3lPHl7vRx4cXO9X5YYy86HtXgdzR7jAMdeOwQA</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>