<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="7a797db4-9d5d-436f-9e27-919d62fcad7f" activeEnvironment="Default" name="Infinite Auth" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testSuite id="beed602b-191a-4d5d-9443-0c1af9470544" name="Infinite Auth"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="4c69d69e-616a-4b39-892a-9af793c3467d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Infinite Auth" searchProperties="true"><con:settings/><con:testStep type="groovy" name="Init Data" id="70edc71c-71e4-43c6-b2a4-7ecc4f5c4b1f"><con:settings/><con:config><script>context.username = "Daniyal@wirecard.com"
context.password = "Test@567"
//context.username = "mobileapp6@wirecard.com"
//context.password = "Wdp@1234"
context.fiid = 1150
context.DOB = "1991-01-01T00:00:00"</script></con:config></con:testStep><con:testStep type="httprequest" name="Anonymous" id="ceca378a-b04b-44d9-b090-c9a2b90461d6"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="a6c04d1e-2b26-47d1-b326-6e2ed95d6165" name="Anonymous" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>{
  "authorization_name": "Anonymous",
  "scope": {
    "scope_name": "Anonymous Services"
  },
  "identity": {
    "identity_name": "Owner of Accessor Data",
    "authentications": [
      {
        "authentication_name": "Accessor_data",
        "authentication_data": {
          "public_data": {
            "accessor_name": "LMN Multi Currency Native(QA)",
            "platform": "iOS",
            "FIID": "1150",
            "api_major_version": "2.x.x",
            "app_version": "0.10.1",
            "language": "eng",
            "specific_data": {
              "IMEI": "990000862471854",
              "manufacturer": "Apple",
              "model": "A1586"
            }
          },
          "private_data": null
        }
      }
    ]
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Anonymous Response" id="740682bb-f197-42b3-a012-3b1ad1a60a1b"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
context.anonymous_token = l_slurped_json[0].token
assert l_slurped_json[0].token !=""</script></con:config></con:testStep><con:testStep type="httprequest" name="Read" id="4b750057-4ded-402f-83ed-8cb3b06bf5c4"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Read" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.anonymous_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Response" id="a5881d30-881f-4e8d-9c65-871f5d1213d2"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
if (l_slurped_json[0].authorization_name=="Refresh") {
	context.refresh_token = l_slurped_json[0].token
	context.read_token = l_slurped_json[1].token
} else {
	context.refresh_token = l_slurped_json[1].token
	context.read_token = l_slurped_json[0].token
}
context.proxy_number = l_slurped_json[0].scope.data_scope.proxy_number</script></con:config></con:testStep><con:testStep type="httprequest" name="Read Refresh" id="a2ffcf0a-119f-4962-b58a-2c280c211acb"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Read Refresh" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Read",
    "identity": {
      "identity_name": "Owner of Refresh Data",
      "authentications": [
        {
          "authentication_name": "Refresh_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "old_access_token": "${=context.read_token}"
          },
          "private_data": {
            "refresh_token": "${=context.refresh_token}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Main Screen"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.anonymous_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Read Refresh Response" id="fa90b706-cfee-49c8-a52a-4f055a0ab7d5"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
if (l_slurped_json[0].authorization_name=="Refresh") {
	context.refresh_token = l_slurped_json[0].token
	context.read_token = l_slurped_json[1].token
} else {
	context.refresh_token = l_slurped_json[1].token
	context.read_token = l_slurped_json[0].token
}
assert context.refresh_token != ""
assert context.read_token != ""</script></con:config></con:testStep><con:testStep type="groovy" name="Prepare Provisioned User Data Usage" id="91ccae96-0552-4f32-af01-55aece405cc2"><con:settings/><con:config><script>package authentication_modules

import sun.misc.BASE64Decoder
import sun.misc.BASE64Encoder

import java.security.Signature;
import java.security.GeneralSecurityException
import java.security.KeyFactory
import java.security.KeyPair
import java.security.KeyPairGenerator
import java.security.PrivateKey
import java.security.PublicKey
import java.security.spec.PKCS8EncodedKeySpec
import java.security.spec.X509EncodedKeySpec
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.NoSuchAlgorithmException;
import java.security.PrivateKey;
import java.security.PublicKey;

import javax.crypto.Cipher;


public static PrivateKey loadPrivateKey(String key64) throws GeneralSecurityException {
    byte[] clear = new BASE64Decoder().decodeBuffer(key64);
    PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(clear);
    KeyFactory fact = KeyFactory.getInstance("RSA");
    PrivateKey priv = fact.generatePrivate(keySpec);
    Arrays.fill(clear, (byte) 0);
    return priv;
}


public static PublicKey loadPublicKey(String stored) throws GeneralSecurityException {
    byte[] data = new BASE64Decoder().decodeBuffer(stored);
    X509EncodedKeySpec spec = new X509EncodedKeySpec(data);
    KeyFactory fact = KeyFactory.getInstance("RSA");
    return fact.generatePublic(spec);
}

public static String savePrivateKey(PrivateKey priv) throws GeneralSecurityException {
    KeyFactory fact = KeyFactory.getInstance("RSA");
    PKCS8EncodedKeySpec spec = fact.getKeySpec(priv,
            PKCS8EncodedKeySpec.class);
    byte[] packed = spec.getEncoded();
    String key64 = new BASE64Encoder().encode(packed);

    Arrays.fill(packed, (byte) 0);
    return key64;
}


public static String savePublicKey(PublicKey publ) throws GeneralSecurityException {
    KeyFactory fact = KeyFactory.getInstance("RSA");
    X509EncodedKeySpec spec = fact.getKeySpec(publ,
            X509EncodedKeySpec.class);
    return new BASE64Encoder().encode(spec.getEncoded());
}


public static void main(String[] args) throws Exception {
    KeyPairGenerator gen = KeyPairGenerator.getInstance("RSA");
    KeyPair pair = gen.generateKeyPair();

    String pubKey = savePublicKey(pair.getPublic());
    PublicKey pubSaved = loadPublicKey(pubKey);
    System.out.println(pair.getPublic()+"\n"+pubSaved);

    String privKey = savePrivateKey(pair.getPrivate());
    PrivateKey privSaved = loadPrivateKey(privKey);
    System.out.println(pair.getPrivate()+"\n"+privSaved);
}

public static KeyPair buildKeyPair() throws NoSuchAlgorithmException {
    final int keySize = 2048;
    KeyPairGenerator keyPairGenerator = KeyPairGenerator.getInstance("RSA");
    keyPairGenerator.initialize(keySize);
    return keyPairGenerator.genKeyPair();
}

public static byte[] encrypt(PrivateKey privateKey, String message) throws Exception {
    Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
    cipher.init(Cipher.ENCRYPT_MODE, privateKey);

    return cipher.doFinal(message.getBytes());
}

public static byte[] sign(PrivateKey privateKey, String message) throws Exception {
    Signature signature = Signature.getInstance("SHA512withRSA");
    signature.initSign(privateKey);
    signature.update(message.getBytes("US-ASCII"))
    return signature.sign()
}

public static byte[] decrypt(PublicKey publicKey, byte [] encrypted) throws Exception {
    Cipher cipher = Cipher.getInstance("RSA/ECB/PKCS1Padding");
    cipher.init(Cipher.DECRYPT_MODE, publicKey);

    return cipher.doFinal(encrypted);
}
public static Boolean verify(PublicKey publicKey, byte[] bytes, String data) throws Exception {
    Signature signature = Signature.getInstance("SHA512withRSA");
    signature.initVerify(publicKey);
    signature.update(data.getBytes("US-ASCII"))
    return signature.verify(bytes)
}
def l_key_pair = buildKeyPair()
def l_private_key = l_key_pair.getPrivate()
def l_public_key = l_key_pair.getPublic()
context.private_key = savePrivateKey(l_private_key)
context.public_key = savePublicKey(l_key_pair.getPublic())
context.provisioning_unique_id = "MDWL"+new Date().format("yyMMddHHmmssSSS")
String l_signature = new BASE64Encoder().encode(sign(l_private_key, (context.proxy_number + context.provisioning_unique_id)))
context.provisioned_data_signature = l_signature
log.info(context.provisioned_data_signature)
log.info(verify(l_public_key, new BASE64Decoder().decodeBuffer(l_signature), (context.proxy_number + context.provisioning_unique_id)))</script></con:config></con:testStep><con:testStep type="httprequest" name="Provisioned User Data Usage" id="6b5b6d62-d8f2-4e51-8fdb-e61140ab6a20"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Provisioned User Data Usage" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Provisioned User Data Usage",
    "identity": {
      "identity_name": "Owner of User Data and Provisioning Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "Provisioning_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "provisioning_public_key": "${=context.public_key}"
          },
          "private_data": null}
        }
      ]
    },
    "scope": {
      "scope_name": "Prerequisite Usage Only"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Provisioned User Data Usage Response" id="06372060-c748-4d9b-8b65-9ba4c082ea64"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != "" 
context.provisioned_user_data_usage_authorization = l_slurped_json[0].token</script></con:config></con:testStep><con:testStep type="httprequest" name="SendOTPSMS" id="9b981b6f-f694-4e09-862a-08fd20671523"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="SendOTPSMS" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#ResourceURL}/SendOTPSMS</con:endpoint><con:request>{
  "SendOTPSMS": {
    "requestData": {
      "UniqueID": "${="MDWL" + new Date().format("yyMMddHHmmssSSS")}",
      "UniqueIDFlag": "0",
      "ProxyNumber": "${=context.proxy_number}",
      "PhoneNumber": "+971559307088"
    }
  }
}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process SendOTPSMS Response" id="c0512b4d-f039-42ae-9d6f-a1e31370b5d2"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
context.otp_id = l_slurped_json.SendOTPSMSResponse.SendOTPSMSResult.OTPUniqueId
assert context.otp_id != null</script></con:config></con:testStep><con:testStep type="groovy" name="Enter OTP" id="60c0dde6-eee1-4e91-aa2c-e4085292fcb0"><con:settings/><con:config><script>import com.eviware.soapui.support.*
def alert = com.eviware.soapui.support.UISupport
context.otp = alert.prompt("Enter OTP","Enter OTP")</script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates" id="05729bb2-e443-4c32-a18e-754d31c84ac2"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Secured Demographic Updates" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and User Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "otp_id": "${=context.otp_id}",
            "phone_number": "+971559307088"
          },
          "private_data": {
          	"otp": "${=context.otp}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates Response" id="e2667957-b3a6-48a4-8246-e02d9ca70123"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != "" </script></con:config></con:testStep><con:testStep type="httprequest" name="Secured Demographic Updates - Provisioned User Data" id="d7abeac2-b666-4fd5-a499-aa88fccb6278"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Secured Demographic Updates - Provisioned User Data" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>
  {
    "authorization_name": "Secured Demographic Updates",
    "identity": {
      "identity_name": "Owner of OTP Data and Provisioned User Data",
      "authentications": [
        {
          "authentication_name": "Provisioned_user_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "provisioned_data_unique_id": "${=context.provisioning_unique_id}",
            "provisioned_user_data_usage_authorization": "${=context.provisioned_user_data_usage_authorization}",
          },
          "private_data": {
            "provisioned_data_signature": "${=context.provisioned_data_signature}"
          }}
        },
        {
          "authentication_name": "OTP_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}",
            "otp_id": "${=context.otp_id}",
            "phone_number": "+971559307088"
          },
          "private_data": {
          	"otp": "${=context.otp}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Update Phone"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }
</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="groovy" name="Process Secured Demographic Updates - Provisioned User Data Response" id="1a477bd6-567f-4755-9013-40a1c46d0f5c"><con:settings/><con:config><script>import groovy.json.JsonSlurper

def l_content = context.httpResponse.responseContent
def l_slurped_json = new JsonSlurper().parseText(l_content)
assert l_slurped_json[0].token != "" </script></con:config></con:testStep><con:testStep type="httprequest" name="Security Updates" id="c49ba5cb-b1ab-4e9c-a577-dac1820c65b9"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="d79a0ccd-68d5-403f-809e-fc13c8512afc" name="Security Updates" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#InfiniteAuthURL}/Authorizations</con:endpoint><con:request>[
  {
    "authorization_name": "Security Updates",
    "identity": {
      "identity_name": "Owner of User Data and DOB Data",
      "authentications": [
        {
          "authentication_name": "User_data", "authentication_data": {
          "public_data": {
            "username": "${=context.username}"
          },
          "private_data": {
            "password": "${=context.password}"
          }}
        },
        {
          "authentication_name": "DOB_data", "authentication_data": {
          "public_data": {
            "proxy_number": "${=context.proxy_number}"
          },
          "private_data": {
          	"DOB": "${=context.DOB}"
          }}
        }
      ]
    },
    "scope": {
      "scope_name": "Change Password"
    },
    "prerequisite_authorization": {
    	 "token": "${=context.read_token}"
    }
  }
]</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d935b7a9-3ec6-4edb-a3b2-4ef57d9d9908" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Misc" searchProperties="true"><con:settings/><con:testStep type="httprequest" name="Authenticate" id="60e53d7e-347b-48c0-a2ed-b378fda1cc88"><con:settings/><con:config method="POST" xsi:type="con:HttpRequest" id="90cdf065-0f65-4788-9608-28d00d0709cb" name="Authenticate" postQueryString="false" mediaType="application/json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://10.10.99.190:8443/middleware_2_x_x/Rest/Authenticate</con:endpoint><con:request>{"Authenticate": {"requestData": {
  "UniqueID": "${="MDWL"+new Date().format("yyMMddHHmmssSSS")}",
  "CardUserId": "Daniyal@wirecard.com",
  "CurrentPassword": "Test@567",
  "InstitutionID": "1150",
  "UniqueIDFlag": "0"
}}}</con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties><con:property><con:name>InfiniteAuthURL</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>ResourceURL</con:name><con:value>https://10.10.99.190:8443/middleware_2_x_x/Rest</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI</con:name><con:value>https://10.10.99.190:8443/middleware_security</con:value></con:property><con:property><con:name>InfiniteAuthURL_orig</con:name><con:value>http://localhost:8089</con:value></con:property><con:property><con:name>InfiniteAuthURL_WDI2</con:name><con:value>https://wp1.wirecard.com/emea/middleware_security</con:value></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>